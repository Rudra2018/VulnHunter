{
  "analysis_timestamp": "2025-10-12T22:39:52.342509",
  "repositories_analyzed": [
    "/tmp/dotnet_core_analysis",
    "/tmp/aspnetcore_analysis"
  ],
  "total_vulnerabilities": 1728,
  "severity_distribution": {
    "CRITICAL": 703,
    "HIGH": 801,
    "MEDIUM": 224,
    "LOW": 0
  },
  "vulnerability_types": {
    "xxe": [
      {
        "file": "/tmp/aspnetcore_analysis/eng/tools/BaselineGenerator/Program.cs",
        "line": 61,
        "type": "xxe",
        "pattern": "XDocument\\.Load",
        "code": "XDocument.Load",
        "severity": "HIGH",
        "description": "XML External Entity (XXE) vulnerability - potential for data disclosure",
        "recommendation": "Disable external entity processing in XML parsers"
      },
      {
        "file": "/tmp/aspnetcore_analysis/eng/tools/RepoTasks/RemoveSharedFrameworkDependencies.cs",
        "line": 90,
        "type": "xxe",
        "pattern": "XDocument\\.Load",
        "code": "XDocument.Load",
        "severity": "HIGH",
        "description": "XML External Entity (XXE) vulnerability - potential for data disclosure",
        "recommendation": "Disable external entity processing in XML parsers"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Middleware/Rewrite/test/IISUrlRewrite/RewriteMapParserTests.cs",
        "line": 27,
        "type": "xxe",
        "pattern": "XDocument\\.Load",
        "code": "XDocument.Load",
        "severity": "HIGH",
        "description": "XML External Entity (XXE) vulnerability - potential for data disclosure",
        "recommendation": "Disable external entity processing in XML parsers"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Middleware/Rewrite/src/IISUrlRewrite/UrlRewriteFileParser.cs",
        "line": 23,
        "type": "xxe",
        "pattern": "XDocument\\.Load",
        "code": "XDocument.Load",
        "severity": "HIGH",
        "description": "XML External Entity (XXE) vulnerability - potential for data disclosure",
        "recommendation": "Disable external entity processing in XML parsers"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/FileProviders/Embedded/src/Manifest/ManifestParser.cs",
        "line": 36,
        "type": "xxe",
        "pattern": "XDocument\\.Load",
        "code": "XDocument.Load",
        "severity": "HIGH",
        "description": "XML External Entity (XXE) vulnerability - potential for data disclosure",
        "recommendation": "Disable external entity processing in XML parsers"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Tools/dotnet-user-secrets/test/InitCommandTest.cs",
        "line": 96,
        "type": "xxe",
        "pattern": "XDocument\\.Load",
        "code": "XDocument.Load",
        "severity": "HIGH",
        "description": "XML External Entity (XXE) vulnerability - potential for data disclosure",
        "recommendation": "Disable external entity processing in XML parsers"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Tools/dotnet-user-secrets/test/InitCommandTest.cs",
        "line": 105,
        "type": "xxe",
        "pattern": "XDocument\\.Load",
        "code": "XDocument.Load",
        "severity": "HIGH",
        "description": "XML External Entity (XXE) vulnerability - potential for data disclosure",
        "recommendation": "Disable external entity processing in XML parsers"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Tools/dotnet-user-secrets/test/InitCommandTest.cs",
        "line": 110,
        "type": "xxe",
        "pattern": "XDocument\\.Load",
        "code": "XDocument.Load",
        "severity": "HIGH",
        "description": "XML External Entity (XXE) vulnerability - potential for data disclosure",
        "recommendation": "Disable external entity processing in XML parsers"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Tools/Shared/SecretsHelpers/UserSecretsCreator.cs",
        "line": 18,
        "type": "xxe",
        "pattern": "XDocument\\.Load",
        "code": "XDocument.Load",
        "severity": "HIGH",
        "description": "XML External Entity (XXE) vulnerability - potential for data disclosure",
        "recommendation": "Disable external entity processing in XML parsers"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Grpc/JsonTranscoding/test/Microsoft.AspNetCore.Grpc.Swagger.Tests/XmlComments/XmlCommentsDocumentFilterTests.cs",
        "line": 69,
        "type": "xxe",
        "pattern": "XPathDocument",
        "code": "XPathDocument",
        "severity": "HIGH",
        "description": "XML External Entity (XXE) vulnerability - potential for data disclosure",
        "recommendation": "Disable external entity processing in XML parsers"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Grpc/JsonTranscoding/test/Microsoft.AspNetCore.Grpc.JsonTranscoding.Tests/UnaryServerCallHandlerTests.cs",
        "line": 1128,
        "type": "xxe",
        "pattern": "XDocument\\.Load",
        "code": "XDocument.Load",
        "severity": "HIGH",
        "description": "XML External Entity (XXE) vulnerability - potential for data disclosure",
        "recommendation": "Disable external entity processing in XML parsers"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Grpc/JsonTranscoding/test/Microsoft.AspNetCore.Grpc.JsonTranscoding.Tests/UnaryServerCallHandlerTests.cs",
        "line": 1368,
        "type": "xxe",
        "pattern": "XDocument\\.Load",
        "code": "XDocument.Load",
        "severity": "HIGH",
        "description": "XML External Entity (XXE) vulnerability - potential for data disclosure",
        "recommendation": "Disable external entity processing in XML parsers"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Grpc/JsonTranscoding/src/Microsoft.AspNetCore.Grpc.Swagger/GrpcSwaggerGenOptionsExtensions.cs",
        "line": 19,
        "type": "xxe",
        "pattern": "XPathDocument",
        "code": "XPathDocument",
        "severity": "HIGH",
        "description": "XML External Entity (XXE) vulnerability - potential for data disclosure",
        "recommendation": "Disable external entity processing in XML parsers"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Grpc/JsonTranscoding/src/Microsoft.AspNetCore.Grpc.Swagger/GrpcSwaggerGenOptionsExtensions.cs",
        "line": 22,
        "type": "xxe",
        "pattern": "XPathDocument",
        "code": "XPathDocument",
        "severity": "HIGH",
        "description": "XML External Entity (XXE) vulnerability - potential for data disclosure",
        "recommendation": "Disable external entity processing in XML parsers"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Grpc/JsonTranscoding/src/Microsoft.AspNetCore.Grpc.Swagger/GrpcSwaggerGenOptionsExtensions.cs",
        "line": 31,
        "type": "xxe",
        "pattern": "XPathDocument",
        "code": "XPathDocument",
        "severity": "HIGH",
        "description": "XML External Entity (XXE) vulnerability - potential for data disclosure",
        "recommendation": "Disable external entity processing in XML parsers"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Grpc/JsonTranscoding/src/Microsoft.AspNetCore.Grpc.Swagger/GrpcSwaggerGenOptionsExtensions.cs",
        "line": 38,
        "type": "xxe",
        "pattern": "XPathDocument",
        "code": "XPathDocument",
        "severity": "HIGH",
        "description": "XML External Entity (XXE) vulnerability - potential for data disclosure",
        "recommendation": "Disable external entity processing in XML parsers"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Grpc/JsonTranscoding/src/Microsoft.AspNetCore.Grpc.Swagger/GrpcSwaggerGenOptionsExtensions.cs",
        "line": 59,
        "type": "xxe",
        "pattern": "XPathDocument",
        "code": "XPathDocument",
        "severity": "HIGH",
        "description": "XML External Entity (XXE) vulnerability - potential for data disclosure",
        "recommendation": "Disable external entity processing in XML parsers"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Grpc/JsonTranscoding/src/Microsoft.AspNetCore.Grpc.Swagger/GrpcSwaggerGenOptionsExtensions.cs",
        "line": 76,
        "type": "xxe",
        "pattern": "XPathDocument",
        "code": "XPathDocument",
        "severity": "HIGH",
        "description": "XML External Entity (XXE) vulnerability - potential for data disclosure",
        "recommendation": "Disable external entity processing in XML parsers"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Grpc/JsonTranscoding/src/Microsoft.AspNetCore.Grpc.Swagger/Internal/XmlComments/GrpcXmlCommentsOperationFilter.cs",
        "line": 17,
        "type": "xxe",
        "pattern": "XPathDocument",
        "code": "XPathDocument",
        "severity": "HIGH",
        "description": "XML External Entity (XXE) vulnerability - potential for data disclosure",
        "recommendation": "Disable external entity processing in XML parsers"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Grpc/JsonTranscoding/src/Microsoft.AspNetCore.Grpc.Swagger/Internal/XmlComments/GrpcXmlCommentsDocumentFilter.cs",
        "line": 21,
        "type": "xxe",
        "pattern": "XPathDocument",
        "code": "XPathDocument",
        "severity": "HIGH",
        "description": "XML External Entity (XXE) vulnerability - potential for data disclosure",
        "recommendation": "Disable external entity processing in XML parsers"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Framework/test/SharedFxTests.cs",
        "line": 268,
        "type": "xxe",
        "pattern": "XDocument\\.Load",
        "code": "XDocument.Load",
        "severity": "HIGH",
        "description": "XML External Entity (XXE) vulnerability - potential for data disclosure",
        "recommendation": "Disable external entity processing in XML parsers"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Framework/test/SharedFxTests.cs",
        "line": 321,
        "type": "xxe",
        "pattern": "XDocument\\.Load",
        "code": "XDocument.Load",
        "severity": "HIGH",
        "description": "XML External Entity (XXE) vulnerability - potential for data disclosure",
        "recommendation": "Disable external entity processing in XML parsers"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Framework/test/TargetingPackTests.cs",
        "line": 316,
        "type": "xxe",
        "pattern": "XDocument\\.Load",
        "code": "XDocument.Load",
        "severity": "HIGH",
        "description": "XML External Entity (XXE) vulnerability - potential for data disclosure",
        "recommendation": "Disable external entity processing in XML parsers"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Framework/test/TargetingPackTests.cs",
        "line": 379,
        "type": "xxe",
        "pattern": "XDocument\\.Load",
        "code": "XDocument.Load",
        "severity": "HIGH",
        "description": "XML External Entity (XXE) vulnerability - potential for data disclosure",
        "recommendation": "Disable external entity processing in XML parsers"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Framework/test/TargetingPackTests.cs",
        "line": 421,
        "type": "xxe",
        "pattern": "XDocument\\.Load",
        "code": "XDocument.Load",
        "severity": "HIGH",
        "description": "XML External Entity (XXE) vulnerability - potential for data disclosure",
        "recommendation": "Disable external entity processing in XML parsers"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/src/XmlEncryption/EncryptedXmlDecryptor.cs",
        "line": 93,
        "type": "xxe",
        "pattern": "XslCompiledTransform",
        "code": "XslCompiledTransform",
        "severity": "HIGH",
        "description": "XML External Entity (XXE) vulnerability - potential for data disclosure",
        "recommendation": "Disable external entity processing in XML parsers"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Hosting/Server.IntegrationTesting/src/Deployers/RemoteWindowsDeployer/RemoteWindowsDeployer.cs",
        "line": 154,
        "type": "xxe",
        "pattern": "XDocument\\.Load",
        "code": "XDocument.Load",
        "severity": "HIGH",
        "description": "XML External Entity (XXE) vulnerability - potential for data disclosure",
        "recommendation": "Disable external entity processing in XML parsers"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Hosting/Server.IntegrationTesting/src/xunit/IISExpressAncmSchema.cs",
        "line": 35,
        "type": "xxe",
        "pattern": "XDocument\\.Load",
        "code": "XDocument.Load",
        "severity": "HIGH",
        "description": "XML External Entity (XXE) vulnerability - potential for data disclosure",
        "recommendation": "Disable external entity processing in XML parsers"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/IIS/IntegrationTesting.IIS/src/IISDeployerBase.cs",
        "line": 25,
        "type": "xxe",
        "pattern": "XDocument\\.Load",
        "code": "XDocument.Load",
        "severity": "HIGH",
        "description": "XML External Entity (XXE) vulnerability - potential for data disclosure",
        "recommendation": "Disable external entity processing in XML parsers"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/IIS/IntegrationTesting.IIS/src/IISDeployerBase.cs",
        "line": 44,
        "type": "xxe",
        "pattern": "XDocument\\.Load",
        "code": "XDocument.Load",
        "severity": "HIGH",
        "description": "XML External Entity (XXE) vulnerability - potential for data disclosure",
        "recommendation": "Disable external entity processing in XML parsers"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/IIS/IIS/test/Common.FunctionalTests/FrebTests.cs",
        "line": 151,
        "type": "xxe",
        "pattern": "XDocument\\.Load",
        "code": "XDocument.Load",
        "severity": "HIGH",
        "description": "XML External Entity (XXE) vulnerability - potential for data disclosure",
        "recommendation": "Disable external entity processing in XML parsers"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/IIS/IIS/test/Common.FunctionalTests/MultiApplicationTests.cs",
        "line": 102,
        "type": "xxe",
        "pattern": "XDocument\\.Load",
        "code": "XDocument.Load",
        "severity": "HIGH",
        "description": "XML External Entity (XXE) vulnerability - potential for data disclosure",
        "recommendation": "Disable external entity processing in XML parsers"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/IIS/IIS/test/Common.FunctionalTests/Infrastructure/RequiresIISAttribute.cs",
        "line": 78,
        "type": "xxe",
        "pattern": "XDocument\\.Load",
        "code": "XDocument.Load",
        "severity": "HIGH",
        "description": "XML External Entity (XXE) vulnerability - potential for data disclosure",
        "recommendation": "Disable external entity processing in XML parsers"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/IIS/IIS/test/Common.FunctionalTests/Infrastructure/Helpers.cs",
        "line": 100,
        "type": "xxe",
        "pattern": "XDocument\\.Load",
        "code": "XDocument.Load",
        "severity": "HIGH",
        "description": "XML External Entity (XXE) vulnerability - potential for data disclosure",
        "recommendation": "Disable external entity processing in XML parsers"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/IIS/IIS/test/IIS.Tests/Utilities/TestServer.cs",
        "line": 125,
        "type": "xxe",
        "pattern": "XDocument\\.Load",
        "code": "XDocument.Load",
        "severity": "HIGH",
        "description": "XML External Entity (XXE) vulnerability - potential for data disclosure",
        "recommendation": "Disable external entity processing in XML parsers"
      }
    ],
    "xss": [
      {
        "file": "/tmp/aspnetcore_analysis/src/Middleware/ResponseCaching/test/TestUtils.cs",
        "line": 101,
        "type": "xss",
        "pattern": "Response\\.Write\\(.*\\)",
        "code": "Response.Write(uniqueId)",
        "severity": "HIGH",
        "description": "Cross-Site Scripting (XSS) vulnerability - potential for client-side code injection",
        "recommendation": "Encode output, use AntiXSS library, implement CSP"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Middleware/WebSockets/samples/AutobahnTestAppAspNet4/EchoSocket.ashx.cs",
        "line": 29,
        "type": "xss",
        "pattern": "Response\\.Write\\(.*\\)",
        "code": "Response.Write(\"Ready to accept WebSocket request at: \" + context.Request.Url.ToString().Replace(\"https://\", \"wss://\").Replace(\"http://\", \"ws://\"))",
        "severity": "HIGH",
        "description": "Cross-Site Scripting (XSS) vulnerability - potential for client-side code injection",
        "recommendation": "Encode output, use AntiXSS library, implement CSP"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Middleware/OutputCaching/test/TestUtils.cs",
        "line": 76,
        "type": "xss",
        "pattern": "Response\\.Write\\(.*\\)",
        "code": "Response.Write(uniqueId)",
        "severity": "HIGH",
        "description": "Cross-Site Scripting (XSS) vulnerability - potential for client-side code injection",
        "recommendation": "Encode output, use AntiXSS library, implement CSP"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Middleware/OutputCaching/test/OutputCacheMiddlewareTests.cs",
        "line": 877,
        "type": "xss",
        "pattern": "Response\\.Write\\(.*\\)",
        "code": "Response.Write(\"Hello\" + responseCounter)",
        "severity": "HIGH",
        "description": "Cross-Site Scripting (XSS) vulnerability - potential for client-side code injection",
        "recommendation": "Encode output, use AntiXSS library, implement CSP"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Middleware/OutputCaching/test/OutputCacheMiddlewareTests.cs",
        "line": 943,
        "type": "xss",
        "pattern": "Response\\.Write\\(.*\\)",
        "code": "Response.Write(\"Hello\" + responseCounter)",
        "severity": "HIGH",
        "description": "Cross-Site Scripting (XSS) vulnerability - potential for client-side code injection",
        "recommendation": "Encode output, use AntiXSS library, implement CSP"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Middleware/Diagnostics.EntityFrameworkCore/src/Views/DatabaseErrorPage.Designer.cs",
        "line": 376,
        "type": "xss",
        "pattern": "innerHTML\\s*=",
        "code": "innerHTML =",
        "severity": "HIGH",
        "description": "Cross-Site Scripting (XSS) vulnerability - potential for client-side code injection",
        "recommendation": "Encode output, use AntiXSS library, implement CSP"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Middleware/Diagnostics.EntityFrameworkCore/src/Views/DatabaseErrorPage.Designer.cs",
        "line": 376,
        "type": "xss",
        "pattern": "innerHTML\\s*=",
        "code": "innerHTML =",
        "severity": "HIGH",
        "description": "Cross-Site Scripting (XSS) vulnerability - potential for client-side code injection",
        "recommendation": "Encode output, use AntiXSS library, implement CSP"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Middleware/Diagnostics.EntityFrameworkCore/src/Views/DatabaseErrorPage.Designer.cs",
        "line": 384,
        "type": "xss",
        "pattern": "innerHTML\\s*=",
        "code": "innerHTML =",
        "severity": "HIGH",
        "description": "Cross-Site Scripting (XSS) vulnerability - potential for client-side code injection",
        "recommendation": "Encode output, use AntiXSS library, implement CSP"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Middleware/Diagnostics.EntityFrameworkCore/src/Views/DatabaseErrorPage.Designer.cs",
        "line": 392,
        "type": "xss",
        "pattern": "innerHTML\\s*=",
        "code": "innerHTML =",
        "severity": "HIGH",
        "description": "Cross-Site Scripting (XSS) vulnerability - potential for client-side code injection",
        "recommendation": "Encode output, use AntiXSS library, implement CSP"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Middleware/Diagnostics.EntityFrameworkCore/src/Views/DatabaseErrorPage.Designer.cs",
        "line": 425,
        "type": "xss",
        "pattern": "innerHTML\\s*=",
        "code": "innerHTML =",
        "severity": "HIGH",
        "description": "Cross-Site Scripting (XSS) vulnerability - potential for client-side code injection",
        "recommendation": "Encode output, use AntiXSS library, implement CSP"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Middleware/Diagnostics.EntityFrameworkCore/src/Views/DatabaseErrorPage.Designer.cs",
        "line": 433,
        "type": "xss",
        "pattern": "innerHTML\\s*=",
        "code": "innerHTML =",
        "severity": "HIGH",
        "description": "Cross-Site Scripting (XSS) vulnerability - potential for client-side code injection",
        "recommendation": "Encode output, use AntiXSS library, implement CSP"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.ViewFeatures/test/ViewDataDictionaryTest.cs",
        "line": 492,
        "type": "xss",
        "pattern": "eval\\(",
        "code": "Eval(",
        "severity": "HIGH",
        "description": "Cross-Site Scripting (XSS) vulnerability - potential for client-side code injection",
        "recommendation": "Encode output, use AntiXSS library, implement CSP"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.ViewFeatures/test/ViewDataDictionaryTest.cs",
        "line": 506,
        "type": "xss",
        "pattern": "eval\\(",
        "code": "Eval(",
        "severity": "HIGH",
        "description": "Cross-Site Scripting (XSS) vulnerability - potential for client-side code injection",
        "recommendation": "Encode output, use AntiXSS library, implement CSP"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.ViewFeatures/test/ViewDataDictionaryTest.cs",
        "line": 521,
        "type": "xss",
        "pattern": "eval\\(",
        "code": "Eval(",
        "severity": "HIGH",
        "description": "Cross-Site Scripting (XSS) vulnerability - potential for client-side code injection",
        "recommendation": "Encode output, use AntiXSS library, implement CSP"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.ViewFeatures/test/ViewDataDictionaryTest.cs",
        "line": 535,
        "type": "xss",
        "pattern": "eval\\(",
        "code": "Eval(",
        "severity": "HIGH",
        "description": "Cross-Site Scripting (XSS) vulnerability - potential for client-side code injection",
        "recommendation": "Encode output, use AntiXSS library, implement CSP"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.ViewFeatures/test/ViewDataDictionaryTest.cs",
        "line": 549,
        "type": "xss",
        "pattern": "eval\\(",
        "code": "Eval(",
        "severity": "HIGH",
        "description": "Cross-Site Scripting (XSS) vulnerability - potential for client-side code injection",
        "recommendation": "Encode output, use AntiXSS library, implement CSP"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.ViewFeatures/test/ViewDataDictionaryTest.cs",
        "line": 563,
        "type": "xss",
        "pattern": "eval\\(",
        "code": "Eval(",
        "severity": "HIGH",
        "description": "Cross-Site Scripting (XSS) vulnerability - potential for client-side code injection",
        "recommendation": "Encode output, use AntiXSS library, implement CSP"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.ViewFeatures/test/ViewDataDictionaryTest.cs",
        "line": 570,
        "type": "xss",
        "pattern": "eval\\(",
        "code": "Eval(",
        "severity": "HIGH",
        "description": "Cross-Site Scripting (XSS) vulnerability - potential for client-side code injection",
        "recommendation": "Encode output, use AntiXSS library, implement CSP"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.ViewFeatures/test/ViewDataDictionaryTest.cs",
        "line": 577,
        "type": "xss",
        "pattern": "eval\\(",
        "code": "Eval(",
        "severity": "HIGH",
        "description": "Cross-Site Scripting (XSS) vulnerability - potential for client-side code injection",
        "recommendation": "Encode output, use AntiXSS library, implement CSP"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.ViewFeatures/test/ViewDataDictionaryTest.cs",
        "line": 591,
        "type": "xss",
        "pattern": "eval\\(",
        "code": "Eval(",
        "severity": "HIGH",
        "description": "Cross-Site Scripting (XSS) vulnerability - potential for client-side code injection",
        "recommendation": "Encode output, use AntiXSS library, implement CSP"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.ViewFeatures/test/ViewDataDictionaryTest.cs",
        "line": 609,
        "type": "xss",
        "pattern": "eval\\(",
        "code": "Eval(",
        "severity": "HIGH",
        "description": "Cross-Site Scripting (XSS) vulnerability - potential for client-side code injection",
        "recommendation": "Encode output, use AntiXSS library, implement CSP"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.ViewFeatures/test/ViewDataDictionaryTest.cs",
        "line": 627,
        "type": "xss",
        "pattern": "eval\\(",
        "code": "Eval(",
        "severity": "HIGH",
        "description": "Cross-Site Scripting (XSS) vulnerability - potential for client-side code injection",
        "recommendation": "Encode output, use AntiXSS library, implement CSP"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.ViewFeatures/test/ViewDataDictionaryTest.cs",
        "line": 645,
        "type": "xss",
        "pattern": "eval\\(",
        "code": "Eval(",
        "severity": "HIGH",
        "description": "Cross-Site Scripting (XSS) vulnerability - potential for client-side code injection",
        "recommendation": "Encode output, use AntiXSS library, implement CSP"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.ViewFeatures/test/ViewDataDictionaryTest.cs",
        "line": 662,
        "type": "xss",
        "pattern": "eval\\(",
        "code": "Eval(",
        "severity": "HIGH",
        "description": "Cross-Site Scripting (XSS) vulnerability - potential for client-side code injection",
        "recommendation": "Encode output, use AntiXSS library, implement CSP"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.ViewFeatures/test/ViewDataDictionaryTest.cs",
        "line": 676,
        "type": "xss",
        "pattern": "eval\\(",
        "code": "Eval(",
        "severity": "HIGH",
        "description": "Cross-Site Scripting (XSS) vulnerability - potential for client-side code injection",
        "recommendation": "Encode output, use AntiXSS library, implement CSP"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.ViewFeatures/test/ViewDataDictionaryTest.cs",
        "line": 690,
        "type": "xss",
        "pattern": "eval\\(",
        "code": "Eval(",
        "severity": "HIGH",
        "description": "Cross-Site Scripting (XSS) vulnerability - potential for client-side code injection",
        "recommendation": "Encode output, use AntiXSS library, implement CSP"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.ViewFeatures/test/ViewDataDictionaryTest.cs",
        "line": 711,
        "type": "xss",
        "pattern": "eval\\(",
        "code": "Eval(",
        "severity": "HIGH",
        "description": "Cross-Site Scripting (XSS) vulnerability - potential for client-side code injection",
        "recommendation": "Encode output, use AntiXSS library, implement CSP"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.ViewFeatures/test/ViewDataDictionaryTest.cs",
        "line": 724,
        "type": "xss",
        "pattern": "eval\\(",
        "code": "Eval(",
        "severity": "HIGH",
        "description": "Cross-Site Scripting (XSS) vulnerability - potential for client-side code injection",
        "recommendation": "Encode output, use AntiXSS library, implement CSP"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.ViewFeatures/test/ViewDataDictionaryTest.cs",
        "line": 738,
        "type": "xss",
        "pattern": "eval\\(",
        "code": "Eval(",
        "severity": "HIGH",
        "description": "Cross-Site Scripting (XSS) vulnerability - potential for client-side code injection",
        "recommendation": "Encode output, use AntiXSS library, implement CSP"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.ViewFeatures/test/ViewDataDictionaryTest.cs",
        "line": 752,
        "type": "xss",
        "pattern": "eval\\(",
        "code": "Eval(",
        "severity": "HIGH",
        "description": "Cross-Site Scripting (XSS) vulnerability - potential for client-side code injection",
        "recommendation": "Encode output, use AntiXSS library, implement CSP"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.ViewFeatures/test/ViewDataDictionaryTest.cs",
        "line": 773,
        "type": "xss",
        "pattern": "eval\\(",
        "code": "Eval(",
        "severity": "HIGH",
        "description": "Cross-Site Scripting (XSS) vulnerability - potential for client-side code injection",
        "recommendation": "Encode output, use AntiXSS library, implement CSP"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.ViewFeatures/test/ViewDataDictionaryTest.cs",
        "line": 794,
        "type": "xss",
        "pattern": "eval\\(",
        "code": "Eval(",
        "severity": "HIGH",
        "description": "Cross-Site Scripting (XSS) vulnerability - potential for client-side code injection",
        "recommendation": "Encode output, use AntiXSS library, implement CSP"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.ViewFeatures/test/Rendering/TagBuilderTest.cs",
        "line": 190,
        "type": "xss",
        "pattern": "innerHTML\\s*=",
        "code": "innerHtml =",
        "severity": "HIGH",
        "description": "Cross-Site Scripting (XSS) vulnerability - potential for client-side code injection",
        "recommendation": "Encode output, use AntiXSS library, implement CSP"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.ViewFeatures/src/DefaultHtmlGenerator.cs",
        "line": 918,
        "type": "xss",
        "pattern": "eval\\(",
        "code": "Eval(",
        "severity": "HIGH",
        "description": "Cross-Site Scripting (XSS) vulnerability - potential for client-side code injection",
        "recommendation": "Encode output, use AntiXSS library, implement CSP"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.ViewFeatures/src/DefaultHtmlGenerator.cs",
        "line": 1030,
        "type": "xss",
        "pattern": "eval\\(",
        "code": "Eval(",
        "severity": "HIGH",
        "description": "Cross-Site Scripting (XSS) vulnerability - potential for client-side code injection",
        "recommendation": "Encode output, use AntiXSS library, implement CSP"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.ViewFeatures/src/DefaultHtmlGenerator.cs",
        "line": 1410,
        "type": "xss",
        "pattern": "eval\\(",
        "code": "Eval(",
        "severity": "HIGH",
        "description": "Cross-Site Scripting (XSS) vulnerability - potential for client-side code injection",
        "recommendation": "Encode output, use AntiXSS library, implement CSP"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.ViewFeatures/src/DefaultHtmlGenerator.cs",
        "line": 1415,
        "type": "xss",
        "pattern": "eval\\(",
        "code": "Eval(",
        "severity": "HIGH",
        "description": "Cross-Site Scripting (XSS) vulnerability - potential for client-side code injection",
        "recommendation": "Encode output, use AntiXSS library, implement CSP"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.ViewFeatures/src/DefaultHtmlGenerator.cs",
        "line": 1494,
        "type": "xss",
        "pattern": "eval\\(",
        "code": "Eval(",
        "severity": "HIGH",
        "description": "Cross-Site Scripting (XSS) vulnerability - potential for client-side code injection",
        "recommendation": "Encode output, use AntiXSS library, implement CSP"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.ViewFeatures/src/DefaultHtmlGenerator.cs",
        "line": 1504,
        "type": "xss",
        "pattern": "eval\\(",
        "code": "Eval(",
        "severity": "HIGH",
        "description": "Cross-Site Scripting (XSS) vulnerability - potential for client-side code injection",
        "recommendation": "Encode output, use AntiXSS library, implement CSP"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.ViewFeatures/src/ViewDataEvaluator.cs",
        "line": 25,
        "type": "xss",
        "pattern": "eval\\(",
        "code": "Eval(",
        "severity": "HIGH",
        "description": "Cross-Site Scripting (XSS) vulnerability - potential for client-side code injection",
        "recommendation": "Encode output, use AntiXSS library, implement CSP"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.ViewFeatures/src/ViewDataEvaluator.cs",
        "line": 76,
        "type": "xss",
        "pattern": "eval\\(",
        "code": "Eval(",
        "severity": "HIGH",
        "description": "Cross-Site Scripting (XSS) vulnerability - potential for client-side code injection",
        "recommendation": "Encode output, use AntiXSS library, implement CSP"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.ViewFeatures/src/ViewDataEvaluator.cs",
        "line": 78,
        "type": "xss",
        "pattern": "eval\\(",
        "code": "Eval(",
        "severity": "HIGH",
        "description": "Cross-Site Scripting (XSS) vulnerability - potential for client-side code injection",
        "recommendation": "Encode output, use AntiXSS library, implement CSP"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.ViewFeatures/src/ViewDataEvaluator.cs",
        "line": 137,
        "type": "xss",
        "pattern": "eval\\(",
        "code": "Eval(",
        "severity": "HIGH",
        "description": "Cross-Site Scripting (XSS) vulnerability - potential for client-side code injection",
        "recommendation": "Encode output, use AntiXSS library, implement CSP"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.ViewFeatures/src/ViewDataDictionary.cs",
        "line": 359,
        "type": "xss",
        "pattern": "eval\\(",
        "code": "Eval(",
        "severity": "HIGH",
        "description": "Cross-Site Scripting (XSS) vulnerability - potential for client-side code injection",
        "recommendation": "Encode output, use AntiXSS library, implement CSP"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.ViewFeatures/src/ViewDataDictionary.cs",
        "line": 381,
        "type": "xss",
        "pattern": "eval\\(",
        "code": "Eval(",
        "severity": "HIGH",
        "description": "Cross-Site Scripting (XSS) vulnerability - potential for client-side code injection",
        "recommendation": "Encode output, use AntiXSS library, implement CSP"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.ViewFeatures/src/ViewDataDictionary.cs",
        "line": 383,
        "type": "xss",
        "pattern": "eval\\(",
        "code": "Eval(",
        "severity": "HIGH",
        "description": "Cross-Site Scripting (XSS) vulnerability - potential for client-side code injection",
        "recommendation": "Encode output, use AntiXSS library, implement CSP"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.ViewFeatures/src/ViewDataDictionary.cs",
        "line": 430,
        "type": "xss",
        "pattern": "eval\\(",
        "code": "Eval(",
        "severity": "HIGH",
        "description": "Cross-Site Scripting (XSS) vulnerability - potential for client-side code injection",
        "recommendation": "Encode output, use AntiXSS library, implement CSP"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.ViewFeatures/src/ExpressionMetadataProvider.cs",
        "line": 143,
        "type": "xss",
        "pattern": "eval\\(",
        "code": "Eval(",
        "severity": "HIGH",
        "description": "Cross-Site Scripting (XSS) vulnerability - potential for client-side code injection",
        "recommendation": "Encode output, use AntiXSS library, implement CSP"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.ViewFeatures/src/IHtmlGenerator.cs",
        "line": 566,
        "type": "xss",
        "pattern": "eval\\(",
        "code": "Eval(",
        "severity": "HIGH",
        "description": "Cross-Site Scripting (XSS) vulnerability - potential for client-side code injection",
        "recommendation": "Encode output, use AntiXSS library, implement CSP"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.ViewFeatures/src/Rendering/MultiSelectList.cs",
        "line": 163,
        "type": "xss",
        "pattern": "eval\\(",
        "code": "Eval(",
        "severity": "HIGH",
        "description": "Cross-Site Scripting (XSS) vulnerability - potential for client-side code injection",
        "recommendation": "Encode output, use AntiXSS library, implement CSP"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.ViewFeatures/src/Rendering/MultiSelectList.cs",
        "line": 168,
        "type": "xss",
        "pattern": "eval\\(",
        "code": "Eval(",
        "severity": "HIGH",
        "description": "Cross-Site Scripting (XSS) vulnerability - potential for client-side code injection",
        "recommendation": "Encode output, use AntiXSS library, implement CSP"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.ViewFeatures/src/Rendering/MultiSelectList.cs",
        "line": 192,
        "type": "xss",
        "pattern": "eval\\(",
        "code": "Eval(",
        "severity": "HIGH",
        "description": "Cross-Site Scripting (XSS) vulnerability - potential for client-side code injection",
        "recommendation": "Encode output, use AntiXSS library, implement CSP"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.ViewFeatures/src/Rendering/MultiSelectList.cs",
        "line": 202,
        "type": "xss",
        "pattern": "eval\\(",
        "code": "Eval(",
        "severity": "HIGH",
        "description": "Cross-Site Scripting (XSS) vulnerability - potential for client-side code injection",
        "recommendation": "Encode output, use AntiXSS library, implement CSP"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.ViewFeatures/src/Rendering/MultiSelectList.cs",
        "line": 207,
        "type": "xss",
        "pattern": "eval\\(",
        "code": "Eval(",
        "severity": "HIGH",
        "description": "Cross-Site Scripting (XSS) vulnerability - potential for client-side code injection",
        "recommendation": "Encode output, use AntiXSS library, implement CSP"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.ViewFeatures/src/Rendering/MultiSelectList.cs",
        "line": 221,
        "type": "xss",
        "pattern": "eval\\(",
        "code": "Eval(",
        "severity": "HIGH",
        "description": "Cross-Site Scripting (XSS) vulnerability - potential for client-side code injection",
        "recommendation": "Encode output, use AntiXSS library, implement CSP"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.ViewFeatures/src/Rendering/TagBuilder.cs",
        "line": 94,
        "type": "xss",
        "pattern": "innerHTML\\s*=",
        "code": "innerHtml =",
        "severity": "HIGH",
        "description": "Cross-Site Scripting (XSS) vulnerability - potential for client-side code injection",
        "recommendation": "Encode output, use AntiXSS library, implement CSP"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.ViewFeatures/src/Rendering/TagBuilder.cs",
        "line": 96,
        "type": "xss",
        "pattern": "innerHTML\\s*=",
        "code": "innerHtml =",
        "severity": "HIGH",
        "description": "Cross-Site Scripting (XSS) vulnerability - potential for client-side code injection",
        "recommendation": "Encode output, use AntiXSS library, implement CSP"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.ViewFeatures/src/Rendering/TagBuilder.cs",
        "line": 106,
        "type": "xss",
        "pattern": "innerHTML\\s*=",
        "code": "InnerHtml =",
        "severity": "HIGH",
        "description": "Cross-Site Scripting (XSS) vulnerability - potential for client-side code injection",
        "recommendation": "Encode output, use AntiXSS library, implement CSP"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.TagHelpers/test/ScriptTagHelperTest.cs",
        "line": 915,
        "type": "xss",
        "pattern": "document\\.write\\(",
        "code": "document.write(",
        "severity": "HIGH",
        "description": "Cross-Site Scripting (XSS) vulnerability - potential for client-side code injection",
        "recommendation": "Encode output, use AntiXSS library, implement CSP"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.TagHelpers/test/ScriptTagHelperTest.cs",
        "line": 947,
        "type": "xss",
        "pattern": "document\\.write\\(",
        "code": "document.write(",
        "severity": "HIGH",
        "description": "Cross-Site Scripting (XSS) vulnerability - potential for client-side code injection",
        "recommendation": "Encode output, use AntiXSS library, implement CSP"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.TagHelpers/test/ScriptTagHelperTest.cs",
        "line": 961,
        "type": "xss",
        "pattern": "document\\.write\\(",
        "code": "document.write(",
        "severity": "HIGH",
        "description": "Cross-Site Scripting (XSS) vulnerability - potential for client-side code injection",
        "recommendation": "Encode output, use AntiXSS library, implement CSP"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.TagHelpers/src/ScriptTagHelper.cs",
        "line": 375,
        "type": "xss",
        "pattern": "document\\.write\\(",
        "code": "document.write(",
        "severity": "HIGH",
        "description": "Cross-Site Scripting (XSS) vulnerability - potential for client-side code injection",
        "recommendation": "Encode output, use AntiXSS library, implement CSP"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Shared/E2ETesting/WaitAssert.cs",
        "line": 127,
        "type": "xss",
        "pattern": "innerHTML\\s*=",
        "code": "innerHtml =",
        "severity": "HIGH",
        "description": "Cross-Site Scripting (XSS) vulnerability - potential for client-side code injection",
        "recommendation": "Encode output, use AntiXSS library, implement CSP"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Components/benchmarkapps/Wasm.Performance/Driver/Program.cs",
        "line": 95,
        "type": "xss",
        "pattern": "innerHTML\\s*=",
        "code": "innerHtml =",
        "severity": "HIGH",
        "description": "Cross-Site Scripting (XSS) vulnerability - potential for client-side code injection",
        "recommendation": "Encode output, use AntiXSS library, implement CSP"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Components/Endpoints/test/EndpointHtmlRendererTest.cs",
        "line": 1216,
        "type": "xss",
        "pattern": "innerHTML\\s*=",
        "code": "innerHtml =",
        "severity": "HIGH",
        "description": "Cross-Site Scripting (XSS) vulnerability - potential for client-side code injection",
        "recommendation": "Encode output, use AntiXSS library, implement CSP"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Components/Endpoints/test/EndpointHtmlRendererTest.cs",
        "line": 1273,
        "type": "xss",
        "pattern": "innerHTML\\s*=",
        "code": "innerHtml =",
        "severity": "HIGH",
        "description": "Cross-Site Scripting (XSS) vulnerability - potential for client-side code injection",
        "recommendation": "Encode output, use AntiXSS library, implement CSP"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Components/test/testassets/Components.TestServer/RazorComponentEndpointsStartup.cs",
        "line": 254,
        "type": "xss",
        "pattern": "HttpUtility\\.HtmlEncode",
        "code": "HttpUtility.HtmlEncode",
        "severity": "HIGH",
        "description": "Cross-Site Scripting (XSS) vulnerability - potential for client-side code injection",
        "recommendation": "Encode output, use AntiXSS library, implement CSP"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Components/test/testassets/Components.TestServer/RazorComponentEndpointsStartup.cs",
        "line": 254,
        "type": "xss",
        "pattern": "HttpUtility\\.HtmlEncode",
        "code": "HttpUtility.HtmlEncode",
        "severity": "HIGH",
        "description": "Cross-Site Scripting (XSS) vulnerability - potential for client-side code injection",
        "recommendation": "Encode output, use AntiXSS library, implement CSP"
      }
    ],
    "dangerous_api": [
      {
        "file": "/tmp/aspnetcore_analysis/src/Middleware/Diagnostics.EntityFrameworkCore/test/FunctionalTests/Helpers/PlatformHelper.cs",
        "line": 12,
        "type": "dangerous_api",
        "pattern": "Type.GetType",
        "code": "return Type.GetType(\"Mono.Runtime\") != null;",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Type.GetType",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Middleware/Diagnostics.EntityFrameworkCore/test/FunctionalTests/Helpers/StringHelpers.cs",
        "line": 12,
        "type": "dangerous_api",
        "pattern": "Assembly.GetType",
        "code": "var strings = typeof(DatabaseErrorPageMiddleware).Assembly.GetType(\"Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.Strings\").GetTypeInfo();",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Assembly.GetType",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Middleware/Diagnostics.EntityFrameworkCore/test/UnitTests/Helpers/StringHelpers.cs",
        "line": 12,
        "type": "dangerous_api",
        "pattern": "Assembly.GetType",
        "code": "var strings = typeof(DatabaseErrorPageMiddleware).Assembly.GetType(\"Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.Strings\").GetTypeInfo();",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Assembly.GetType",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Analyzers/Microsoft.AspNetCore.Analyzer.Testing/src/DiagnosticProject.cs",
        "line": 101,
        "type": "dangerous_api",
        "pattern": "Assembly.LoadFrom",
        "code": "return Assembly.LoadFrom(fullPath);",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Assembly.LoadFrom",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Tools/GetDocumentInsider/src/Commands/GetDocumentCommand.cs",
        "line": 127,
        "type": "dangerous_api",
        "pattern": "Assembly.LoadFile",
        "code": "return Assembly.LoadFile(assemblyPath);",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Assembly.LoadFile",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/DefaultBuilder/test/Microsoft.AspNetCore.TrimmingTests/X509Utilities.cs",
        "line": 21,
        "type": "dangerous_api",
        "pattern": "Type.GetType",
        "code": "return Type.GetType($\"{typeName}, {assemblyName}\");",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Type.GetType",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Identity/UI/src/Areas/Identity/Pages/V5/Account/Register.cshtml.cs",
        "line": 174,
        "type": "dangerous_api",
        "pattern": "Activator.CreateInstance",
        "code": "return Activator.CreateInstance<TUser>();",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Activator.CreateInstance",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Identity/UI/src/Areas/Identity/Pages/V5/Account/ExternalLogin.cshtml.cs",
        "line": 235,
        "type": "dangerous_api",
        "pattern": "Activator.CreateInstance",
        "code": "return Activator.CreateInstance<TUser>();",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Activator.CreateInstance",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Identity/UI/src/Areas/Identity/Pages/V4/Account/Register.cshtml.cs",
        "line": 174,
        "type": "dangerous_api",
        "pattern": "Activator.CreateInstance",
        "code": "return Activator.CreateInstance<TUser>();",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Activator.CreateInstance",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Identity/UI/src/Areas/Identity/Pages/V4/Account/ExternalLogin.cshtml.cs",
        "line": 235,
        "type": "dangerous_api",
        "pattern": "Activator.CreateInstance",
        "code": "return Activator.CreateInstance<TUser>();",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Activator.CreateInstance",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Razor.RuntimeCompilation/test/AssemblyPartExtensionTest.cs",
        "line": 5,
        "type": "dangerous_api",
        "pattern": "System.Reflection.Emit",
        "code": "using System.Reflection.Emit;",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: System.Reflection.Emit",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.ApiExplorer/test/DefaultApiDescriptionProviderTest.cs",
        "line": 2349,
        "type": "dangerous_api",
        "pattern": "Type.GetType",
        "code": "action.ControllerTypeInfo = controllerType.GetTypeInfo();",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Type.GetType",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.IntegrationTests/AuthorizeFilterIntegrationTest.cs",
        "line": 167,
        "type": "dangerous_api",
        "pattern": "Type.GetType",
        "code": "var context = new ApplicationModelProviderContext(new[] { controllerType.GetTypeInfo() });",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Type.GetType",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.ViewFeatures/test/Filters/AntiforgeryApplicationModelProviderTest.cs",
        "line": 150,
        "type": "dangerous_api",
        "pattern": "Type.GetType",
        "code": "controllerType.GetTypeInfo()",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Type.GetType",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.ViewFeatures/test/ViewComponents/DefaultViewComponentActivatorTests.cs",
        "line": 87,
        "type": "dangerous_api",
        "pattern": "Type.GetType",
        "code": "TypeInfo = componentType.GetTypeInfo()",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Type.GetType",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.ViewFeatures/src/ViewComponents/DefaultViewComponentHelper.cs",
        "line": 99,
        "type": "dangerous_api",
        "pattern": "Type.GetType",
        "code": "if (descriptor.TypeInfo == componentType.GetTypeInfo())",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Type.GetType",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Cors/test/CorsApplicationModelProviderTest.cs",
        "line": 213,
        "type": "dangerous_api",
        "pattern": "Type.GetType",
        "code": "var context = new ApplicationModelProviderContext(new[] { controllerType.GetTypeInfo() });",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Type.GetType",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Analyzers/test/TopLevelParameterNameAnalyzerTest.cs",
        "line": 410,
        "type": "dangerous_api",
        "pattern": "Assembly.GetType",
        "code": "var modelType = compilation.Assembly.GetTypeByMetadataName(\"Microsoft.AspNetCore.Mvc.Analyzers.TopLevelParameterNameAnalyzerTestFiles.TestController\");",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Assembly.GetType",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.RazorPages/test/ApplicationModels/ViewDataAttributePageApplicationModelProviderTest.cs",
        "line": 51,
        "type": "dangerous_api",
        "pattern": "Type.GetType",
        "code": "PageApplicationModel = new PageApplicationModel(descriptor, handlerType.GetTypeInfo(), Array.Empty<object>()),",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Type.GetType",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.RazorPages/test/ApplicationModels/DefaultPageApplicationModelProviderTest.cs",
        "line": 146,
        "type": "dangerous_api",
        "pattern": "Type.GetType",
        "code": ".Where(p => p.PropertyInfo.DeclaringType.GetTypeInfo() == typeInfo);",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Type.GetType",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.RazorPages/test/ApplicationModels/DefaultPageApplicationModelProviderTest.cs",
        "line": 630,
        "type": "dangerous_api",
        "pattern": "Type.GetType",
        "code": ".Where(p => p.PropertyInfo.DeclaringType.GetTypeInfo() == typeInfo);",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Type.GetType",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.RazorPages/test/ApplicationModels/DefaultPageApplicationModelProviderTest.cs",
        "line": 686,
        "type": "dangerous_api",
        "pattern": "Type.GetType",
        "code": "Assert.Equal(typeInfo, handler.MethodInfo.DeclaringType.GetTypeInfo());",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Type.GetType",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.RazorPages/test/ApplicationModels/DefaultPageApplicationModelProviderTest.cs",
        "line": 953,
        "type": "dangerous_api",
        "pattern": "Type.GetType",
        "code": "Assert.Equal(typeof(HidesAProperty).GetTypeInfo(), p.PropertyInfo.DeclaringType.GetTypeInfo());",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Type.GetType",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.RazorPages/test/ApplicationModels/TempDataFilterPageApplicationModelProviderTest.cs",
        "line": 125,
        "type": "dangerous_api",
        "pattern": "Type.GetType",
        "code": "PageApplicationModel = new PageApplicationModel(descriptor, handlerType.GetTypeInfo(), Array.Empty<object>()),",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Type.GetType",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.RazorPages/test/Infrastructure/PageActionInvokerTest.cs",
        "line": 1523,
        "type": "dangerous_api",
        "pattern": "Activator.CreateInstance",
        "code": "var instance = (Page)Activator.CreateInstance(actionDescriptor.PageTypeInfo.AsType());",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Activator.CreateInstance",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.RazorPages/test/Infrastructure/PageActionInvokerTest.cs",
        "line": 1542,
        "type": "dangerous_api",
        "pattern": "Activator.CreateInstance",
        "code": "modelFactory = _ => Activator.CreateInstance(actionDescriptor.ModelTypeInfo.AsType());",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Activator.CreateInstance",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.RazorPages/test/Infrastructure/PageActionInvokerProviderTest.cs",
        "line": 469,
        "type": "dangerous_api",
        "pattern": "Type.GetType",
        "code": "var pageTypeInfo = pageType.GetTypeInfo();",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Type.GetType",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.RazorPages/test/Infrastructure/PageActionInvokerProviderTest.cs",
        "line": 475,
        "type": "dangerous_api",
        "pattern": "Type.GetType",
        "code": "declaredModelTypeInfo = pageTypeInfo.GetProperty(\"Model\")?.PropertyType.GetTypeInfo();",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Type.GetType",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.RazorPages/test/Infrastructure/DefaultPageModelFactoryProviderTest.cs",
        "line": 135,
        "type": "dangerous_api",
        "pattern": "Activator.CreateInstance",
        "code": "return (context) => Activator.CreateInstance(descriptor.ModelTypeInfo.AsType());",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Activator.CreateInstance",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.RazorPages/test/Infrastructure/ExecutorFactoryTest.cs",
        "line": 196,
        "type": "dangerous_api",
        "pattern": "Type.GetType",
        "code": "else if (methodParameter.ParameterType.GetTypeInfo().IsValueType)",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Type.GetType",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.RazorPages/test/Infrastructure/ExecutorFactoryTest.cs",
        "line": 198,
        "type": "dangerous_api",
        "pattern": "Activator.CreateInstance",
        "code": "defaultValue = Activator.CreateInstance(methodParameter.ParameterType);",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Activator.CreateInstance",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.RazorPages/test/Infrastructure/DefaultPageModelActivatorProviderTest.cs",
        "line": 100,
        "type": "dangerous_api",
        "pattern": "Type.GetType",
        "code": "PageTypeInfo = pageType.GetTypeInfo(),",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Type.GetType",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.RazorPages/test/Infrastructure/DefaultPageModelActivatorProviderTest.cs",
        "line": 120,
        "type": "dangerous_api",
        "pattern": "Type.GetType",
        "code": "PageTypeInfo = pageType.GetTypeInfo(),",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Type.GetType",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.RazorPages/test/Infrastructure/ServiceBasedPageModelActivatorProviderTest.cs",
        "line": 131,
        "type": "dangerous_api",
        "pattern": "Type.GetType",
        "code": "PageTypeInfo = pageType.GetTypeInfo(),",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Type.GetType",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.RazorPages/test/Infrastructure/DefaultPageActivatorProviderTest.cs",
        "line": 79,
        "type": "dangerous_api",
        "pattern": "Type.GetType",
        "code": "PageTypeInfo = pageType.GetTypeInfo()",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Type.GetType",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.RazorPages/test/Infrastructure/DefaultPageActivatorProviderTest.cs",
        "line": 99,
        "type": "dangerous_api",
        "pattern": "Type.GetType",
        "code": "PageTypeInfo = pageType.GetTypeInfo()",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Type.GetType",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.RazorPages/test/Infrastructure/DefaultPageFactoryProviderTest.cs",
        "line": 391,
        "type": "dangerous_api",
        "pattern": "Activator.CreateInstance",
        "code": "return (context, viewContext) => Activator.CreateInstance(descriptor.PageTypeInfo.AsType());",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Activator.CreateInstance",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.RazorPages/src/ApplicationModels/DefaultPageApplicationModelProvider.cs",
        "line": 84,
        "type": "dangerous_api",
        "pattern": "Type.GetType",
        "code": "var modelTypeInfo = modelProperty.PropertyType.GetTypeInfo();",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Type.GetType",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.RazorPages/src/Infrastructure/PageActionInvoker.cs",
        "line": 241,
        "type": "dangerous_api",
        "pattern": "Activator.CreateInstance",
        "code": "value = Activator.CreateInstance(parameter.ParameterInfo.ParameterType);",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Activator.CreateInstance",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Core/test/Formatters/StreamOutputFormatterTest.cs",
        "line": 69,
        "type": "dangerous_api",
        "pattern": "Activator.CreateInstance",
        "code": "var @object = type != null ? Activator.CreateInstance(type) : null;",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Activator.CreateInstance",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Core/test/ApplicationParts/RelatedAssemblyPartTest.cs",
        "line": 5,
        "type": "dangerous_api",
        "pattern": "System.Reflection.Emit",
        "code": "using System.Reflection.Emit;",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: System.Reflection.Emit",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Core/test/ApplicationModels/ControllerActionDescriptorProviderTests.cs",
        "line": 984,
        "type": "dangerous_api",
        "pattern": "Type.GetType",
        "code": "var provider = GetProvider(controllerType.GetTypeInfo());",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Type.GetType",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Core/test/ApplicationModels/PropertyModelTest.cs",
        "line": 52,
        "type": "dangerous_api",
        "pattern": "Type.GetType",
        "code": "else if (property.PropertyType.GetTypeInfo().IsValueType ||",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Type.GetType",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Core/test/ApplicationModels/PropertyModelTest.cs",
        "line": 58,
        "type": "dangerous_api",
        "pattern": "Activator.CreateInstance",
        "code": "Assert.NotEqual(value1, Activator.CreateInstance(property.PropertyType));",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Activator.CreateInstance",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Core/test/ApplicationModels/ControllerModelTest.cs",
        "line": 128,
        "type": "dangerous_api",
        "pattern": "Activator.CreateInstance",
        "code": "Assert.NotEqual(value1, Activator.CreateInstance(property.PropertyType));",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Activator.CreateInstance",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Core/test/ApplicationModels/ParameterModelTest.cs",
        "line": 56,
        "type": "dangerous_api",
        "pattern": "Type.GetType",
        "code": "else if (property.PropertyType.GetTypeInfo().IsValueType ||",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Type.GetType",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Core/test/ApplicationModels/ParameterModelTest.cs",
        "line": 62,
        "type": "dangerous_api",
        "pattern": "Activator.CreateInstance",
        "code": "Assert.NotEqual(value1, Activator.CreateInstance(property.PropertyType));",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Activator.CreateInstance",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Core/test/ApplicationModels/AuthorizationApplicationModelProviderTest.cs",
        "line": 212,
        "type": "dangerous_api",
        "pattern": "Type.GetType",
        "code": "var context = new ApplicationModelProviderContext(new[] { controllerType.GetTypeInfo() });",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Type.GetType",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Core/test/ApplicationModels/AttributeRouteModelTests.cs",
        "line": 44,
        "type": "dangerous_api",
        "pattern": "Activator.CreateInstance",
        "code": "Assert.NotEqual(value1, Activator.CreateInstance(property.PropertyType));",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Activator.CreateInstance",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Core/test/ApplicationModels/DefaultApplicationModelProviderTest.cs",
        "line": 1319,
        "type": "dangerous_api",
        "pattern": "Type.GetType",
        "code": "Assert.Equal(typeInfo, action.ActionMethod.DeclaringType.GetTypeInfo());",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Type.GetType",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Core/test/ApplicationModels/ActionModelTest.cs",
        "line": 126,
        "type": "dangerous_api",
        "pattern": "Activator.CreateInstance",
        "code": "Assert.NotEqual(value1, Activator.CreateInstance(property.PropertyType));",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Activator.CreateInstance",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Core/test/DependencyInjection/MvcCoreBuilderExtensionsTest.cs",
        "line": 5,
        "type": "dangerous_api",
        "pattern": "System.Reflection.Emit",
        "code": "using System.Reflection.Emit;",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: System.Reflection.Emit",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Core/test/DependencyInjection/MvcBuilderExtensionsTest.cs",
        "line": 5,
        "type": "dangerous_api",
        "pattern": "System.Reflection.Emit",
        "code": "using System.Reflection.Emit;",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: System.Reflection.Emit",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Core/test/DependencyInjection/ApplicationModelConventionExtensionsTest.cs",
        "line": 18,
        "type": "dangerous_api",
        "pattern": "Type.GetType",
        "code": "var controllerModel = new ControllerModel(controllerType.GetTypeInfo(), Array.Empty<object>());",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Type.GetType",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Core/src/Filters/MiddlewareFilterConfigurationProvider.cs",
        "line": 28,
        "type": "dangerous_api",
        "pattern": "Activator.CreateInstance",
        "code": "var instance = Activator.CreateInstance(configurationType)!;",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Activator.CreateInstance",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Core/src/Formatters/InputFormatter.cs",
        "line": 32,
        "type": "dangerous_api",
        "pattern": "Activator.CreateInstance",
        "code": "return Activator.CreateInstance(modelType);",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Activator.CreateInstance",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Core/src/ApplicationParts/ApplicationPartFactory.cs",
        "line": 54,
        "type": "dangerous_api",
        "pattern": "Activator.CreateInstance",
        "code": "return (ApplicationPartFactory)Activator.CreateInstance(type)!;",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Activator.CreateInstance",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Core/src/ApplicationParts/ProvideApplicationPartFactoryAttribute.cs",
        "line": 42,
        "type": "dangerous_api",
        "pattern": "Type.GetType",
        "code": "Type.GetType(_applicationPartFactoryTypeName!, throwOnError: true)!;",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Type.GetType",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Core/src/ModelBinding/ModelBindingHelper.cs",
        "line": 578,
        "type": "dangerous_api",
        "pattern": "Activator.CreateInstance",
        "code": "return (ICollection<T>)Activator.CreateInstance(modelType)!;",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Activator.CreateInstance",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Core/src/ModelBinding/ModelBindingHelper.cs",
        "line": 618,
        "type": "dangerous_api",
        "pattern": "Activator.CreateInstance",
        "code": "return type.IsValueType ? Activator.CreateInstance(type) : null;",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Activator.CreateInstance",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Core/src/ModelBinding/Binders/ArrayModelBinderProvider.cs",
        "line": 30,
        "type": "dangerous_api",
        "pattern": "Activator.CreateInstance",
        "code": "return (IModelBinder)Activator.CreateInstance(",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Activator.CreateInstance",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Core/src/ModelBinding/Binders/CollectionModelBinderProvider.cs",
        "line": 62,
        "type": "dangerous_api",
        "pattern": "Activator.CreateInstance",
        "code": "var binder = (IModelBinder)Activator.CreateInstance(",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Activator.CreateInstance",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Core/src/ModelBinding/Binders/DictionaryModelBinderProvider.cs",
        "line": 37,
        "type": "dangerous_api",
        "pattern": "Activator.CreateInstance",
        "code": "return (IModelBinder)Activator.CreateInstance(",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Activator.CreateInstance",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Core/src/ModelBinding/Binders/KeyValuePairModelBinderProvider.cs",
        "line": 35,
        "type": "dangerous_api",
        "pattern": "Activator.CreateInstance",
        "code": "return (IModelBinder)Activator.CreateInstance(binderType, keyBinder, valueBinder, loggerFactory)!;",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Activator.CreateInstance",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Core/src/ModelBinding/Metadata/DefaultModelMetadataProvider.cs",
        "line": 283,
        "type": "dangerous_api",
        "pattern": "Activator.CreateInstance",
        "code": "defaultValue = Activator.CreateInstance(parameterType);",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Activator.CreateInstance",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Core/src/Infrastructure/ParameterDefaultValues.cs",
        "line": 32,
        "type": "dangerous_api",
        "pattern": "Activator.CreateInstance",
        "code": "defaultValue = Activator.CreateInstance(parameterInfo.ParameterType);",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Activator.CreateInstance",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Grpc/Interop/test/testassets/InteropClient/InteropClient.cs",
        "line": 206,
        "type": "dangerous_api",
        "pattern": "Activator.CreateInstance",
        "code": "return (TClient)Activator.CreateInstance(typeof(TClient), channel.Channel)!;",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Activator.CreateInstance",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Grpc/JsonTranscoding/test/Microsoft.AspNetCore.Grpc.JsonTranscoding.IntegrationTests/Infrastructure/TestHelpers.cs",
        "line": 37,
        "type": "dangerous_api",
        "pattern": "Activator.CreateInstance",
        "code": "return new GrpcActivatorHandle<Interceptor>(Activator.CreateInstance<T>(), created: true, state: null);",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Activator.CreateInstance",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Grpc/JsonTranscoding/test/Microsoft.AspNetCore.Grpc.JsonTranscoding.Tests/Infrastructure/TestHelpers.cs",
        "line": 61,
        "type": "dangerous_api",
        "pattern": "Activator.CreateInstance",
        "code": "return new GrpcActivatorHandle<Interceptor>(Activator.CreateInstance<T>(), created: true, state: null);",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Activator.CreateInstance",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Grpc/JsonTranscoding/test/Microsoft.AspNetCore.Grpc.JsonTranscoding.Tests/TestObjects/ProtobutMessages/WrappersMessage.cs",
        "line": 65,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[global::System.CodeDom.Compiler.GeneratedCode(\"protoc\", null)]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Grpc/JsonTranscoding/test/Microsoft.AspNetCore.Grpc.JsonTranscoding.Tests/TestObjects/ProtobutMessages/WrappersMessage.cs",
        "line": 69,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[global::System.CodeDom.Compiler.GeneratedCode(\"protoc\", null)]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Grpc/JsonTranscoding/test/Microsoft.AspNetCore.Grpc.JsonTranscoding.Tests/TestObjects/ProtobutMessages/WrappersMessage.cs",
        "line": 76,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[global::System.CodeDom.Compiler.GeneratedCode(\"protoc\", null)]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Grpc/JsonTranscoding/test/Microsoft.AspNetCore.Grpc.JsonTranscoding.Tests/TestObjects/ProtobutMessages/WrappersMessage.cs",
        "line": 83,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[global::System.CodeDom.Compiler.GeneratedCode(\"protoc\", null)]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Grpc/JsonTranscoding/test/Microsoft.AspNetCore.Grpc.JsonTranscoding.Tests/TestObjects/ProtobutMessages/WrappersMessage.cs",
        "line": 92,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[global::System.CodeDom.Compiler.GeneratedCode(\"protoc\", null)]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Grpc/JsonTranscoding/test/Microsoft.AspNetCore.Grpc.JsonTranscoding.Tests/TestObjects/ProtobutMessages/WrappersMessage.cs",
        "line": 108,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[global::System.CodeDom.Compiler.GeneratedCode(\"protoc\", null)]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Grpc/JsonTranscoding/test/Microsoft.AspNetCore.Grpc.JsonTranscoding.Tests/TestObjects/ProtobutMessages/WrappersMessage.cs",
        "line": 118,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[global::System.CodeDom.Compiler.GeneratedCode(\"protoc\", null)]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Grpc/JsonTranscoding/test/Microsoft.AspNetCore.Grpc.JsonTranscoding.Tests/TestObjects/ProtobutMessages/WrappersMessage.cs",
        "line": 132,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[global::System.CodeDom.Compiler.GeneratedCode(\"protoc\", null)]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Grpc/JsonTranscoding/test/Microsoft.AspNetCore.Grpc.JsonTranscoding.Tests/TestObjects/ProtobutMessages/WrappersMessage.cs",
        "line": 146,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[global::System.CodeDom.Compiler.GeneratedCode(\"protoc\", null)]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Grpc/JsonTranscoding/test/Microsoft.AspNetCore.Grpc.JsonTranscoding.Tests/TestObjects/ProtobutMessages/WrappersMessage.cs",
        "line": 160,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[global::System.CodeDom.Compiler.GeneratedCode(\"protoc\", null)]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Grpc/JsonTranscoding/test/Microsoft.AspNetCore.Grpc.JsonTranscoding.Tests/TestObjects/ProtobutMessages/WrappersMessage.cs",
        "line": 174,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[global::System.CodeDom.Compiler.GeneratedCode(\"protoc\", null)]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Grpc/JsonTranscoding/test/Microsoft.AspNetCore.Grpc.JsonTranscoding.Tests/TestObjects/ProtobutMessages/WrappersMessage.cs",
        "line": 188,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[global::System.CodeDom.Compiler.GeneratedCode(\"protoc\", null)]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Grpc/JsonTranscoding/test/Microsoft.AspNetCore.Grpc.JsonTranscoding.Tests/TestObjects/ProtobutMessages/WrappersMessage.cs",
        "line": 202,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[global::System.CodeDom.Compiler.GeneratedCode(\"protoc\", null)]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Grpc/JsonTranscoding/test/Microsoft.AspNetCore.Grpc.JsonTranscoding.Tests/TestObjects/ProtobutMessages/WrappersMessage.cs",
        "line": 216,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[global::System.CodeDom.Compiler.GeneratedCode(\"protoc\", null)]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Grpc/JsonTranscoding/test/Microsoft.AspNetCore.Grpc.JsonTranscoding.Tests/TestObjects/ProtobutMessages/WrappersMessage.cs",
        "line": 230,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[global::System.CodeDom.Compiler.GeneratedCode(\"protoc\", null)]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Grpc/JsonTranscoding/test/Microsoft.AspNetCore.Grpc.JsonTranscoding.Tests/TestObjects/ProtobutMessages/WrappersMessage.cs",
        "line": 241,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[global::System.CodeDom.Compiler.GeneratedCode(\"protoc\", null)]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Grpc/JsonTranscoding/test/Microsoft.AspNetCore.Grpc.JsonTranscoding.Tests/TestObjects/ProtobutMessages/WrappersMessage.cs",
        "line": 248,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[global::System.CodeDom.Compiler.GeneratedCode(\"protoc\", null)]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Grpc/JsonTranscoding/test/Microsoft.AspNetCore.Grpc.JsonTranscoding.Tests/TestObjects/ProtobutMessages/WrappersMessage.cs",
        "line": 272,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[global::System.CodeDom.Compiler.GeneratedCode(\"protoc\", null)]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Grpc/JsonTranscoding/test/Microsoft.AspNetCore.Grpc.JsonTranscoding.Tests/TestObjects/ProtobutMessages/WrappersMessage.cs",
        "line": 293,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[global::System.CodeDom.Compiler.GeneratedCode(\"protoc\", null)]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Grpc/JsonTranscoding/test/Microsoft.AspNetCore.Grpc.JsonTranscoding.Tests/TestObjects/ProtobutMessages/WrappersMessage.cs",
        "line": 300,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[global::System.CodeDom.Compiler.GeneratedCode(\"protoc\", null)]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Grpc/JsonTranscoding/test/Microsoft.AspNetCore.Grpc.JsonTranscoding.Tests/TestObjects/ProtobutMessages/WrappersMessage.cs",
        "line": 350,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[global::System.CodeDom.Compiler.GeneratedCode(\"protoc\", null)]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Grpc/JsonTranscoding/test/Microsoft.AspNetCore.Grpc.JsonTranscoding.Tests/TestObjects/ProtobutMessages/WrappersMessage.cs",
        "line": 406,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[global::System.CodeDom.Compiler.GeneratedCode(\"protoc\", null)]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Grpc/JsonTranscoding/test/Microsoft.AspNetCore.Grpc.JsonTranscoding.Tests/TestObjects/ProtobutMessages/WrappersMessage.cs",
        "line": 454,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[global::System.CodeDom.Compiler.GeneratedCode(\"protoc\", null)]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Grpc/JsonTranscoding/test/Microsoft.AspNetCore.Grpc.JsonTranscoding.Tests/TestObjects/ProtobutMessages/WrappersMessage.cs",
        "line": 537,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[global::System.CodeDom.Compiler.GeneratedCode(\"protoc\", null)]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Grpc/JsonTranscoding/test/Microsoft.AspNetCore.Grpc.JsonTranscoding.Tests/TestObjects/ProtobutMessages/WrappersMessage.cs",
        "line": 623,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[global::System.CodeDom.Compiler.GeneratedCode(\"protoc\", null)]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Grpc/JsonTranscoding/src/Shared/ServiceDescriptorHelpers.cs",
        "line": 241,
        "type": "dangerous_api",
        "pattern": "Activator.CreateInstance",
        "code": "fieldMessage = (IMessage)Activator.CreateInstance(field.MessageType.ClrType)!;",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Activator.CreateInstance",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Grpc/JsonTranscoding/src/Microsoft.AspNetCore.Grpc.JsonTranscoding/Internal/JsonRequestHelpers.cs",
        "line": 215,
        "type": "dangerous_api",
        "pattern": "Activator.CreateInstance",
        "code": "requestMessage = (IMessage)Activator.CreateInstance<TRequest>();",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Activator.CreateInstance",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Grpc/JsonTranscoding/src/Microsoft.AspNetCore.Grpc.JsonTranscoding/Internal/JsonRequestHelpers.cs",
        "line": 259,
        "type": "dangerous_api",
        "pattern": "Activator.CreateInstance",
        "code": "requestMessage = (IMessage)Activator.CreateInstance<TRequest>();",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Activator.CreateInstance",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Grpc/JsonTranscoding/src/Microsoft.AspNetCore.Grpc.JsonTranscoding/Internal/JsonRequestHelpers.cs",
        "line": 277,
        "type": "dangerous_api",
        "pattern": "Activator.CreateInstance",
        "code": "requestMessage = (IMessage)Activator.CreateInstance<TRequest>();",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Activator.CreateInstance",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Grpc/JsonTranscoding/src/Microsoft.AspNetCore.Grpc.JsonTranscoding/Internal/JsonRequestHelpers.cs",
        "line": 320,
        "type": "dangerous_api",
        "pattern": "Activator.CreateInstance",
        "code": "var httpBody = (IMessage)Activator.CreateInstance(serverCallContext.DescriptorInfo.BodyDescriptor!.ClrType)!;",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Activator.CreateInstance",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Grpc/JsonTranscoding/src/Microsoft.AspNetCore.Grpc.JsonTranscoding/Internal/Json/JsonConverterFactoryForWellKnownTypes.cs",
        "line": 43,
        "type": "dangerous_api",
        "pattern": "Activator.CreateInstance",
        "code": "var converter = (JsonConverter)Activator.CreateInstance(",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Activator.CreateInstance",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Grpc/JsonTranscoding/src/Microsoft.AspNetCore.Grpc.JsonTranscoding/Internal/Json/MessageTypeInfoResolver.cs",
        "line": 33,
        "type": "dangerous_api",
        "pattern": "Activator.CreateInstance",
        "code": "typeInfo.CreateObject = () => Activator.CreateInstance(type)!;",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Activator.CreateInstance",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Grpc/JsonTranscoding/src/Microsoft.AspNetCore.Grpc.JsonTranscoding/Internal/Json/MessageTypeInfoResolver.cs",
        "line": 176,
        "type": "dangerous_api",
        "pattern": "Activator.CreateInstance",
        "code": "var wrapper = (IMessage)Activator.CreateInstance(field.MessageType.ClrType)!;",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Activator.CreateInstance",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Grpc/JsonTranscoding/src/Microsoft.AspNetCore.Grpc.JsonTranscoding/Internal/Json/JsonConverterFactoryForEnum.cs",
        "line": 28,
        "type": "dangerous_api",
        "pattern": "Activator.CreateInstance",
        "code": "var converter = (JsonConverter)Activator.CreateInstance(",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Activator.CreateInstance",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Grpc/JsonTranscoding/src/Microsoft.AspNetCore.Grpc.JsonTranscoding/Internal/Json/EnumNameHelpers.cs",
        "line": 59,
        "type": "dangerous_api",
        "pattern": "Type.GetType",
        "code": "var nameMappings = enumType.GetTypeInfo().DeclaredFields",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Type.GetType",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Grpc/JsonTranscoding/src/Microsoft.AspNetCore.Grpc.JsonTranscoding/Internal/Json/JsonConverterFactoryForWrappers.cs",
        "line": 41,
        "type": "dangerous_api",
        "pattern": "Activator.CreateInstance",
        "code": "var converter = (JsonConverter)Activator.CreateInstance(",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Activator.CreateInstance",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Framework/AspNetCoreAnalyzers/src/Analyzers/Mvc/DetectOverriddenAuthorizeAttribute.cs",
        "line": 64,
        "type": "dangerous_api",
        "pattern": "Type.GetType",
        "code": "foreach (var currentClass in actionSymbol.ContainingType.GetTypeHierarchy())",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Type.GetType",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Security/Authentication/test/JwtBearerTests_Handler.cs",
        "line": 1116,
        "type": "dangerous_api",
        "pattern": "Type.GetType",
        "code": "var constructor = ExceptionType.GetTypeInfo().GetConstructor(new[] { typeof(string) });",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Type.GetType",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Security/Authentication/test/JwtBearerTests.cs",
        "line": 1037,
        "type": "dangerous_api",
        "pattern": "Type.GetType",
        "code": "var constructor = ExceptionType.GetTypeInfo().GetConstructor(new[] { typeof(string) });",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Type.GetType",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/SignalR/server/Core/src/Internal/DefaultHubDispatcher.cs",
        "line": 767,
        "type": "dangerous_api",
        "pattern": "Type.GetType",
        "code": "var hubTypeInfo = hubType.GetTypeInfo();",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Type.GetType",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/SignalR/server/Core/src/Internal/TypedClientBuilder.cs",
        "line": 7,
        "type": "dangerous_api",
        "pattern": "System.Reflection.Emit",
        "code": "using System.Reflection.Emit;",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: System.Reflection.Emit",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/SignalR/server/StackExchangeRedis/test/TestConnectionMultiplexer.cs",
        "line": 425,
        "type": "dangerous_api",
        "pattern": "Assembly.GetType",
        "code": "var redisSubscriberType = typeof(RedisChannel).Assembly.GetType(\"StackExchange.Redis.RedisSubscriber\");",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Assembly.GetType",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/SignalR/samples/SocialWeather/Protobuf/WeatherReport.cs",
        "line": 52,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[global::System.CodeDom.Compiler.GeneratedCode(\"protoc\", null)]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/SignalR/samples/SocialWeather/Protobuf/WeatherReport.cs",
        "line": 56,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[global::System.CodeDom.Compiler.GeneratedCode(\"protoc\", null)]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/SignalR/samples/SocialWeather/Protobuf/WeatherReport.cs",
        "line": 62,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[global::System.CodeDom.Compiler.GeneratedCode(\"protoc\", null)]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/SignalR/samples/SocialWeather/Protobuf/WeatherReport.cs",
        "line": 68,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[global::System.CodeDom.Compiler.GeneratedCode(\"protoc\", null)]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/SignalR/samples/SocialWeather/Protobuf/WeatherReport.cs",
        "line": 76,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[global::System.CodeDom.Compiler.GeneratedCode(\"protoc\", null)]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/SignalR/samples/SocialWeather/Protobuf/WeatherReport.cs",
        "line": 86,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[global::System.CodeDom.Compiler.GeneratedCode(\"protoc\", null)]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/SignalR/samples/SocialWeather/Protobuf/WeatherReport.cs",
        "line": 95,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[global::System.CodeDom.Compiler.GeneratedCode(\"protoc\", null)]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/SignalR/samples/SocialWeather/Protobuf/WeatherReport.cs",
        "line": 107,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[global::System.CodeDom.Compiler.GeneratedCode(\"protoc\", null)]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/SignalR/samples/SocialWeather/Protobuf/WeatherReport.cs",
        "line": 119,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[global::System.CodeDom.Compiler.GeneratedCode(\"protoc\", null)]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/SignalR/samples/SocialWeather/Protobuf/WeatherReport.cs",
        "line": 131,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[global::System.CodeDom.Compiler.GeneratedCode(\"protoc\", null)]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/SignalR/samples/SocialWeather/Protobuf/WeatherReport.cs",
        "line": 140,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[global::System.CodeDom.Compiler.GeneratedCode(\"protoc\", null)]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/SignalR/samples/SocialWeather/Protobuf/WeatherReport.cs",
        "line": 146,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[global::System.CodeDom.Compiler.GeneratedCode(\"protoc\", null)]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/SignalR/samples/SocialWeather/Protobuf/WeatherReport.cs",
        "line": 162,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[global::System.CodeDom.Compiler.GeneratedCode(\"protoc\", null)]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/SignalR/samples/SocialWeather/Protobuf/WeatherReport.cs",
        "line": 176,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[global::System.CodeDom.Compiler.GeneratedCode(\"protoc\", null)]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/SignalR/samples/SocialWeather/Protobuf/WeatherReport.cs",
        "line": 182,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[global::System.CodeDom.Compiler.GeneratedCode(\"protoc\", null)]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/SignalR/samples/SocialWeather/Protobuf/WeatherReport.cs",
        "line": 211,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[global::System.CodeDom.Compiler.GeneratedCode(\"protoc\", null)]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/SignalR/samples/SocialWeather/Protobuf/WeatherReport.cs",
        "line": 236,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[global::System.CodeDom.Compiler.GeneratedCode(\"protoc\", null)]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/SignalR/samples/SocialWeather/Protobuf/WeatherReport.cs",
        "line": 258,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[global::System.CodeDom.Compiler.GeneratedCode(\"protoc\", null)]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/SignalR/samples/SocialWeather/Protobuf/WeatherReport.cs",
        "line": 279,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[global::System.CodeDom.Compiler.GeneratedCode(\"protoc\", null)]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/SignalR/samples/SocialWeather/Protobuf/WeatherReport.cs",
        "line": 313,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[global::System.CodeDom.Compiler.GeneratedCode(\"protoc\", null)]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/SignalR/samples/SocialWeather/Protobuf/WeatherReport.cs",
        "line": 345,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[global::System.CodeDom.Compiler.GeneratedCode(\"protoc\", null)]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/JSInterop/Microsoft.JSInterop/src/Infrastructure/TaskGenericsUtil.cs",
        "line": 33,
        "type": "dangerous_api",
        "pattern": "Activator.CreateInstance",
        "code": ": (ITaskResultGetter)Activator.CreateInstance(",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Activator.CreateInstance",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/JSInterop/Microsoft.JSInterop/src/Infrastructure/TaskGenericsUtil.cs",
        "line": 111,
        "type": "dangerous_api",
        "pattern": "Activator.CreateInstance",
        "code": "return (ITcsResultSetter)Activator.CreateInstance(",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Activator.CreateInstance",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/JSInterop/Microsoft.JSInterop/src/Infrastructure/DotNetObjectReferenceJsonConverterFactory.cs",
        "line": 31,
        "type": "dangerous_api",
        "pattern": "Activator.CreateInstance",
        "code": "return (JsonConverter)Activator.CreateInstance(converterType, JSRuntime)!;",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Activator.CreateInstance",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Features/JsonPatch.SystemTextJson/src/Internal/PocoAdapter.cs",
        "line": 96,
        "type": "dangerous_api",
        "pattern": "Activator.CreateInstance",
        "code": "value = Activator.CreateInstance(jsonProperty.PropertyType);",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Activator.CreateInstance",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Features/JsonPatch.SystemTextJson/src/Converters/JsonPatchDocumentConverterFactory.cs",
        "line": 25,
        "type": "dangerous_api",
        "pattern": "Activator.CreateInstance",
        "code": "return (JsonConverter)Activator.CreateInstance(typeof(JsonConverterForJsonPatchDocumentOfT<>).MakeGenericType(typeToConvert.GenericTypeArguments[0]));",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Activator.CreateInstance",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Features/JsonPatch.SystemTextJson/src/Adapters/AdapterFactory.cs",
        "line": 28,
        "type": "dangerous_api",
        "pattern": "Activator.CreateInstance",
        "code": "return (IAdapter)Activator.CreateInstance(typeof(DictionaryAdapter<,>).MakeGenericType(typeToConvert.GenericTypeArguments[0], typeToConvert.GenericTypeArguments[1]));",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Activator.CreateInstance",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Features/JsonPatch/src/Internal/DynamicObjectAdapter.cs",
        "line": 71,
        "type": "dangerous_api",
        "pattern": "Activator.CreateInstance",
        "code": "value = Activator.CreateInstance(property.GetType());",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Activator.CreateInstance",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Features/JsonPatch/src/Internal/PocoAdapter.cs",
        "line": 99,
        "type": "dangerous_api",
        "pattern": "Activator.CreateInstance",
        "code": "value = Activator.CreateInstance(jsonProperty.PropertyType);",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Activator.CreateInstance",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Features/JsonPatch/src/Converters/TypedJsonPatchDocumentConverter.cs",
        "line": 39,
        "type": "dangerous_api",
        "pattern": "Activator.CreateInstance",
        "code": "var targetOperations = Activator.CreateInstance(concreteList);",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Activator.CreateInstance",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Features/JsonPatch/src/Converters/TypedJsonPatchDocumentConverter.cs",
        "line": 52,
        "type": "dangerous_api",
        "pattern": "Activator.CreateInstance",
        "code": "var container = Activator.CreateInstance(objectType, targetOperations, JsonPatchDocumentConverter.DefaultContractResolver);",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Activator.CreateInstance",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Features/JsonPatch/src/Adapters/AdapterFactory.cs",
        "line": 41,
        "type": "dangerous_api",
        "pattern": "Activator.CreateInstance",
        "code": "return (IAdapter)Activator.CreateInstance(type);",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Activator.CreateInstance",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Shared/BenchmarkRunner/AspNetCoreBenchmarkAttribute.cs",
        "line": 56,
        "type": "dangerous_api",
        "pattern": "Activator.CreateInstance",
        "code": "return (IConfig)Activator.CreateInstance(configType, Array.Empty<object>());",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Activator.CreateInstance",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Shared/RoslynUtils/CodeWriter.cs",
        "line": 4,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "using System.CodeDom.Compiler;",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Shared/HttpSys/RequestProcessing/NativeRequestContext.cs",
        "line": 821,
        "type": "dangerous_api",
        "pattern": "Marshal.Copy",
        "code": "Marshal.Copy((IntPtr)clientCert, certEncoded, 0, certEncoded.Length);",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Marshal.Copy",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Shared/HttpSys/RequestProcessing/RequestHeaders.Generated.cs",
        "line": 6,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "using System.CodeDom.Compiler;",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.SourceGenerators.Tests/SnapshotTestHelper.cs",
        "line": 543,
        "type": "dangerous_api",
        "pattern": "Type.GetType",
        "code": "var publicHostAbortedExceptionType = Type.GetType(\"Microsoft.Extensions.Hosting.HostAbortedException, Microsoft.Extensions.Hosting.Abstractions\", throwOnError: false);",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Type.GetType",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.SourceGenerators.Tests/SnapshotTestHelper.cs",
        "line": 546,
        "type": "dangerous_api",
        "pattern": "Activator.CreateInstance",
        "code": "throw (Exception)Activator.CreateInstance(publicHostAbortedExceptionType)!;",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Activator.CreateInstance",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.SourceGenerators.Tests/SnapshotTestHelper.cs",
        "line": 191,
        "type": "dangerous_api",
        "pattern": "Assembly.GetType",
        "code": "var serviceType = targetAssembly.GetType(\"Microsoft.Extensions.ApiDescriptions.IDocumentProvider\", throwOnError: false);",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Assembly.GetType",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.SourceGenerators.Tests/snapshots/SchemaTests.XmlCommentsOnPropertiesShouldApplyToSchemaReferences#OpenApiXmlCommentSupport.generated.verified.cs",
        "line": 17,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.AspNetCore.OpenApi.SourceGenerators, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.SourceGenerators.Tests/snapshots/SchemaTests.XmlCommentsOnPropertiesShouldApplyToSchemaReferences#OpenApiXmlCommentSupport.generated.verified.cs",
        "line": 46,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.AspNetCore.OpenApi.SourceGenerators, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.SourceGenerators.Tests/snapshots/SchemaTests.XmlCommentsOnPropertiesShouldApplyToSchemaReferences#OpenApiXmlCommentSupport.generated.verified.cs",
        "line": 58,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.AspNetCore.OpenApi.SourceGenerators, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.SourceGenerators.Tests/snapshots/SchemaTests.XmlCommentsOnPropertiesShouldApplyToSchemaReferences#OpenApiXmlCommentSupport.generated.verified.cs",
        "line": 61,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.AspNetCore.OpenApi.SourceGenerators, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.SourceGenerators.Tests/snapshots/SchemaTests.XmlCommentsOnPropertiesShouldApplyToSchemaReferences#OpenApiXmlCommentSupport.generated.verified.cs",
        "line": 64,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.AspNetCore.OpenApi.SourceGenerators, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.SourceGenerators.Tests/snapshots/SchemaTests.XmlCommentsOnPropertiesShouldApplyToSchemaReferences#OpenApiXmlCommentSupport.generated.verified.cs",
        "line": 88,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.AspNetCore.OpenApi.SourceGenerators, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.SourceGenerators.Tests/snapshots/SchemaTests.XmlCommentsOnPropertiesShouldApplyToSchemaReferences#OpenApiXmlCommentSupport.generated.verified.cs",
        "line": 351,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.AspNetCore.OpenApi.SourceGenerators, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.SourceGenerators.Tests/snapshots/SchemaTests.XmlCommentsOnPropertiesShouldApplyToSchemaReferences#OpenApiXmlCommentSupport.generated.verified.cs",
        "line": 516,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.AspNetCore.OpenApi.SourceGenerators, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.SourceGenerators.Tests/snapshots/SchemaTests.XmlCommentsOnPropertiesShouldApplyToSchemaReferences#OpenApiXmlCommentSupport.generated.verified.cs",
        "line": 574,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.AspNetCore.OpenApi.SourceGenerators, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.SourceGenerators.Tests/snapshots/SchemaTests.XmlCommentsOnPropertiesShouldApplyToSchemaReferences#OpenApiXmlCommentSupport.generated.verified.cs",
        "line": 603,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.AspNetCore.OpenApi.SourceGenerators, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.SourceGenerators.Tests/snapshots/OperationTests.SupportsXmlCommentsOnOperationsFromMinimalApis#OpenApiXmlCommentSupport.generated.verified.cs",
        "line": 17,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.AspNetCore.OpenApi.SourceGenerators, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.SourceGenerators.Tests/snapshots/OperationTests.SupportsXmlCommentsOnOperationsFromMinimalApis#OpenApiXmlCommentSupport.generated.verified.cs",
        "line": 46,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.AspNetCore.OpenApi.SourceGenerators, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.SourceGenerators.Tests/snapshots/OperationTests.SupportsXmlCommentsOnOperationsFromMinimalApis#OpenApiXmlCommentSupport.generated.verified.cs",
        "line": 58,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.AspNetCore.OpenApi.SourceGenerators, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.SourceGenerators.Tests/snapshots/OperationTests.SupportsXmlCommentsOnOperationsFromMinimalApis#OpenApiXmlCommentSupport.generated.verified.cs",
        "line": 61,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.AspNetCore.OpenApi.SourceGenerators, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.SourceGenerators.Tests/snapshots/OperationTests.SupportsXmlCommentsOnOperationsFromMinimalApis#OpenApiXmlCommentSupport.generated.verified.cs",
        "line": 64,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.AspNetCore.OpenApi.SourceGenerators, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.SourceGenerators.Tests/snapshots/OperationTests.SupportsXmlCommentsOnOperationsFromMinimalApis#OpenApiXmlCommentSupport.generated.verified.cs",
        "line": 127,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.AspNetCore.OpenApi.SourceGenerators, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.SourceGenerators.Tests/snapshots/OperationTests.SupportsXmlCommentsOnOperationsFromMinimalApis#OpenApiXmlCommentSupport.generated.verified.cs",
        "line": 390,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.AspNetCore.OpenApi.SourceGenerators, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.SourceGenerators.Tests/snapshots/OperationTests.SupportsXmlCommentsOnOperationsFromMinimalApis#OpenApiXmlCommentSupport.generated.verified.cs",
        "line": 555,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.AspNetCore.OpenApi.SourceGenerators, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.SourceGenerators.Tests/snapshots/OperationTests.SupportsXmlCommentsOnOperationsFromMinimalApis#OpenApiXmlCommentSupport.generated.verified.cs",
        "line": 613,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.AspNetCore.OpenApi.SourceGenerators, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.SourceGenerators.Tests/snapshots/OperationTests.SupportsXmlCommentsOnOperationsFromMinimalApis#OpenApiXmlCommentSupport.generated.verified.cs",
        "line": 642,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.AspNetCore.OpenApi.SourceGenerators, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.SourceGenerators.Tests/snapshots/AdditionalTextsTests.CanHandleXmlForSchemasInAdditionalTexts#OpenApiXmlCommentSupport.generated.verified.cs",
        "line": 17,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.AspNetCore.OpenApi.SourceGenerators, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.SourceGenerators.Tests/snapshots/AdditionalTextsTests.CanHandleXmlForSchemasInAdditionalTexts#OpenApiXmlCommentSupport.generated.verified.cs",
        "line": 46,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.AspNetCore.OpenApi.SourceGenerators, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.SourceGenerators.Tests/snapshots/AdditionalTextsTests.CanHandleXmlForSchemasInAdditionalTexts#OpenApiXmlCommentSupport.generated.verified.cs",
        "line": 58,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.AspNetCore.OpenApi.SourceGenerators, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.SourceGenerators.Tests/snapshots/AdditionalTextsTests.CanHandleXmlForSchemasInAdditionalTexts#OpenApiXmlCommentSupport.generated.verified.cs",
        "line": 61,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.AspNetCore.OpenApi.SourceGenerators, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.SourceGenerators.Tests/snapshots/AdditionalTextsTests.CanHandleXmlForSchemasInAdditionalTexts#OpenApiXmlCommentSupport.generated.verified.cs",
        "line": 64,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.AspNetCore.OpenApi.SourceGenerators, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.SourceGenerators.Tests/snapshots/AdditionalTextsTests.CanHandleXmlForSchemasInAdditionalTexts#OpenApiXmlCommentSupport.generated.verified.cs",
        "line": 108,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.AspNetCore.OpenApi.SourceGenerators, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.SourceGenerators.Tests/snapshots/AdditionalTextsTests.CanHandleXmlForSchemasInAdditionalTexts#OpenApiXmlCommentSupport.generated.verified.cs",
        "line": 371,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.AspNetCore.OpenApi.SourceGenerators, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.SourceGenerators.Tests/snapshots/AdditionalTextsTests.CanHandleXmlForSchemasInAdditionalTexts#OpenApiXmlCommentSupport.generated.verified.cs",
        "line": 536,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.AspNetCore.OpenApi.SourceGenerators, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.SourceGenerators.Tests/snapshots/AdditionalTextsTests.CanHandleXmlForSchemasInAdditionalTexts#OpenApiXmlCommentSupport.generated.verified.cs",
        "line": 594,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.AspNetCore.OpenApi.SourceGenerators, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.SourceGenerators.Tests/snapshots/AdditionalTextsTests.CanHandleXmlForSchemasInAdditionalTexts#OpenApiXmlCommentSupport.generated.verified.cs",
        "line": 623,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.AspNetCore.OpenApi.SourceGenerators, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.SourceGenerators.Tests/snapshots/AddOpenApiTests.CanInterceptAddOpenApi#OpenApiXmlCommentSupport.generated.verified.cs",
        "line": 17,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.AspNetCore.OpenApi.SourceGenerators, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.SourceGenerators.Tests/snapshots/AddOpenApiTests.CanInterceptAddOpenApi#OpenApiXmlCommentSupport.generated.verified.cs",
        "line": 46,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.AspNetCore.OpenApi.SourceGenerators, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.SourceGenerators.Tests/snapshots/AddOpenApiTests.CanInterceptAddOpenApi#OpenApiXmlCommentSupport.generated.verified.cs",
        "line": 58,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.AspNetCore.OpenApi.SourceGenerators, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.SourceGenerators.Tests/snapshots/AddOpenApiTests.CanInterceptAddOpenApi#OpenApiXmlCommentSupport.generated.verified.cs",
        "line": 61,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.AspNetCore.OpenApi.SourceGenerators, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.SourceGenerators.Tests/snapshots/AddOpenApiTests.CanInterceptAddOpenApi#OpenApiXmlCommentSupport.generated.verified.cs",
        "line": 64,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.AspNetCore.OpenApi.SourceGenerators, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.SourceGenerators.Tests/snapshots/AddOpenApiTests.CanInterceptAddOpenApi#OpenApiXmlCommentSupport.generated.verified.cs",
        "line": 79,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.AspNetCore.OpenApi.SourceGenerators, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.SourceGenerators.Tests/snapshots/AddOpenApiTests.CanInterceptAddOpenApi#OpenApiXmlCommentSupport.generated.verified.cs",
        "line": 342,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.AspNetCore.OpenApi.SourceGenerators, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.SourceGenerators.Tests/snapshots/AddOpenApiTests.CanInterceptAddOpenApi#OpenApiXmlCommentSupport.generated.verified.cs",
        "line": 507,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.AspNetCore.OpenApi.SourceGenerators, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.SourceGenerators.Tests/snapshots/AddOpenApiTests.CanInterceptAddOpenApi#OpenApiXmlCommentSupport.generated.verified.cs",
        "line": 565,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.AspNetCore.OpenApi.SourceGenerators, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.SourceGenerators.Tests/snapshots/AddOpenApiTests.CanInterceptAddOpenApi#OpenApiXmlCommentSupport.generated.verified.cs",
        "line": 594,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.AspNetCore.OpenApi.SourceGenerators, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.SourceGenerators.Tests/snapshots/CompletenessTests.SupportsAllXmlTagsOnSchemas#OpenApiXmlCommentSupport.generated.verified.cs",
        "line": 17,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.AspNetCore.OpenApi.SourceGenerators, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.SourceGenerators.Tests/snapshots/CompletenessTests.SupportsAllXmlTagsOnSchemas#OpenApiXmlCommentSupport.generated.verified.cs",
        "line": 46,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.AspNetCore.OpenApi.SourceGenerators, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.SourceGenerators.Tests/snapshots/CompletenessTests.SupportsAllXmlTagsOnSchemas#OpenApiXmlCommentSupport.generated.verified.cs",
        "line": 58,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.AspNetCore.OpenApi.SourceGenerators, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.SourceGenerators.Tests/snapshots/CompletenessTests.SupportsAllXmlTagsOnSchemas#OpenApiXmlCommentSupport.generated.verified.cs",
        "line": 61,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.AspNetCore.OpenApi.SourceGenerators, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.SourceGenerators.Tests/snapshots/CompletenessTests.SupportsAllXmlTagsOnSchemas#OpenApiXmlCommentSupport.generated.verified.cs",
        "line": 64,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.AspNetCore.OpenApi.SourceGenerators, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.SourceGenerators.Tests/snapshots/CompletenessTests.SupportsAllXmlTagsOnSchemas#OpenApiXmlCommentSupport.generated.verified.cs",
        "line": 206,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.AspNetCore.OpenApi.SourceGenerators, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.SourceGenerators.Tests/snapshots/CompletenessTests.SupportsAllXmlTagsOnSchemas#OpenApiXmlCommentSupport.generated.verified.cs",
        "line": 469,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.AspNetCore.OpenApi.SourceGenerators, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.SourceGenerators.Tests/snapshots/CompletenessTests.SupportsAllXmlTagsOnSchemas#OpenApiXmlCommentSupport.generated.verified.cs",
        "line": 634,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.AspNetCore.OpenApi.SourceGenerators, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.SourceGenerators.Tests/snapshots/CompletenessTests.SupportsAllXmlTagsOnSchemas#OpenApiXmlCommentSupport.generated.verified.cs",
        "line": 692,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.AspNetCore.OpenApi.SourceGenerators, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.SourceGenerators.Tests/snapshots/CompletenessTests.SupportsAllXmlTagsOnSchemas#OpenApiXmlCommentSupport.generated.verified.cs",
        "line": 721,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.AspNetCore.OpenApi.SourceGenerators, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.SourceGenerators.Tests/snapshots/OperationTests.SupportsXmlCommentsOnOperationsFromControllers#OpenApiXmlCommentSupport.generated.verified.cs",
        "line": 17,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.AspNetCore.OpenApi.SourceGenerators, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.SourceGenerators.Tests/snapshots/OperationTests.SupportsXmlCommentsOnOperationsFromControllers#OpenApiXmlCommentSupport.generated.verified.cs",
        "line": 46,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.AspNetCore.OpenApi.SourceGenerators, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.SourceGenerators.Tests/snapshots/OperationTests.SupportsXmlCommentsOnOperationsFromControllers#OpenApiXmlCommentSupport.generated.verified.cs",
        "line": 58,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.AspNetCore.OpenApi.SourceGenerators, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.SourceGenerators.Tests/snapshots/OperationTests.SupportsXmlCommentsOnOperationsFromControllers#OpenApiXmlCommentSupport.generated.verified.cs",
        "line": 61,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.AspNetCore.OpenApi.SourceGenerators, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.SourceGenerators.Tests/snapshots/OperationTests.SupportsXmlCommentsOnOperationsFromControllers#OpenApiXmlCommentSupport.generated.verified.cs",
        "line": 64,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.AspNetCore.OpenApi.SourceGenerators, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.SourceGenerators.Tests/snapshots/OperationTests.SupportsXmlCommentsOnOperationsFromControllers#OpenApiXmlCommentSupport.generated.verified.cs",
        "line": 83,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.AspNetCore.OpenApi.SourceGenerators, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.SourceGenerators.Tests/snapshots/OperationTests.SupportsXmlCommentsOnOperationsFromControllers#OpenApiXmlCommentSupport.generated.verified.cs",
        "line": 346,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.AspNetCore.OpenApi.SourceGenerators, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.SourceGenerators.Tests/snapshots/OperationTests.SupportsXmlCommentsOnOperationsFromControllers#OpenApiXmlCommentSupport.generated.verified.cs",
        "line": 511,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.AspNetCore.OpenApi.SourceGenerators, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.SourceGenerators.Tests/snapshots/OperationTests.SupportsXmlCommentsOnOperationsFromControllers#OpenApiXmlCommentSupport.generated.verified.cs",
        "line": 569,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.AspNetCore.OpenApi.SourceGenerators, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.SourceGenerators.Tests/snapshots/OperationTests.SupportsXmlCommentsOnOperationsFromControllers#OpenApiXmlCommentSupport.generated.verified.cs",
        "line": 598,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.AspNetCore.OpenApi.SourceGenerators, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.SourceGenerators.Tests/snapshots/XmlCommentDocumentationIdTests.CanMergeXmlCommentsWithDifferentDocumentationIdFormats#OpenApiXmlCommentSupport.generated.verified.cs",
        "line": 17,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.AspNetCore.OpenApi.SourceGenerators, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.SourceGenerators.Tests/snapshots/XmlCommentDocumentationIdTests.CanMergeXmlCommentsWithDifferentDocumentationIdFormats#OpenApiXmlCommentSupport.generated.verified.cs",
        "line": 46,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.AspNetCore.OpenApi.SourceGenerators, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.SourceGenerators.Tests/snapshots/XmlCommentDocumentationIdTests.CanMergeXmlCommentsWithDifferentDocumentationIdFormats#OpenApiXmlCommentSupport.generated.verified.cs",
        "line": 58,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.AspNetCore.OpenApi.SourceGenerators, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.SourceGenerators.Tests/snapshots/XmlCommentDocumentationIdTests.CanMergeXmlCommentsWithDifferentDocumentationIdFormats#OpenApiXmlCommentSupport.generated.verified.cs",
        "line": 61,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.AspNetCore.OpenApi.SourceGenerators, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.SourceGenerators.Tests/snapshots/XmlCommentDocumentationIdTests.CanMergeXmlCommentsWithDifferentDocumentationIdFormats#OpenApiXmlCommentSupport.generated.verified.cs",
        "line": 64,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.AspNetCore.OpenApi.SourceGenerators, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.SourceGenerators.Tests/snapshots/XmlCommentDocumentationIdTests.CanMergeXmlCommentsWithDifferentDocumentationIdFormats#OpenApiXmlCommentSupport.generated.verified.cs",
        "line": 80,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.AspNetCore.OpenApi.SourceGenerators, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.SourceGenerators.Tests/snapshots/XmlCommentDocumentationIdTests.CanMergeXmlCommentsWithDifferentDocumentationIdFormats#OpenApiXmlCommentSupport.generated.verified.cs",
        "line": 343,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.AspNetCore.OpenApi.SourceGenerators, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.SourceGenerators.Tests/snapshots/XmlCommentDocumentationIdTests.CanMergeXmlCommentsWithDifferentDocumentationIdFormats#OpenApiXmlCommentSupport.generated.verified.cs",
        "line": 508,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.AspNetCore.OpenApi.SourceGenerators, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.SourceGenerators.Tests/snapshots/XmlCommentDocumentationIdTests.CanMergeXmlCommentsWithDifferentDocumentationIdFormats#OpenApiXmlCommentSupport.generated.verified.cs",
        "line": 566,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.AspNetCore.OpenApi.SourceGenerators, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.SourceGenerators.Tests/snapshots/XmlCommentDocumentationIdTests.CanMergeXmlCommentsWithDifferentDocumentationIdFormats#OpenApiXmlCommentSupport.generated.verified.cs",
        "line": 595,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.AspNetCore.OpenApi.SourceGenerators, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.SourceGenerators.Tests/snapshots/SchemaTests.SupportsXmlCommentsOnSchemas#OpenApiXmlCommentSupport.generated.verified.cs",
        "line": 17,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.AspNetCore.OpenApi.SourceGenerators, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.SourceGenerators.Tests/snapshots/SchemaTests.SupportsXmlCommentsOnSchemas#OpenApiXmlCommentSupport.generated.verified.cs",
        "line": 46,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.AspNetCore.OpenApi.SourceGenerators, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.SourceGenerators.Tests/snapshots/SchemaTests.SupportsXmlCommentsOnSchemas#OpenApiXmlCommentSupport.generated.verified.cs",
        "line": 58,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.AspNetCore.OpenApi.SourceGenerators, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.SourceGenerators.Tests/snapshots/SchemaTests.SupportsXmlCommentsOnSchemas#OpenApiXmlCommentSupport.generated.verified.cs",
        "line": 61,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.AspNetCore.OpenApi.SourceGenerators, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.SourceGenerators.Tests/snapshots/SchemaTests.SupportsXmlCommentsOnSchemas#OpenApiXmlCommentSupport.generated.verified.cs",
        "line": 64,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.AspNetCore.OpenApi.SourceGenerators, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.SourceGenerators.Tests/snapshots/SchemaTests.SupportsXmlCommentsOnSchemas#OpenApiXmlCommentSupport.generated.verified.cs",
        "line": 109,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.AspNetCore.OpenApi.SourceGenerators, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.SourceGenerators.Tests/snapshots/SchemaTests.SupportsXmlCommentsOnSchemas#OpenApiXmlCommentSupport.generated.verified.cs",
        "line": 372,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.AspNetCore.OpenApi.SourceGenerators, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.SourceGenerators.Tests/snapshots/SchemaTests.SupportsXmlCommentsOnSchemas#OpenApiXmlCommentSupport.generated.verified.cs",
        "line": 537,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.AspNetCore.OpenApi.SourceGenerators, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.SourceGenerators.Tests/snapshots/SchemaTests.SupportsXmlCommentsOnSchemas#OpenApiXmlCommentSupport.generated.verified.cs",
        "line": 595,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.AspNetCore.OpenApi.SourceGenerators, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.SourceGenerators.Tests/snapshots/SchemaTests.SupportsXmlCommentsOnSchemas#OpenApiXmlCommentSupport.generated.verified.cs",
        "line": 624,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.AspNetCore.OpenApi.SourceGenerators, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.Tests/Services/OpenApiDocumentServiceTestsBase.cs",
        "line": 206,
        "type": "dangerous_api",
        "pattern": "Type.GetType",
        "code": "action.ControllerTypeInfo = controllerType.GetTypeInfo();",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Type.GetType",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/OpenApi/gen/XmlCommentGenerator.Emitter.cs",
        "line": 16,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "public static string GeneratedCodeConstructor => $@\"System.CodeDom.Compiler.GeneratedCodeAttribute(\"\"{typeof(XmlCommentGenerator).Assembly.FullName}\"\", \"\"{typeof(XmlCommentGenerator).Assembly.GetName().Version}\"\")\";",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/OpenApi/gen/Helpers/ISymbolExtensions.cs",
        "line": 80,
        "type": "dangerous_api",
        "pattern": "Type.GetType",
        "code": "results.AddRange(containingType.GetTypeArguments());",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Type.GetType",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Testing/test/TestableAssembly.cs",
        "line": 7,
        "type": "dangerous_api",
        "pattern": "System.Reflection.Emit",
        "code": "using System.Reflection.Emit;",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: System.Reflection.Emit",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Testing/src/TestPlatformHelper.cs",
        "line": 12,
        "type": "dangerous_api",
        "pattern": "Type.GetType",
        "code": "Type.GetType(\"Mono.Runtime\") != null;",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Type.GetType",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Testing/src/xunit/AspNetTestAssemblyRunner.cs",
        "line": 63,
        "type": "dangerous_api",
        "pattern": "Activator.CreateInstance",
        "code": "instance = Activator.CreateInstance(fixtureAttribute.FixtureType);",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Activator.CreateInstance",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Testing/src/xunit/AspNetTestAssemblyRunner.cs",
        "line": 67,
        "type": "dangerous_api",
        "pattern": "Activator.CreateInstance",
        "code": "instance = Activator.CreateInstance(fixtureAttribute.FixtureType, DiagnosticMessageSink);",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Activator.CreateInstance",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Testing/src/LoggedTest/LoggedTestBase.cs",
        "line": 73,
        "type": "dangerous_api",
        "pattern": "Type.GetType",
        "code": ".ForAssembly(classType.GetTypeInfo().Assembly)",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Type.GetType",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Components/Endpoints/test/Binding/FormDataMapperTests.cs",
        "line": 111,
        "type": "dangerous_api",
        "pattern": "Activator.CreateInstance",
        "code": "Assert.Equal(type.IsValueType ? Activator.CreateInstance(type) : null, result);",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Activator.CreateInstance",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Components/Endpoints/src/FormMapping/HttpContextFormValueMapper.cs",
        "line": 93,
        "type": "dangerous_api",
        "pattern": "Activator.CreateInstance",
        "code": "(FormValueSupplier)Activator.CreateInstance(typeof(FormValueSupplier<>)",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Activator.CreateInstance",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Components/Endpoints/src/FormMapping/Converters/NullableConverter.cs",
        "line": 61,
        "type": "dangerous_api",
        "pattern": "Type.GetType",
        "code": "return Type.GetTypeCode(type) != TypeCode.Object || IsSupportedUnderlyingObjectType(type);",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Type.GetType",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Components/Endpoints/src/FormMapping/Factories/CollectionConverterFactory.cs",
        "line": 23,
        "type": "dangerous_api",
        "pattern": "Activator.CreateInstance",
        "code": "if (Activator.CreateInstance(typeof(TypedCollectionConverterFactory<,>)",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Activator.CreateInstance",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Components/Endpoints/src/FormMapping/Factories/CollectionConverterFactory.cs",
        "line": 61,
        "type": "dangerous_api",
        "pattern": "Activator.CreateInstance",
        "code": "var factory = Activator.CreateInstance(typeof(TypedCollectionConverterFactory<,>)",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Activator.CreateInstance",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Components/Endpoints/src/FormMapping/Factories/ComplexTypeConverterFactory.cs",
        "line": 101,
        "type": "dangerous_api",
        "pattern": "Activator.CreateInstance",
        "code": "if (Activator.CreateInstance(typeof(ComplexTypeExpressionConverterFactory<>).MakeGenericType(type), MetadataFactory)",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Activator.CreateInstance",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Components/Endpoints/src/FormMapping/Factories/ParsableConverterFactory.cs",
        "line": 24,
        "type": "dangerous_api",
        "pattern": "Activator.CreateInstance",
        "code": "return Activator.CreateInstance(typeof(ParsableConverter<>).MakeGenericType(type)) as FormDataConverter ??",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Activator.CreateInstance",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Components/Endpoints/src/FormMapping/Factories/DictionaryConverterFactory.cs",
        "line": 31,
        "type": "dangerous_api",
        "pattern": "Activator.CreateInstance",
        "code": "if (Activator.CreateInstance(typeof(TypedDictionaryConverterFactory<,,>)",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Activator.CreateInstance",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Components/Endpoints/src/FormMapping/Factories/DictionaryConverterFactory.cs",
        "line": 110,
        "type": "dangerous_api",
        "pattern": "Activator.CreateInstance",
        "code": "var factory = Activator.CreateInstance(typeof(TypedDictionaryConverterFactory<,,>)",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Activator.CreateInstance",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Components/Endpoints/src/FormMapping/Factories/EnumConverterFactory.cs",
        "line": 23,
        "type": "dangerous_api",
        "pattern": "Activator.CreateInstance",
        "code": "return (FormDataConverter)Activator.CreateInstance(typeof(EnumConverter<>).MakeGenericType(type))!;",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Activator.CreateInstance",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Components/Endpoints/src/FormMapping/Factories/FileConverterFactory.cs",
        "line": 28,
        "type": "dangerous_api",
        "pattern": "Activator.CreateInstance",
        "code": "return Activator.CreateInstance(typeof(FileConverter<>).MakeGenericType(type)) as FormDataConverter ??",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Activator.CreateInstance",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Components/Endpoints/src/FormMapping/Factories/NullableConverterFactory.cs",
        "line": 34,
        "type": "dangerous_api",
        "pattern": "Activator.CreateInstance",
        "code": "return Activator.CreateInstance(expectedConverterType, underlyingConverter) as FormDataConverter ??",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Activator.CreateInstance",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Components/Endpoints/src/FormMapping/Factories/Dictionary/ConcreteTypeDictionaryConverterFactory.cs",
        "line": 28,
        "type": "dangerous_api",
        "pattern": "Activator.CreateInstance",
        "code": "var customFactory = Activator.CreateInstance(typeof(CustomDictionaryConverterFactory<>)",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Activator.CreateInstance",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Components/Endpoints/src/FormMapping/Factories/Collections/ConcreteTypeCollectionConverterFactory.cs",
        "line": 26,
        "type": "dangerous_api",
        "pattern": "Activator.CreateInstance",
        "code": "var customFactory = Activator.CreateInstance(typeof(CustomCollectionConverterFactory<>)",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Activator.CreateInstance",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Components/Endpoints/src/Rendering/EndpointHtmlRenderer.Prerendering.cs",
        "line": 26,
        "type": "dangerous_api",
        "pattern": "Activator.CreateInstance",
        "code": "return componentActivator.CreateInstance(componentType);",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Activator.CreateInstance",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Components/Endpoints/src/Rendering/EndpointHtmlRenderer.Prerendering.cs",
        "line": 36,
        "type": "dangerous_api",
        "pattern": "Activator.CreateInstance",
        "code": "return componentActivator.CreateInstance(componentType);",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Activator.CreateInstance",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Components/Web/test/Media/ImageTest.cs",
        "line": 216,
        "type": "dangerous_api",
        "pattern": "Activator.CreateInstance",
        "code": "object? instance = Activator.CreateInstance(t, nonPublic: true);",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Activator.CreateInstance",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Components/Web/src/JSComponents/JSComponentInterop.cs",
        "line": 186,
        "type": "dangerous_api",
        "pattern": "Activator.CreateInstance",
        "code": "return Activator.CreateInstance(eventCallbackType, null, callback)!;",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Activator.CreateInstance",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Components/Server/src/Circuits/RemoteRenderer.cs",
        "line": 313,
        "type": "dangerous_api",
        "pattern": "Activator.CreateInstance",
        "code": "InteractiveServerRenderMode or InteractiveAutoRenderMode => componentActivator.CreateInstance(componentType),",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Activator.CreateInstance",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Components/Components/test/RendererTest.cs",
        "line": 5181,
        "type": "dangerous_api",
        "pattern": "Activator.CreateInstance",
        "code": "SubstituteComponentRenderMode => componentActivator.CreateInstance(typeof(MessageComponent)),",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Activator.CreateInstance",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Components/Components/src/ComponentFactory.cs",
        "line": 71,
        "type": "dangerous_api",
        "pattern": "Activator.CreateInstance",
        "code": "component = _componentActivator.CreateInstance(componentType);",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Activator.CreateInstance",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Components/Components/src/ChangeDetection.cs",
        "line": 52,
        "type": "dangerous_api",
        "pattern": "Type.GetType",
        "code": "=> Type.GetTypeCode(type) != TypeCode.Object",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Type.GetType",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Components/Components/src/PersistentState/PersistentStateValueProviderKeyResolver.cs",
        "line": 206,
        "type": "dangerous_api",
        "pattern": "Type.GetType",
        "code": "var result = Type.GetTypeCode(keyType) != TypeCode.Object",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Type.GetType",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Components/WebAssembly/WebAssembly/src/Rendering/WebAssemblyRenderer.cs",
        "line": 216,
        "type": "dangerous_api",
        "pattern": "Activator.CreateInstance",
        "code": "InteractiveWebAssemblyRenderMode or InteractiveAutoRenderMode => componentActivator.CreateInstance(componentType),",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Activator.CreateInstance",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/DataProtection/Cryptography.Internal/src/SafeHandles/SafeLibraryHandle.cs",
        "line": 103,
        "type": "dangerous_api",
        "pattern": "Marshal.GetDelegateForFunctionPointer",
        "code": "return Marshal.GetDelegateForFunctionPointer<TDelegate>(pfnProc);",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Marshal.GetDelegateForFunctionPointer",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/DataProtection/samples/KeyManagementSimulator/Program.cs",
        "line": 269,
        "type": "dangerous_api",
        "pattern": "Activator.CreateInstance",
        "code": "object IActivator.CreateInstance(Type type, string _friendlyName) => type switch",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Activator.CreateInstance",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/src/RegistryPolicyResolver.cs",
        "line": 45,
        "type": "dangerous_api",
        "pattern": "Type.GetType",
        "code": "// We call Type.GetType to perform an eager check that the type exists.",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Type.GetType",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/src/TypeForwardingActivator.cs",
        "line": 34,
        "type": "dangerous_api",
        "pattern": "Type.GetType",
        "code": "[UnconditionalSuppressMessage(\"Trimmer\", \"IL2057\", Justification = \"Type.GetType is only used with forwarded types that are referenced by DataProtection assembly.\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Type.GetType",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/src/TypeForwardingActivator.cs",
        "line": 39,
        "type": "dangerous_api",
        "pattern": "Type.GetType",
        "code": "var type = Type.GetType(forwardedTypeName, false);",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Type.GetType",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/src/TypeExtensions.cs",
        "line": 36,
        "type": "dangerous_api",
        "pattern": "Type.GetType",
        "code": "return Type.GetType(typeName, throwOnError: true)!;",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Type.GetType",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/src/SimpleActivator.cs",
        "line": 44,
        "type": "dangerous_api",
        "pattern": "Activator.CreateInstance",
        "code": "return Activator.CreateInstance(implementationType)!;",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Activator.CreateInstance",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/src/SimpleActivator.cs",
        "line": 57,
        "type": "dangerous_api",
        "pattern": "Activator.CreateInstance",
        "code": "return Activator.CreateInstance(implementationType)!;",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Activator.CreateInstance",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/src/Internal/DefaultTypeNameResolver.cs",
        "line": 17,
        "type": "dangerous_api",
        "pattern": "Type.GetType",
        "code": "[UnconditionalSuppressMessage(\"Trimmer\", \"IL2057\", Justification = \"Type.GetType is only used to resolve statically known types that are referenced by DataProtection assembly.\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Type.GetType",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/src/Internal/DefaultTypeNameResolver.cs",
        "line": 25,
        "type": "dangerous_api",
        "pattern": "Type.GetType",
        "code": "type = Type.GetType(typeName, throwOnError: false);",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Type.GetType",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/src/Internal/IActivator.cs",
        "line": 10,
        "type": "dangerous_api",
        "pattern": "Activator.CreateInstance",
        "code": "/// An interface into <see cref=\"Activator.CreateInstance{T}\"/> that also supports",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Activator.CreateInstance",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/src/AuthenticatedEncryption/ManagedAuthenticatedEncryptorFactory.cs",
        "line": 113,
        "type": "dangerous_api",
        "pattern": "Activator.CreateInstance",
        "code": "/// Creates a factory that wraps a call to <see cref=\"Activator.CreateInstance{T}\"/>.",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Activator.CreateInstance",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/src/AuthenticatedEncryption/ManagedAuthenticatedEncryptorFactory.cs",
        "line": 118,
        "type": "dangerous_api",
        "pattern": "Activator.CreateInstance",
        "code": "return ((IActivator<T>)Activator.CreateInstance(typeof(AlgorithmActivatorCore<>).MakeGenericType(implementation))!).Creator;",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Activator.CreateInstance",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/src/AuthenticatedEncryption/ManagedAuthenticatedEncryptorFactory.cs",
        "line": 128,
        "type": "dangerous_api",
        "pattern": "Activator.CreateInstance",
        "code": "public Func<T> Creator { get; } = Activator.CreateInstance<T>;",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Activator.CreateInstance",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/src/AuthenticatedEncryption/ConfigurationModel/ManagedAlgorithmHelpers.cs",
        "line": 58,
        "type": "dangerous_api",
        "pattern": "Activator.CreateInstance",
        "code": "// All other types are created using Activator.CreateInstance. Validate it has a valid constructor.",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Activator.CreateInstance",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/src/Cng/DpapiSecretSerializerHelper.cs",
        "line": 104,
        "type": "dangerous_api",
        "pattern": "Marshal.Copy",
        "code": "Marshal.Copy((IntPtr)dataOut.pbData, retVal, 0, dataLength);",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Marshal.Copy",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Http/Http.Results/src/ResultsCache.StatusCodes.cs",
        "line": 7,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "using System.CodeDom.Compiler;",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Http/Http/test/DefaultHttpContextTests.cs",
        "line": 340,
        "type": "dangerous_api",
        "pattern": "Type.GetType",
        "code": "f.FieldType.GetTypeInfo().IsGenericType &&",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Type.GetType",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Http/Http/test/DefaultHttpContextTests.cs",
        "line": 367,
        "type": "dangerous_api",
        "pattern": "Type.GetType",
        "code": ".Where(p => p.PropertyType.GetTypeInfo().IsInterface);",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Type.GetType",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Http/Http/test/DefaultHttpContextTests.cs",
        "line": 373,
        "type": "dangerous_api",
        "pattern": "Type.GetType",
        "code": ".Where(f => f.FieldType.GetTypeInfo().IsInterface && f.GetCustomAttribute<CompilerGeneratedAttribute>() == null);",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Type.GetType",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Http/Http/test/DefaultHttpContextTests.cs",
        "line": 344,
        "type": "dangerous_api",
        "pattern": "Activator.CreateInstance",
        "code": "Activator.CreateInstance(field.FieldType) :",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Activator.CreateInstance",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Http/Http/test/DefaultHttpContextTests.cs",
        "line": 345,
        "type": "dangerous_api",
        "pattern": "Activator.CreateInstance",
        "code": "Activator.CreateInstance(field.FieldType, features);",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Activator.CreateInstance",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Http/Routing/src/Matching/ILEmitTrieFactory.cs",
        "line": 10,
        "type": "dangerous_api",
        "pattern": "System.Reflection.Emit",
        "code": "using System.Reflection.Emit;",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: System.Reflection.Emit",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Http/Http.Abstractions/test/UseMiddlewareTest.cs",
        "line": 299,
        "type": "dangerous_api",
        "pattern": "Activator.CreateInstance",
        "code": "Created = Activator.CreateInstance(middlewareType) as IMiddleware;",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Activator.CreateInstance",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Http/Http.Abstractions/src/EndpointFilterInvocationContextOfT.Generated.cs",
        "line": 7,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "using System.CodeDom.Compiler;",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Http/Http.Extensions/test/RequestDelegateFactoryTests.cs",
        "line": 2235,
        "type": "dangerous_api",
        "pattern": "Activator.CreateInstance",
        "code": "return Activator.CreateInstance(methodInfo!.DeclaringType!)!;",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Activator.CreateInstance",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Http/Http.Extensions/test/RequestDelegateGenerator/RequestDelegateCreationTests.Metadata.cs",
        "line": 19,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "using System.CodeDom.Compiler;",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Http/Http.Extensions/test/RequestDelegateGenerator/RequestDelegateCreationTestBase.cs",
        "line": 4,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "using System.CodeDom.Compiler;",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Http/Http.Extensions/gen/Microsoft.AspNetCore.Http.RequestDelegateGenerator/RequestDelegateGeneratorSources.cs",
        "line": 27,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "public static string GeneratedCodeConstructor => $@\"System.CodeDom.Compiler.GeneratedCodeAttribute(\"\"{typeof(RequestDelegateGeneratorSources).Assembly.FullName}\"\", \"\"{typeof(RequestDelegateGeneratorSources).Assembly.GetName().Version}\"\")\";",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Http/Http.Extensions/src/RequestDelegateFactory.cs",
        "line": 252,
        "type": "dangerous_api",
        "pattern": "Activator.CreateInstance",
        "code": "targetFactory ??= context => Activator.CreateInstance(methodInfo.DeclaringType)!;",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Activator.CreateInstance",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Hosting/Hosting/src/WebHostBuilder.cs",
        "line": 243,
        "type": "dangerous_api",
        "pattern": "Activator.CreateInstance",
        "code": "var hostingStartup = (IHostingStartup)Activator.CreateInstance(attribute.HostingStartupType)!;",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Activator.CreateInstance",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Hosting/Hosting/src/Internal/StartupLoader.cs",
        "line": 57,
        "type": "dangerous_api",
        "pattern": "Activator.CreateInstance",
        "code": "var builder = (ConfigureServicesDelegateBuilder)Activator.CreateInstance(",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Activator.CreateInstance",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Hosting/Hosting/src/GenericHost/GenericWebHostBuilder.cs",
        "line": 149,
        "type": "dangerous_api",
        "pattern": "Activator.CreateInstance",
        "code": "var hostingStartup = (IHostingStartup)Activator.CreateInstance(attribute.HostingStartupType)!;",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Activator.CreateInstance",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/test/FunctionalTests/DelegateTests.cs",
        "line": 330,
        "type": "dangerous_api",
        "pattern": "Marshal.Copy",
        "code": "Marshal.Copy(new IntPtr(pSecurityDescriptor.Value), securityDescriptorBytes, 0, length);",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Marshal.Copy",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/samples/TlsFeaturesObserve/HttpSys/HttpSysConfigurator.cs",
        "line": 34,
        "type": "dangerous_api",
        "pattern": "GCHandle.Alloc",
        "code": "var handleHash = GCHandle.Alloc(hash, GCHandleType.Pinned);",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: GCHandle.Alloc",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/samples/TlsFeaturesObserve/HttpSys/HttpSysConfigurator.cs",
        "line": 92,
        "type": "dangerous_api",
        "pattern": "GCHandle.Alloc",
        "code": "var sockAddrHandle = GCHandle.Alloc(sockAddrStructureBytes, GCHandleType.Pinned);",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: GCHandle.Alloc",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/src/NativeInterop/RequestQueue.cs",
        "line": 59,
        "type": "dangerous_api",
        "pattern": "Marshal.Copy",
        "code": "Marshal.Copy(securityDescriptorBytes, 0, pSecurityDescriptor.Value, securityDescriptorBytes.Length);",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Marshal.Copy",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/src/NativeInterop/SafeLibraryHandle.cs",
        "line": 48,
        "type": "dangerous_api",
        "pattern": "Marshal.GetDelegateForFunctionPointer",
        "code": "return Marshal.GetDelegateForFunctionPointer<TDelegate>(pfnProc);",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Marshal.GetDelegateForFunctionPointer",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/src/RequestProcessing/ClientCertLoader.cs",
        "line": 279,
        "type": "dangerous_api",
        "pattern": "Marshal.Copy",
        "code": "Marshal.Copy((IntPtr)pClientCertInfo->pCertEncoded, certEncoded, 0, certEncoded.Length);",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Marshal.Copy",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/src/RequestProcessing/ResponseBody.cs",
        "line": 281,
        "type": "dangerous_api",
        "pattern": "GCHandle.Alloc",
        "code": "handle = GCHandle.Alloc(buffer.Array, GCHandleType.Pinned);",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: GCHandle.Alloc",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/Kestrel/Core/test/KestrelEventSourceTests.cs",
        "line": 17,
        "type": "dangerous_api",
        "pattern": "Assembly.GetType",
        "code": "var esType = typeof(KestrelServer).Assembly.GetType(",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Assembly.GetType",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/IIS/IIS/src/Core/IISHttpServer.cs",
        "line": 98,
        "type": "dangerous_api",
        "pattern": "GCHandle.Alloc",
        "code": "_httpServerHandle = GCHandle.Alloc(this);",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: GCHandle.Alloc",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/IIS/IIS/src/Core/IISHttpContext.FeatureCollection.cs",
        "line": 395,
        "type": "dangerous_api",
        "pattern": "Marshal.Copy",
        "code": "Marshal.Copy((IntPtr)NativeRequest->pSslInfo->pClientCertInfo->pCertEncoded, rawCertificateCopy, 0, rawCertificateCopy.Length);",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Marshal.Copy",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/IIS/IIS/src/Core/IISHttpContext.cs",
        "line": 156,
        "type": "dangerous_api",
        "pattern": "GCHandle.Alloc",
        "code": "_thisHandle = GCHandle.Alloc(this);",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: GCHandle.Alloc",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/IIS/IIS/src/Core/IO/WebSocketsAsyncIOEngine.Read.cs",
        "line": 36,
        "type": "dangerous_api",
        "pattern": "GCHandle.Alloc",
        "code": "_thisHandle = GCHandle.Alloc(this);",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: GCHandle.Alloc",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/IIS/IIS/src/Core/IO/WebSocketsAsyncIOEngine.Write.cs",
        "line": 31,
        "type": "dangerous_api",
        "pattern": "GCHandle.Alloc",
        "code": "_thisHandle = GCHandle.Alloc(this);",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: GCHandle.Alloc",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.SkipValidation.cs",
        "line": 118,
        "type": "dangerous_api",
        "pattern": "Activator.CreateInstance",
        "code": "var instance = Activator.CreateInstance(type);",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Activator.CreateInstance",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.SkipValidation.cs",
        "line": 135,
        "type": "dangerous_api",
        "pattern": "Activator.CreateInstance",
        "code": "var instance = Activator.CreateInstance(type);",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Activator.CreateInstance",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.SkipValidation.cs",
        "line": 157,
        "type": "dangerous_api",
        "pattern": "Activator.CreateInstance",
        "code": "var instance = Activator.CreateInstance(type);",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Activator.CreateInstance",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.SkipValidation.cs",
        "line": 175,
        "type": "dangerous_api",
        "pattern": "Activator.CreateInstance",
        "code": "var rootInstance = Activator.CreateInstance(type);",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Activator.CreateInstance",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.SkipValidation.cs",
        "line": 176,
        "type": "dangerous_api",
        "pattern": "Activator.CreateInstance",
        "code": "var listInstance = Activator.CreateInstance(typeof(List<>).MakeGenericType(type.Assembly.GetType(\"NestedType\")!));",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Activator.CreateInstance",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.SkipValidation.cs",
        "line": 179,
        "type": "dangerous_api",
        "pattern": "Activator.CreateInstance",
        "code": "var nestedTypeInstance = Activator.CreateInstance(type.Assembly.GetType(\"NestedType\")!);",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Activator.CreateInstance",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.SkipValidation.cs",
        "line": 203,
        "type": "dangerous_api",
        "pattern": "Activator.CreateInstance",
        "code": "var rootInstance = Activator.CreateInstance(type);",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Activator.CreateInstance",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.SkipValidation.cs",
        "line": 204,
        "type": "dangerous_api",
        "pattern": "Activator.CreateInstance",
        "code": "var listInstance = Activator.CreateInstance(typeof(List<>).MakeGenericType(type.Assembly.GetType(\"NestedType\")!));",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Activator.CreateInstance",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.SkipValidation.cs",
        "line": 207,
        "type": "dangerous_api",
        "pattern": "Activator.CreateInstance",
        "code": "var nestedTypeInstance = Activator.CreateInstance(type.Assembly.GetType(\"NestedType\")!);",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Activator.CreateInstance",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.SkipValidation.cs",
        "line": 227,
        "type": "dangerous_api",
        "pattern": "Activator.CreateInstance",
        "code": "var instance = Activator.CreateInstance(type);",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Activator.CreateInstance",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.SkipValidation.cs",
        "line": 258,
        "type": "dangerous_api",
        "pattern": "Activator.CreateInstance",
        "code": "var instance = Activator.CreateInstance(type);",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Activator.CreateInstance",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.SkipValidation.cs",
        "line": 335,
        "type": "dangerous_api",
        "pattern": "Activator.CreateInstance",
        "code": "var nestedTypeInstance = Activator.CreateInstance(nestedType);",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Activator.CreateInstance",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.SkipValidation.cs",
        "line": 336,
        "type": "dangerous_api",
        "pattern": "Activator.CreateInstance",
        "code": "var skippedNestedTypeInstance = Activator.CreateInstance(nestedType);",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Activator.CreateInstance",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.SkipValidation.cs",
        "line": 338,
        "type": "dangerous_api",
        "pattern": "Activator.CreateInstance",
        "code": "var instance = Activator.CreateInstance(type, 10, nestedTypeInstance, skippedNestedTypeInstance);",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Activator.CreateInstance",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.SkipValidation.cs",
        "line": 359,
        "type": "dangerous_api",
        "pattern": "Activator.CreateInstance",
        "code": "var nestedTypeInstance = Activator.CreateInstance(nestedType);",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Activator.CreateInstance",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.SkipValidation.cs",
        "line": 360,
        "type": "dangerous_api",
        "pattern": "Activator.CreateInstance",
        "code": "var skippedNestedTypeInstance = Activator.CreateInstance(nestedType);",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Activator.CreateInstance",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.SkipValidation.cs",
        "line": 362,
        "type": "dangerous_api",
        "pattern": "Activator.CreateInstance",
        "code": "var instance = Activator.CreateInstance(type, 10, nestedTypeInstance, skippedNestedTypeInstance);",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Activator.CreateInstance",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.SkipValidation.cs",
        "line": 379,
        "type": "dangerous_api",
        "pattern": "Activator.CreateInstance",
        "code": "var nestedTypeInstance = Activator.CreateInstance(nestedType);",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Activator.CreateInstance",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.SkipValidation.cs",
        "line": 380,
        "type": "dangerous_api",
        "pattern": "Activator.CreateInstance",
        "code": "var instance = Activator.CreateInstance(type, 5, nestedTypeInstance, nestedTypeInstance); // Create with invalid value",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Activator.CreateInstance",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.SkipValidation.cs",
        "line": 176,
        "type": "dangerous_api",
        "pattern": "Assembly.GetType",
        "code": "var listInstance = Activator.CreateInstance(typeof(List<>).MakeGenericType(type.Assembly.GetType(\"NestedType\")!));",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Assembly.GetType",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.SkipValidation.cs",
        "line": 179,
        "type": "dangerous_api",
        "pattern": "Assembly.GetType",
        "code": "var nestedTypeInstance = Activator.CreateInstance(type.Assembly.GetType(\"NestedType\")!);",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Assembly.GetType",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.SkipValidation.cs",
        "line": 204,
        "type": "dangerous_api",
        "pattern": "Assembly.GetType",
        "code": "var listInstance = Activator.CreateInstance(typeof(List<>).MakeGenericType(type.Assembly.GetType(\"NestedType\")!));",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Assembly.GetType",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.SkipValidation.cs",
        "line": 207,
        "type": "dangerous_api",
        "pattern": "Assembly.GetType",
        "code": "var nestedTypeInstance = Activator.CreateInstance(type.Assembly.GetType(\"NestedType\")!);",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Assembly.GetType",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.ValidatableType.cs",
        "line": 159,
        "type": "dangerous_api",
        "pattern": "Type.GetType",
        "code": "subType.GetType().GetProperty(\"RequiredProperty\")?.SetValue(subType, \"\");",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Type.GetType",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.ValidatableType.cs",
        "line": 160,
        "type": "dangerous_api",
        "pattern": "Type.GetType",
        "code": "subType.GetType().GetProperty(\"StringWithLength\")?.SetValue(subType, \"way-too-long\");",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Type.GetType",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.ValidatableType.cs",
        "line": 187,
        "type": "dangerous_api",
        "pattern": "Type.GetType",
        "code": "inheritanceType.GetType().GetProperty(\"RequiredProperty\")?.SetValue(inheritanceType, \"\");",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Type.GetType",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.ValidatableType.cs",
        "line": 188,
        "type": "dangerous_api",
        "pattern": "Type.GetType",
        "code": "inheritanceType.GetType().GetProperty(\"StringWithLength\")?.SetValue(inheritanceType, \"way-too-long\");",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Type.GetType",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.ValidatableType.cs",
        "line": 189,
        "type": "dangerous_api",
        "pattern": "Type.GetType",
        "code": "inheritanceType.GetType().GetProperty(\"EmailString\")?.SetValue(inheritanceType, \"not-an-email\");",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Type.GetType",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.ValidatableType.cs",
        "line": 356,
        "type": "dangerous_api",
        "pattern": "Type.GetType",
        "code": "inheritanceType.GetType().GetProperty(\"RequiredProperty\")?.SetValue(inheritanceType, \"valid\");",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Type.GetType",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.ValidatableType.cs",
        "line": 357,
        "type": "dangerous_api",
        "pattern": "Type.GetType",
        "code": "inheritanceType.GetType().GetProperty(\"StringWithLength\")?.SetValue(inheritanceType, \"valid\");",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Type.GetType",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.ValidatableType.cs",
        "line": 358,
        "type": "dangerous_api",
        "pattern": "Type.GetType",
        "code": "inheritanceType.GetType().GetProperty(\"EmailString\")?.SetValue(inheritanceType, \"test@example.com\");",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Type.GetType",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.ValidatableType.cs",
        "line": 528,
        "type": "dangerous_api",
        "pattern": "Type.GetType",
        "code": "subType.GetType().GetProperty(\"RequiredProperty\")?.SetValue(subType, \"\");",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Type.GetType",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.ValidatableType.cs",
        "line": 529,
        "type": "dangerous_api",
        "pattern": "Type.GetType",
        "code": "subType.GetType().GetProperty(\"StringWithLength\")?.SetValue(subType, \"way-too-long\");",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Type.GetType",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.ValidatableType.cs",
        "line": 556,
        "type": "dangerous_api",
        "pattern": "Type.GetType",
        "code": "inheritanceType.GetType().GetProperty(\"RequiredProperty\")?.SetValue(inheritanceType, \"\");",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Type.GetType",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.ValidatableType.cs",
        "line": 557,
        "type": "dangerous_api",
        "pattern": "Type.GetType",
        "code": "inheritanceType.GetType().GetProperty(\"StringWithLength\")?.SetValue(inheritanceType, \"way-too-long\");",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Type.GetType",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.ValidatableType.cs",
        "line": 558,
        "type": "dangerous_api",
        "pattern": "Type.GetType",
        "code": "inheritanceType.GetType().GetProperty(\"EmailString\")?.SetValue(inheritanceType, \"not-an-email\");",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Type.GetType",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.ValidatableType.cs",
        "line": 725,
        "type": "dangerous_api",
        "pattern": "Type.GetType",
        "code": "inheritanceType.GetType().GetProperty(\"RequiredProperty\")?.SetValue(inheritanceType, \"valid\");",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Type.GetType",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.ValidatableType.cs",
        "line": 726,
        "type": "dangerous_api",
        "pattern": "Type.GetType",
        "code": "inheritanceType.GetType().GetProperty(\"StringWithLength\")?.SetValue(inheritanceType, \"valid\");",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Type.GetType",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.ValidatableType.cs",
        "line": 727,
        "type": "dangerous_api",
        "pattern": "Type.GetType",
        "code": "inheritanceType.GetType().GetProperty(\"EmailString\")?.SetValue(inheritanceType, \"test@example.com\");",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Type.GetType",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.ValidatableType.cs",
        "line": 100,
        "type": "dangerous_api",
        "pattern": "Activator.CreateInstance",
        "code": "var instance = Activator.CreateInstance(type);",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Activator.CreateInstance",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.ValidatableType.cs",
        "line": 119,
        "type": "dangerous_api",
        "pattern": "Activator.CreateInstance",
        "code": "var instance = Activator.CreateInstance(type);",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Activator.CreateInstance",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.ValidatableType.cs",
        "line": 138,
        "type": "dangerous_api",
        "pattern": "Activator.CreateInstance",
        "code": "var instance = Activator.CreateInstance(type);",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Activator.CreateInstance",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.ValidatableType.cs",
        "line": 157,
        "type": "dangerous_api",
        "pattern": "Activator.CreateInstance",
        "code": "var instance = Activator.CreateInstance(type);",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Activator.CreateInstance",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.ValidatableType.cs",
        "line": 158,
        "type": "dangerous_api",
        "pattern": "Activator.CreateInstance",
        "code": "var subType = Activator.CreateInstance(type.Assembly.GetType(\"SubType\")!);",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Activator.CreateInstance",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.ValidatableType.cs",
        "line": 185,
        "type": "dangerous_api",
        "pattern": "Activator.CreateInstance",
        "code": "var instance = Activator.CreateInstance(type);",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Activator.CreateInstance",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.ValidatableType.cs",
        "line": 186,
        "type": "dangerous_api",
        "pattern": "Activator.CreateInstance",
        "code": "var inheritanceType = Activator.CreateInstance(type.Assembly.GetType(\"SubTypeWithInheritance\")!);",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Activator.CreateInstance",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.ValidatableType.cs",
        "line": 219,
        "type": "dangerous_api",
        "pattern": "Activator.CreateInstance",
        "code": "var instance = Activator.CreateInstance(type);",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Activator.CreateInstance",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.ValidatableType.cs",
        "line": 220,
        "type": "dangerous_api",
        "pattern": "Activator.CreateInstance",
        "code": "var subTypeList = Activator.CreateInstance(typeof(List<>).MakeGenericType(type.Assembly.GetType(\"SubType\")!));",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Activator.CreateInstance",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.ValidatableType.cs",
        "line": 223,
        "type": "dangerous_api",
        "pattern": "Activator.CreateInstance",
        "code": "var subType1 = Activator.CreateInstance(type.Assembly.GetType(\"SubType\")!);",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Activator.CreateInstance",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.ValidatableType.cs",
        "line": 228,
        "type": "dangerous_api",
        "pattern": "Activator.CreateInstance",
        "code": "var subType2 = Activator.CreateInstance(type.Assembly.GetType(\"SubType\")!);",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Activator.CreateInstance",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.ValidatableType.cs",
        "line": 233,
        "type": "dangerous_api",
        "pattern": "Activator.CreateInstance",
        "code": "var subType3 = Activator.CreateInstance(type.Assembly.GetType(\"SubType\")!);",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Activator.CreateInstance",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.ValidatableType.cs",
        "line": 271,
        "type": "dangerous_api",
        "pattern": "Activator.CreateInstance",
        "code": "var instance = Activator.CreateInstance(type);",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Activator.CreateInstance",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.ValidatableType.cs",
        "line": 290,
        "type": "dangerous_api",
        "pattern": "Activator.CreateInstance",
        "code": "var instance = Activator.CreateInstance(type);",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Activator.CreateInstance",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.ValidatableType.cs",
        "line": 317,
        "type": "dangerous_api",
        "pattern": "Activator.CreateInstance",
        "code": "var instance = Activator.CreateInstance(type);",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Activator.CreateInstance",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.ValidatableType.cs",
        "line": 336,
        "type": "dangerous_api",
        "pattern": "Activator.CreateInstance",
        "code": "var instance = Activator.CreateInstance(type);",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Activator.CreateInstance",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.ValidatableType.cs",
        "line": 343,
        "type": "dangerous_api",
        "pattern": "Activator.CreateInstance",
        "code": "var subType1 = Activator.CreateInstance(type.Assembly.GetType(\"SubType\")!);",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Activator.CreateInstance",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.ValidatableType.cs",
        "line": 349,
        "type": "dangerous_api",
        "pattern": "Activator.CreateInstance",
        "code": "var subType2 = Activator.CreateInstance(type.Assembly.GetType(\"SubType\")!);",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Activator.CreateInstance",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.ValidatableType.cs",
        "line": 355,
        "type": "dangerous_api",
        "pattern": "Activator.CreateInstance",
        "code": "var inheritanceType = Activator.CreateInstance(type.Assembly.GetType(\"SubTypeWithInheritance\")!);",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Activator.CreateInstance",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.ValidatableType.cs",
        "line": 362,
        "type": "dangerous_api",
        "pattern": "Activator.CreateInstance",
        "code": "var emptyList = Activator.CreateInstance(typeof(List<>).MakeGenericType(type.Assembly.GetType(\"SubType\")!));",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Activator.CreateInstance",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.ValidatableType.cs",
        "line": 469,
        "type": "dangerous_api",
        "pattern": "Activator.CreateInstance",
        "code": "var instance = Activator.CreateInstance(type);",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Activator.CreateInstance",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.ValidatableType.cs",
        "line": 488,
        "type": "dangerous_api",
        "pattern": "Activator.CreateInstance",
        "code": "var instance = Activator.CreateInstance(type);",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Activator.CreateInstance",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.ValidatableType.cs",
        "line": 507,
        "type": "dangerous_api",
        "pattern": "Activator.CreateInstance",
        "code": "var instance = Activator.CreateInstance(type);",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Activator.CreateInstance",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.ValidatableType.cs",
        "line": 526,
        "type": "dangerous_api",
        "pattern": "Activator.CreateInstance",
        "code": "var instance = Activator.CreateInstance(type);",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Activator.CreateInstance",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.ValidatableType.cs",
        "line": 527,
        "type": "dangerous_api",
        "pattern": "Activator.CreateInstance",
        "code": "var subType = Activator.CreateInstance(type.Assembly.GetType(\"SubType\")!);",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Activator.CreateInstance",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.ValidatableType.cs",
        "line": 554,
        "type": "dangerous_api",
        "pattern": "Activator.CreateInstance",
        "code": "var instance = Activator.CreateInstance(type);",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Activator.CreateInstance",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.ValidatableType.cs",
        "line": 555,
        "type": "dangerous_api",
        "pattern": "Activator.CreateInstance",
        "code": "var inheritanceType = Activator.CreateInstance(type.Assembly.GetType(\"SubTypeWithInheritance\")!);",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Activator.CreateInstance",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.ValidatableType.cs",
        "line": 588,
        "type": "dangerous_api",
        "pattern": "Activator.CreateInstance",
        "code": "var instance = Activator.CreateInstance(type);",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Activator.CreateInstance",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.ValidatableType.cs",
        "line": 589,
        "type": "dangerous_api",
        "pattern": "Activator.CreateInstance",
        "code": "var subTypeList = Activator.CreateInstance(typeof(List<>).MakeGenericType(type.Assembly.GetType(\"SubType\")!));",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Activator.CreateInstance",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.ValidatableType.cs",
        "line": 592,
        "type": "dangerous_api",
        "pattern": "Activator.CreateInstance",
        "code": "var subType1 = Activator.CreateInstance(type.Assembly.GetType(\"SubType\")!);",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Activator.CreateInstance",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.ValidatableType.cs",
        "line": 597,
        "type": "dangerous_api",
        "pattern": "Activator.CreateInstance",
        "code": "var subType2 = Activator.CreateInstance(type.Assembly.GetType(\"SubType\")!);",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Activator.CreateInstance",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.ValidatableType.cs",
        "line": 602,
        "type": "dangerous_api",
        "pattern": "Activator.CreateInstance",
        "code": "var subType3 = Activator.CreateInstance(type.Assembly.GetType(\"SubType\")!);",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Activator.CreateInstance",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.ValidatableType.cs",
        "line": 640,
        "type": "dangerous_api",
        "pattern": "Activator.CreateInstance",
        "code": "var instance = Activator.CreateInstance(type);",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Activator.CreateInstance",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.ValidatableType.cs",
        "line": 659,
        "type": "dangerous_api",
        "pattern": "Activator.CreateInstance",
        "code": "var instance = Activator.CreateInstance(type);",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Activator.CreateInstance",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.ValidatableType.cs",
        "line": 686,
        "type": "dangerous_api",
        "pattern": "Activator.CreateInstance",
        "code": "var instance = Activator.CreateInstance(type);",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Activator.CreateInstance",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.ValidatableType.cs",
        "line": 705,
        "type": "dangerous_api",
        "pattern": "Activator.CreateInstance",
        "code": "var instance = Activator.CreateInstance(type);",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Activator.CreateInstance",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.ValidatableType.cs",
        "line": 712,
        "type": "dangerous_api",
        "pattern": "Activator.CreateInstance",
        "code": "var subType1 = Activator.CreateInstance(type.Assembly.GetType(\"SubType\")!);",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Activator.CreateInstance",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.ValidatableType.cs",
        "line": 718,
        "type": "dangerous_api",
        "pattern": "Activator.CreateInstance",
        "code": "var subType2 = Activator.CreateInstance(type.Assembly.GetType(\"SubType\")!);",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Activator.CreateInstance",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.ValidatableType.cs",
        "line": 724,
        "type": "dangerous_api",
        "pattern": "Activator.CreateInstance",
        "code": "var inheritanceType = Activator.CreateInstance(type.Assembly.GetType(\"SubTypeWithInheritance\")!);",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Activator.CreateInstance",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.ValidatableType.cs",
        "line": 731,
        "type": "dangerous_api",
        "pattern": "Activator.CreateInstance",
        "code": "var emptyList = Activator.CreateInstance(typeof(List<>).MakeGenericType(type.Assembly.GetType(\"SubType\")!));",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Activator.CreateInstance",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.ValidatableType.cs",
        "line": 158,
        "type": "dangerous_api",
        "pattern": "Assembly.GetType",
        "code": "var subType = Activator.CreateInstance(type.Assembly.GetType(\"SubType\")!);",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Assembly.GetType",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.ValidatableType.cs",
        "line": 186,
        "type": "dangerous_api",
        "pattern": "Assembly.GetType",
        "code": "var inheritanceType = Activator.CreateInstance(type.Assembly.GetType(\"SubTypeWithInheritance\")!);",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Assembly.GetType",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.ValidatableType.cs",
        "line": 220,
        "type": "dangerous_api",
        "pattern": "Assembly.GetType",
        "code": "var subTypeList = Activator.CreateInstance(typeof(List<>).MakeGenericType(type.Assembly.GetType(\"SubType\")!));",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Assembly.GetType",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.ValidatableType.cs",
        "line": 223,
        "type": "dangerous_api",
        "pattern": "Assembly.GetType",
        "code": "var subType1 = Activator.CreateInstance(type.Assembly.GetType(\"SubType\")!);",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Assembly.GetType",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.ValidatableType.cs",
        "line": 228,
        "type": "dangerous_api",
        "pattern": "Assembly.GetType",
        "code": "var subType2 = Activator.CreateInstance(type.Assembly.GetType(\"SubType\")!);",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Assembly.GetType",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.ValidatableType.cs",
        "line": 233,
        "type": "dangerous_api",
        "pattern": "Assembly.GetType",
        "code": "var subType3 = Activator.CreateInstance(type.Assembly.GetType(\"SubType\")!);",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Assembly.GetType",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.ValidatableType.cs",
        "line": 343,
        "type": "dangerous_api",
        "pattern": "Assembly.GetType",
        "code": "var subType1 = Activator.CreateInstance(type.Assembly.GetType(\"SubType\")!);",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Assembly.GetType",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.ValidatableType.cs",
        "line": 349,
        "type": "dangerous_api",
        "pattern": "Assembly.GetType",
        "code": "var subType2 = Activator.CreateInstance(type.Assembly.GetType(\"SubType\")!);",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Assembly.GetType",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.ValidatableType.cs",
        "line": 355,
        "type": "dangerous_api",
        "pattern": "Assembly.GetType",
        "code": "var inheritanceType = Activator.CreateInstance(type.Assembly.GetType(\"SubTypeWithInheritance\")!);",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Assembly.GetType",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.ValidatableType.cs",
        "line": 362,
        "type": "dangerous_api",
        "pattern": "Assembly.GetType",
        "code": "var emptyList = Activator.CreateInstance(typeof(List<>).MakeGenericType(type.Assembly.GetType(\"SubType\")!));",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Assembly.GetType",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.ValidatableType.cs",
        "line": 527,
        "type": "dangerous_api",
        "pattern": "Assembly.GetType",
        "code": "var subType = Activator.CreateInstance(type.Assembly.GetType(\"SubType\")!);",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Assembly.GetType",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.ValidatableType.cs",
        "line": 555,
        "type": "dangerous_api",
        "pattern": "Assembly.GetType",
        "code": "var inheritanceType = Activator.CreateInstance(type.Assembly.GetType(\"SubTypeWithInheritance\")!);",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Assembly.GetType",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.ValidatableType.cs",
        "line": 589,
        "type": "dangerous_api",
        "pattern": "Assembly.GetType",
        "code": "var subTypeList = Activator.CreateInstance(typeof(List<>).MakeGenericType(type.Assembly.GetType(\"SubType\")!));",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Assembly.GetType",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.ValidatableType.cs",
        "line": 592,
        "type": "dangerous_api",
        "pattern": "Assembly.GetType",
        "code": "var subType1 = Activator.CreateInstance(type.Assembly.GetType(\"SubType\")!);",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Assembly.GetType",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.ValidatableType.cs",
        "line": 597,
        "type": "dangerous_api",
        "pattern": "Assembly.GetType",
        "code": "var subType2 = Activator.CreateInstance(type.Assembly.GetType(\"SubType\")!);",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Assembly.GetType",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.ValidatableType.cs",
        "line": 602,
        "type": "dangerous_api",
        "pattern": "Assembly.GetType",
        "code": "var subType3 = Activator.CreateInstance(type.Assembly.GetType(\"SubType\")!);",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Assembly.GetType",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.ValidatableType.cs",
        "line": 712,
        "type": "dangerous_api",
        "pattern": "Assembly.GetType",
        "code": "var subType1 = Activator.CreateInstance(type.Assembly.GetType(\"SubType\")!);",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Assembly.GetType",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.ValidatableType.cs",
        "line": 718,
        "type": "dangerous_api",
        "pattern": "Assembly.GetType",
        "code": "var subType2 = Activator.CreateInstance(type.Assembly.GetType(\"SubType\")!);",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Assembly.GetType",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.ValidatableType.cs",
        "line": 724,
        "type": "dangerous_api",
        "pattern": "Assembly.GetType",
        "code": "var inheritanceType = Activator.CreateInstance(type.Assembly.GetType(\"SubTypeWithInheritance\")!);",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Assembly.GetType",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.ValidatableType.cs",
        "line": 731,
        "type": "dangerous_api",
        "pattern": "Assembly.GetType",
        "code": "var emptyList = Activator.CreateInstance(typeof(List<>).MakeGenericType(type.Assembly.GetType(\"SubType\")!));",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Assembly.GetType",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGeneratorTestBase.cs",
        "line": 543,
        "type": "dangerous_api",
        "pattern": "Type.GetType",
        "code": "var publicHostAbortedExceptionType = Type.GetType(\"Microsoft.Extensions.Hosting.HostAbortedException, Microsoft.Extensions.Hosting.Abstractions\", throwOnError: false);",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Type.GetType",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGeneratorTestBase.cs",
        "line": 546,
        "type": "dangerous_api",
        "pattern": "Activator.CreateInstance",
        "code": "throw (Exception)Activator.CreateInstance(publicHostAbortedExceptionType)!;",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Activator.CreateInstance",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGeneratorTestBase.cs",
        "line": 198,
        "type": "dangerous_api",
        "pattern": "Assembly.GetType",
        "code": "serviceType = targetAssembly.GetType(typeName, throwOnError: false);",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Assembly.GetType",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.ClassAttributes.cs",
        "line": 95,
        "type": "dangerous_api",
        "pattern": "Activator.CreateInstance",
        "code": "var instance = Activator.CreateInstance(type);",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Activator.CreateInstance",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.ClassAttributes.cs",
        "line": 115,
        "type": "dangerous_api",
        "pattern": "Activator.CreateInstance",
        "code": "var instance = Activator.CreateInstance(type);",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Activator.CreateInstance",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.ClassAttributes.cs",
        "line": 130,
        "type": "dangerous_api",
        "pattern": "Activator.CreateInstance",
        "code": "var instance = Activator.CreateInstance(type);",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Activator.CreateInstance",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.ClassAttributes.cs",
        "line": 150,
        "type": "dangerous_api",
        "pattern": "Activator.CreateInstance",
        "code": "var instance = Activator.CreateInstance(type);",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: Activator.CreateInstance",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanValidateComplexTypes#ValidatableInfoResolver.g.verified.cs",
        "line": 16,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanValidateComplexTypes#ValidatableInfoResolver.g.verified.cs",
        "line": 28,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanValidateComplexTypes#ValidatableInfoResolver.g.verified.cs",
        "line": 50,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanValidateComplexTypes#ValidatableInfoResolver.g.verified.cs",
        "line": 68,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanValidateComplexTypes#ValidatableInfoResolver.g.verified.cs",
        "line": 185,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanValidateComplexTypes#ValidatableInfoResolver.g.verified.cs",
        "line": 203,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanValidateTypeWithParsableProperties#ValidatableInfoResolver.g.verified.cs",
        "line": 16,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanValidateTypeWithParsableProperties#ValidatableInfoResolver.g.verified.cs",
        "line": 28,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanValidateTypeWithParsableProperties#ValidatableInfoResolver.g.verified.cs",
        "line": 50,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanValidateTypeWithParsableProperties#ValidatableInfoResolver.g.verified.cs",
        "line": 68,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanValidateTypeWithParsableProperties#ValidatableInfoResolver.g.verified.cs",
        "line": 149,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanValidateTypeWithParsableProperties#ValidatableInfoResolver.g.verified.cs",
        "line": 167,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanUseBothFrameworkAndGeneratedValidatableTypeAttributes#ValidatableInfoResolver.g.verified.cs",
        "line": 16,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanUseBothFrameworkAndGeneratedValidatableTypeAttributes#ValidatableInfoResolver.g.verified.cs",
        "line": 28,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanUseBothFrameworkAndGeneratedValidatableTypeAttributes#ValidatableInfoResolver.g.verified.cs",
        "line": 50,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanUseBothFrameworkAndGeneratedValidatableTypeAttributes#ValidatableInfoResolver.g.verified.cs",
        "line": 68,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanUseBothFrameworkAndGeneratedValidatableTypeAttributes#ValidatableInfoResolver.g.verified.cs",
        "line": 128,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanUseBothFrameworkAndGeneratedValidatableTypeAttributes#ValidatableInfoResolver.g.verified.cs",
        "line": 146,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanValidateParameters#ValidatableInfoResolver.g.verified.cs",
        "line": 16,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanValidateParameters#ValidatableInfoResolver.g.verified.cs",
        "line": 28,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanValidateParameters#ValidatableInfoResolver.g.verified.cs",
        "line": 50,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanValidateParameters#ValidatableInfoResolver.g.verified.cs",
        "line": 68,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanValidateParameters#ValidatableInfoResolver.g.verified.cs",
        "line": 116,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanValidateParameters#ValidatableInfoResolver.g.verified.cs",
        "line": 134,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.DoesNotEmit_ForSkipValidationAttribute_OnEndpointParameters#ValidatableInfoResolver.g.verified.cs",
        "line": 16,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.DoesNotEmit_ForSkipValidationAttribute_OnEndpointParameters#ValidatableInfoResolver.g.verified.cs",
        "line": 28,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.DoesNotEmit_ForSkipValidationAttribute_OnEndpointParameters#ValidatableInfoResolver.g.verified.cs",
        "line": 50,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.DoesNotEmit_ForSkipValidationAttribute_OnEndpointParameters#ValidatableInfoResolver.g.verified.cs",
        "line": 68,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.DoesNotEmit_ForSkipValidationAttribute_OnEndpointParameters#ValidatableInfoResolver.g.verified.cs",
        "line": 101,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.DoesNotEmit_ForSkipValidationAttribute_OnEndpointParameters#ValidatableInfoResolver.g.verified.cs",
        "line": 119,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.DoesNotEmit_ForSkipValidationAttribute_OnRecordProperties#ValidatableInfoResolver.g.verified.cs",
        "line": 16,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.DoesNotEmit_ForSkipValidationAttribute_OnRecordProperties#ValidatableInfoResolver.g.verified.cs",
        "line": 28,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.DoesNotEmit_ForSkipValidationAttribute_OnRecordProperties#ValidatableInfoResolver.g.verified.cs",
        "line": 50,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.DoesNotEmit_ForSkipValidationAttribute_OnRecordProperties#ValidatableInfoResolver.g.verified.cs",
        "line": 68,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.DoesNotEmit_ForSkipValidationAttribute_OnRecordProperties#ValidatableInfoResolver.g.verified.cs",
        "line": 116,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.DoesNotEmit_ForSkipValidationAttribute_OnRecordProperties#ValidatableInfoResolver.g.verified.cs",
        "line": 134,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanValidateRecordTypesWithAttribute#ValidatableInfoResolver.g.verified.cs",
        "line": 16,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanValidateRecordTypesWithAttribute#ValidatableInfoResolver.g.verified.cs",
        "line": 28,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanValidateRecordTypesWithAttribute#ValidatableInfoResolver.g.verified.cs",
        "line": 50,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanValidateRecordTypesWithAttribute#ValidatableInfoResolver.g.verified.cs",
        "line": 68,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanValidateRecordTypesWithAttribute#ValidatableInfoResolver.g.verified.cs",
        "line": 179,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanValidateRecordTypesWithAttribute#ValidatableInfoResolver.g.verified.cs",
        "line": 197,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.DoesNotEmit_ForSkipValidationAttribute_OnClassProperties#ValidatableInfoResolver.g.verified.cs",
        "line": 16,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.DoesNotEmit_ForSkipValidationAttribute_OnClassProperties#ValidatableInfoResolver.g.verified.cs",
        "line": 28,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.DoesNotEmit_ForSkipValidationAttribute_OnClassProperties#ValidatableInfoResolver.g.verified.cs",
        "line": 50,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.DoesNotEmit_ForSkipValidationAttribute_OnClassProperties#ValidatableInfoResolver.g.verified.cs",
        "line": 68,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.DoesNotEmit_ForSkipValidationAttribute_OnClassProperties#ValidatableInfoResolver.g.verified.cs",
        "line": 158,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.DoesNotEmit_ForSkipValidationAttribute_OnClassProperties#ValidatableInfoResolver.g.verified.cs",
        "line": 176,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanValidatePolymorphicTypes#ValidatableInfoResolver.g.verified.cs",
        "line": 16,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanValidatePolymorphicTypes#ValidatableInfoResolver.g.verified.cs",
        "line": 28,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanValidatePolymorphicTypes#ValidatableInfoResolver.g.verified.cs",
        "line": 50,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanValidatePolymorphicTypes#ValidatableInfoResolver.g.verified.cs",
        "line": 68,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanValidatePolymorphicTypes#ValidatableInfoResolver.g.verified.cs",
        "line": 166,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanValidatePolymorphicTypes#ValidatableInfoResolver.g.verified.cs",
        "line": 184,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanValidateIValidatableObject_WithoutPropertyValidations#ValidatableInfoResolver.g.verified.cs",
        "line": 16,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanValidateIValidatableObject_WithoutPropertyValidations#ValidatableInfoResolver.g.verified.cs",
        "line": 28,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanValidateIValidatableObject_WithoutPropertyValidations#ValidatableInfoResolver.g.verified.cs",
        "line": 50,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanValidateIValidatableObject_WithoutPropertyValidations#ValidatableInfoResolver.g.verified.cs",
        "line": 68,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanValidateIValidatableObject_WithoutPropertyValidations#ValidatableInfoResolver.g.verified.cs",
        "line": 125,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanValidateIValidatableObject_WithoutPropertyValidations#ValidatableInfoResolver.g.verified.cs",
        "line": 143,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanValidateMultipleNamespaces#ValidatableInfoResolver.g.verified.cs",
        "line": 16,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanValidateMultipleNamespaces#ValidatableInfoResolver.g.verified.cs",
        "line": 28,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanValidateMultipleNamespaces#ValidatableInfoResolver.g.verified.cs",
        "line": 50,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanValidateMultipleNamespaces#ValidatableInfoResolver.g.verified.cs",
        "line": 68,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanValidateMultipleNamespaces#ValidatableInfoResolver.g.verified.cs",
        "line": 116,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanValidateMultipleNamespaces#ValidatableInfoResolver.g.verified.cs",
        "line": 134,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanValidateIValidatableObject#ValidatableInfoResolver.g.verified.cs",
        "line": 16,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanValidateIValidatableObject#ValidatableInfoResolver.g.verified.cs",
        "line": 28,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanValidateIValidatableObject#ValidatableInfoResolver.g.verified.cs",
        "line": 50,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanValidateIValidatableObject#ValidatableInfoResolver.g.verified.cs",
        "line": 68,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanValidateIValidatableObject#ValidatableInfoResolver.g.verified.cs",
        "line": 136,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanValidateIValidatableObject#ValidatableInfoResolver.g.verified.cs",
        "line": 154,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanValidateValidationAttributesOnClasses#ValidatableInfoResolver.g.verified.cs",
        "line": 16,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanValidateValidationAttributesOnClasses#ValidatableInfoResolver.g.verified.cs",
        "line": 28,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanValidateValidationAttributesOnClasses#ValidatableInfoResolver.g.verified.cs",
        "line": 50,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanValidateValidationAttributesOnClasses#ValidatableInfoResolver.g.verified.cs",
        "line": 68,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanValidateValidationAttributesOnClasses#ValidatableInfoResolver.g.verified.cs",
        "line": 121,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanValidateValidationAttributesOnClasses#ValidatableInfoResolver.g.verified.cs",
        "line": 139,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanDiscoverGeneratedValidatableTypeAttribute#ValidatableInfoResolver.g.verified.cs",
        "line": 16,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanDiscoverGeneratedValidatableTypeAttribute#ValidatableInfoResolver.g.verified.cs",
        "line": 28,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanDiscoverGeneratedValidatableTypeAttribute#ValidatableInfoResolver.g.verified.cs",
        "line": 50,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanDiscoverGeneratedValidatableTypeAttribute#ValidatableInfoResolver.g.verified.cs",
        "line": 68,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanDiscoverGeneratedValidatableTypeAttribute#ValidatableInfoResolver.g.verified.cs",
        "line": 107,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanDiscoverGeneratedValidatableTypeAttribute#ValidatableInfoResolver.g.verified.cs",
        "line": 125,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanValidateClassTypesWithAttribute#ValidatableInfoResolver.g.verified.cs",
        "line": 16,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanValidateClassTypesWithAttribute#ValidatableInfoResolver.g.verified.cs",
        "line": 28,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanValidateClassTypesWithAttribute#ValidatableInfoResolver.g.verified.cs",
        "line": 50,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanValidateClassTypesWithAttribute#ValidatableInfoResolver.g.verified.cs",
        "line": 68,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanValidateClassTypesWithAttribute#ValidatableInfoResolver.g.verified.cs",
        "line": 179,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanValidateClassTypesWithAttribute#ValidatableInfoResolver.g.verified.cs",
        "line": 197,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanValidateComplexTypesWithJsonIgnore#ValidatableInfoResolver.g.verified.cs",
        "line": 16,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanValidateComplexTypesWithJsonIgnore#ValidatableInfoResolver.g.verified.cs",
        "line": 28,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanValidateComplexTypesWithJsonIgnore#ValidatableInfoResolver.g.verified.cs",
        "line": 50,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanValidateComplexTypesWithJsonIgnore#ValidatableInfoResolver.g.verified.cs",
        "line": 68,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanValidateComplexTypesWithJsonIgnore#ValidatableInfoResolver.g.verified.cs",
        "line": 116,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanValidateComplexTypesWithJsonIgnore#ValidatableInfoResolver.g.verified.cs",
        "line": 134,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.SkipsClassesWithNonAccessibleTypes#ValidatableInfoResolver.g.verified.cs",
        "line": 16,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.SkipsClassesWithNonAccessibleTypes#ValidatableInfoResolver.g.verified.cs",
        "line": 28,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.SkipsClassesWithNonAccessibleTypes#ValidatableInfoResolver.g.verified.cs",
        "line": 50,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.SkipsClassesWithNonAccessibleTypes#ValidatableInfoResolver.g.verified.cs",
        "line": 68,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.SkipsClassesWithNonAccessibleTypes#ValidatableInfoResolver.g.verified.cs",
        "line": 101,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.SkipsClassesWithNonAccessibleTypes#ValidatableInfoResolver.g.verified.cs",
        "line": 119,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanValidateRecursiveTypes#ValidatableInfoResolver.g.verified.cs",
        "line": 16,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanValidateRecursiveTypes#ValidatableInfoResolver.g.verified.cs",
        "line": 28,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanValidateRecursiveTypes#ValidatableInfoResolver.g.verified.cs",
        "line": 50,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanValidateRecursiveTypes#ValidatableInfoResolver.g.verified.cs",
        "line": 68,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanValidateRecursiveTypes#ValidatableInfoResolver.g.verified.cs",
        "line": 107,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanValidateRecursiveTypes#ValidatableInfoResolver.g.verified.cs",
        "line": 125,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanValidateRecordTypes#ValidatableInfoResolver.g.verified.cs",
        "line": 16,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanValidateRecordTypes#ValidatableInfoResolver.g.verified.cs",
        "line": 28,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanValidateRecordTypes#ValidatableInfoResolver.g.verified.cs",
        "line": 50,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanValidateRecordTypes#ValidatableInfoResolver.g.verified.cs",
        "line": 68,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanValidateRecordTypes#ValidatableInfoResolver.g.verified.cs",
        "line": 212,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanValidateRecordTypes#ValidatableInfoResolver.g.verified.cs",
        "line": 230,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.DoesNotEmitForExemptTypes#ValidatableInfoResolver.g.verified.cs",
        "line": 16,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.DoesNotEmitForExemptTypes#ValidatableInfoResolver.g.verified.cs",
        "line": 28,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.DoesNotEmitForExemptTypes#ValidatableInfoResolver.g.verified.cs",
        "line": 50,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.DoesNotEmitForExemptTypes#ValidatableInfoResolver.g.verified.cs",
        "line": 68,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.DoesNotEmitForExemptTypes#ValidatableInfoResolver.g.verified.cs",
        "line": 101,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.DoesNotEmitForExemptTypes#ValidatableInfoResolver.g.verified.cs",
        "line": 119,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Validation/gen/Emitters/ValidationsGenerator.Emitter.cs",
        "line": 15,
        "type": "dangerous_api",
        "pattern": "CodeDom.Compiler",
        "code": "public static string GeneratedCodeConstructor => $@\"global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"\"{typeof(ValidationsGenerator).Assembly.FullName}\"\", \"\"{typeof(ValidationsGenerator).Assembly.GetName().Version}\"\")\";",
        "severity": "HIGH",
        "description": "Use of potentially dangerous API: CodeDom.Compiler",
        "recommendation": "Review usage and consider safer alternatives"
      }
    ],
    "unsafe_code": [
      {
        "file": "/tmp/aspnetcore_analysis/src/Middleware/Session/src/SipHash.cs",
        "line": 24,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "unsafe",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Razor/Razor/src/TagHelpers/NullHtmlEncoder.cs",
        "line": 71,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "public override unsafe int FindFirstCharacterToEncode(char* text, int textLength)",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Razor/Razor/src/TagHelpers/NullHtmlEncoder.cs",
        "line": 77,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "public override unsafe bool TryEncodeUnicodeScalar(",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/TagHelpersWebSite/TagHelpers/CustomEncoderTagHelper.cs",
        "line": 19,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "// Note this is very unsafe. Should always post-process content that may not be fully HTML encoded before",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/TagHelpersWebSite/TagHelpers/CustomEncoderTagHelper.cs",
        "line": 63,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "public override unsafe int FindFirstCharacterToEncode(char* text, int textLength) => -1;",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/TagHelpersWebSite/TagHelpers/CustomEncoderTagHelper.cs",
        "line": 65,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "public override unsafe bool TryEncodeUnicodeScalar(",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/TagHelpersWebSite/TagHelpers/NullEncoderTagHelper.cs",
        "line": 17,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "// Note this is very unsafe. Should always post-process content that may not be fully HTML encoded before",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.ViewFeatures/src/AutoValidateAntiforgeryTokenAttribute.cs",
        "line": 13,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "/// An attribute that causes validation of antiforgery tokens for all unsafe HTTP methods. An antiforgery",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.ViewFeatures/src/DefaultEditorTemplates.cs",
        "line": 526,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "public override unsafe int FindFirstCharacterToEncode(char* text, int textLength)",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.ViewFeatures/src/DefaultEditorTemplates.cs",
        "line": 531,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "public override unsafe bool TryEncodeUnicodeScalar(",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.NewtonsoftJson/src/JsonSerializerSettingsProvider.cs",
        "line": 39,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "// Setting this to None prevents Json.NET from loading malicious, unsafe, or security-sensitive types",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Core/test/ValidationProblemDetailsTest.cs",
        "line": 57,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "modelStateDictionary.AddModelError(\"unsafeError\",",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Core/test/ValidationProblemDetailsTest.cs",
        "line": 70,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "Assert.Equal(\"unsafeError\", item.Key);",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Framework/AspNetCoreAnalyzers/src/Analyzers/Infrastructure/VirtualChars/System.Text/Rune.cs",
        "line": 851,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "// off the end of the string using unsafe code. Since strings are null-terminated,",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/SignalR/common/Shared/Utf8BufferTextWriter.cs",
        "line": 115,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "private unsafe void WriteMultiByteChar(char value)",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/SignalR/common/Shared/Utf8BufferTextWriter.cs",
        "line": 185,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "unsafe",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/SignalR/common/Shared/Utf8BufferTextReader.cs",
        "line": 79,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "unsafe",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/SignalR/common/Http.Connections/src/Internal/HttpConnectionDispatcher.cs",
        "line": 512,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "// and it's unsafe to complete outside of the lock",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Shared/TrimmingAttributes.cs",
        "line": 14,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "/// This allows tools to understand which methods are unsafe to call when compiling ahead of time.",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Shared/TrimmingAttributes.cs",
        "line": 50,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "/// This allows tools to understand which methods are unsafe to call when removing unreferenced",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Shared/Buffers.MemoryPool/DiagnosticPoolBlock.cs",
        "line": 151,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "unsafe",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Shared/Buffers.MemoryPool/DiagnosticMemoryPool.cs",
        "line": 171,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "unsafe",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Shared/Buffers.MemoryPool/UnmanagedBufferAllocator.cs",
        "line": 12,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "internal unsafe struct UnmanagedBufferAllocator : IDisposable",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Shared/ValueStringBuilder/ValueStringBuilder.cs",
        "line": 230,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "public unsafe void Append(char* value, int length)",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Shared/HttpSys/NativeInterop/CookedUrl.cs",
        "line": 19,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "internal unsafe string? GetFullUrl()",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Shared/HttpSys/NativeInterop/CookedUrl.cs",
        "line": 28,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "internal unsafe string? GetHost()",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Shared/HttpSys/NativeInterop/CookedUrl.cs",
        "line": 37,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "internal unsafe string? GetAbsPath()",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Shared/HttpSys/NativeInterop/CookedUrl.cs",
        "line": 46,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "internal unsafe string? GetQueryString()",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Shared/HttpSys/NativeInterop/SecPkgContext_CipherInfo.cs",
        "line": 10,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "internal unsafe struct SecPkgContext_CipherInfo",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Shared/HttpSys/NativeInterop/HttpApiTypes.cs",
        "line": 11,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "internal static unsafe class HttpApiTypes",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Shared/HttpSys/NativeInterop/SocketAddress.cs",
        "line": 16,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "internal static unsafe SocketAddress? CopyOutAddress(SOCKADDR* pSockaddr)",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Shared/HttpSys/RequestProcessing/NativeRequestContext.cs",
        "line": 25,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "internal unsafe class NativeRequestContext : IDisposable",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Shared/HttpSys/RequestProcessing/NativeRequestContext.cs",
        "line": 826,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "private sealed unsafe class PointerMemoryManager<T> : MemoryManager<T> where T : struct",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Shared/HttpSys/RequestProcessing/HeaderEncoding.cs",
        "line": 11,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "internal static unsafe string GetString(byte* pBytes, int byteCount, bool useLatin1)",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Shared/ObjectMethodExecutor/AwaitableInfo.cs",
        "line": 85,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "MethodInfo? unsafeOnCompletedMethod = null;",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Shared/ObjectMethodExecutor/AwaitableInfo.cs",
        "line": 89,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "unsafeOnCompletedMethod = ICriticalNotifyCompletion_UnsafeOnCompleted;",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Shared/ObjectMethodExecutor/AwaitableInfo.cs",
        "line": 106,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "unsafeOnCompletedMethod,",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Shared/ObjectMethodExecutor/ObjectMethodExecutorAwaitable.cs",
        "line": 23,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "private readonly Action<object, Action> _unsafeOnCompletedMethod;",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Shared/ObjectMethodExecutor/ObjectMethodExecutorAwaitable.cs",
        "line": 49,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "Action<object, Action> unsafeOnCompletedMethod)",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Shared/ObjectMethodExecutor/ObjectMethodExecutorAwaitable.cs",
        "line": 56,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "_unsafeOnCompletedMethod = unsafeOnCompletedMethod;",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Shared/ObjectMethodExecutor/ObjectMethodExecutorAwaitable.cs",
        "line": 62,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "return new Awaiter(customAwaiter, _isCompletedMethod, _getResultMethod, _onCompletedMethod, _unsafeOnCompletedMethod);",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Shared/ObjectMethodExecutor/ObjectMethodExecutorAwaitable.cs",
        "line": 71,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "private readonly Action<object, Action> _unsafeOnCompletedMethod;",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Shared/ObjectMethodExecutor/ObjectMethodExecutorAwaitable.cs",
        "line": 78,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "Action<object, Action> unsafeOnCompletedMethod)",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Shared/ObjectMethodExecutor/ObjectMethodExecutorAwaitable.cs",
        "line": 84,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "_unsafeOnCompletedMethod = unsafeOnCompletedMethod;",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Shared/ObjectMethodExecutor/ObjectMethodExecutorAwaitable.cs",
        "line": 111,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "var underlyingMethodToUse = _unsafeOnCompletedMethod ?? _onCompletedMethod;",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Shared/ObjectMethodExecutor/ObjectMethodExecutor.cs",
        "line": 27,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "typeof(Action<object, Action>)  // unsafeOnCompletedMethod",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Shared/ObjectMethodExecutor/ObjectMethodExecutor.cs",
        "line": 343,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "Action<object, Action>? unsafeOnCompletedFunc = null;",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Shared/ObjectMethodExecutor/ObjectMethodExecutor.cs",
        "line": 346,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "// var unsafeOnCompletedFunc = (object awaiter, Action continuation) => {",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Shared/ObjectMethodExecutor/ObjectMethodExecutor.cs",
        "line": 349,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "var unsafeOnCompletedParam1 = Expression.Parameter(typeof(object), \"awaiter\");",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Shared/ObjectMethodExecutor/ObjectMethodExecutor.cs",
        "line": 350,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "var unsafeOnCompletedParam2 = Expression.Parameter(typeof(Action), \"continuation\");",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Shared/ObjectMethodExecutor/ObjectMethodExecutor.cs",
        "line": 351,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "unsafeOnCompletedFunc = Expression.Lambda<Action<object, Action>>(",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Shared/ObjectMethodExecutor/ObjectMethodExecutor.cs",
        "line": 353,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "Expression.Convert(unsafeOnCompletedParam1, awaitableInfo.AwaiterType),",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Shared/ObjectMethodExecutor/ObjectMethodExecutor.cs",
        "line": 355,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "unsafeOnCompletedParam2),",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Shared/ObjectMethodExecutor/ObjectMethodExecutor.cs",
        "line": 356,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "unsafeOnCompletedParam1,",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Shared/ObjectMethodExecutor/ObjectMethodExecutor.cs",
        "line": 357,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "unsafeOnCompletedParam2).Compile();",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Shared/ObjectMethodExecutor/ObjectMethodExecutor.cs",
        "line": 372,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "//     unsafeOnCompletedFunc);",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Shared/ObjectMethodExecutor/ObjectMethodExecutor.cs",
        "line": 380,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "Expression.Constant(unsafeOnCompletedFunc, typeof(Action<object, Action>)));",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/WebEncoders/src/Testing/JavaScriptTestEncoder.cs",
        "line": 78,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "public override unsafe int FindFirstCharacterToEncode(char* text, int textLength)",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/WebEncoders/src/Testing/JavaScriptTestEncoder.cs",
        "line": 84,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "public override unsafe bool TryEncodeUnicodeScalar(",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/WebEncoders/src/Testing/HtmlTestEncoder.cs",
        "line": 78,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "public override unsafe int FindFirstCharacterToEncode(char* text, int textLength)",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/WebEncoders/src/Testing/HtmlTestEncoder.cs",
        "line": 84,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "public override unsafe bool TryEncodeUnicodeScalar(",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/WebEncoders/src/Testing/UrlTestEncoder.cs",
        "line": 78,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "public override unsafe int FindFirstCharacterToEncode(char* text, int textLength)",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/WebEncoders/src/Testing/UrlTestEncoder.cs",
        "line": 84,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "public override unsafe bool TryEncodeUnicodeScalar(",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Components/Endpoints/src/Builder/OpaqueRedirection.cs",
        "line": 37,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "//    - For other request types, we have to let it fail as it would be unsafe to retry",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Components/test/E2ETest/ServerExecutionTests/WebSocketCompressionTests.cs",
        "line": 76,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "\"script-src 'self' 'unsafe-inline'\",",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Components/test/E2ETest/ServerExecutionTests/WebSocketCompressionTests.cs",
        "line": 85,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "\"script-src 'self' 'unsafe-inline'\"",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Components/test/testassets/Components.TestServer/RazorComponentEndpointsStartup.cs",
        "line": 141,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "ctx.Response.Headers.Add(\"Content-Security-Policy\", \"script-src 'self' 'unsafe-inline'\");",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Components/WebAssembly/WebAssembly/src/Rendering/WebAssemblyRenderer.cs",
        "line": 164,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "protected override unsafe Task UpdateDisplayAsync(in RenderBatch batch)",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Components/WebAssembly/WebAssembly/src/Rendering/WebAssemblyRenderer.cs",
        "line": 239,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "private static unsafe partial void RenderBatch(int id, void* batch);",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/DataProtection/Cryptography.Internal/test/UnsafeBufferUtilTests.cs",
        "line": 10,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "public unsafe class UnsafeBufferUtilTests",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/DataProtection/Cryptography.Internal/test/CryptoUtilTests.cs",
        "line": 9,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "public unsafe class CryptoUtilTests",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/DataProtection/Cryptography.Internal/test/Cng/BCryptUtilTests.cs",
        "line": 12,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "public unsafe class BCryptUtilTests",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/DataProtection/Cryptography.Internal/test/Cng/BCRYPT_AUTHENTICATED_CIPHER_MODE_INFO_Tests.cs",
        "line": 9,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "public unsafe class BCRYPT_AUTHENTICATED_CIPHER_MODE_INFO_Tests",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/DataProtection/Cryptography.Internal/test/Cng/CachedAlgorithmHandlesTests.cs",
        "line": 16,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "public unsafe class CachedAlgorithmHandlesTests",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/DataProtection/Cryptography.Internal/test/SafeHandles/SecureLocalAllocHandleTests.cs",
        "line": 9,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "public unsafe class SecureLocalAllocHandleTests",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/DataProtection/Cryptography.Internal/src/UnsafeNativeMethods.cs",
        "line": 18,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "internal static unsafe partial class UnsafeNativeMethods",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/DataProtection/Cryptography.Internal/src/CryptoUtil.cs",
        "line": 16,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "internal static unsafe class CryptoUtil",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/DataProtection/Cryptography.Internal/src/UnsafeBufferUtil.cs",
        "line": 12,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "internal static unsafe class UnsafeBufferUtil",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/DataProtection/Cryptography.Internal/src/DATA_BLOB.cs",
        "line": 10,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "internal unsafe struct DATA_BLOB",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/DataProtection/Cryptography.Internal/src/Cng/BCryptUtil.cs",
        "line": 11,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "internal static unsafe class BCryptUtil",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/DataProtection/Cryptography.Internal/src/Cng/BCRYPT_AUTHENTICATED_CIPHER_MODE_INFO.cs",
        "line": 10,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "internal unsafe struct BCRYPT_AUTHENTICATED_CIPHER_MODE_INFO",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/DataProtection/Cryptography.Internal/src/Cng/BCryptBufferDesc.cs",
        "line": 11,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "internal unsafe struct BCryptBufferDesc",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/DataProtection/Cryptography.Internal/src/SafeHandles/BCryptAlgorithmHandle.cs",
        "line": 16,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "internal sealed unsafe class BCryptAlgorithmHandle : BCryptHandle",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/DataProtection/Cryptography.Internal/src/SafeHandles/SecureLocalAllocHandle.cs",
        "line": 14,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "internal sealed unsafe class SecureLocalAllocHandle : LocalAllocHandle",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/DataProtection/Cryptography.Internal/src/SafeHandles/BCryptHashHandle.cs",
        "line": 8,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "internal sealed unsafe class BCryptHashHandle : BCryptHandle",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/DataProtection/Cryptography.Internal/src/SafeHandles/BCryptHandle.cs",
        "line": 8,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "internal abstract unsafe class BCryptHandle : SafeHandleZeroOrMinusOneIsInvalid",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/DataProtection/Cryptography.Internal/src/SafeHandles/SafeLibraryHandle.cs",
        "line": 16,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "internal sealed unsafe partial class SafeLibraryHandle : SafeHandleZeroOrMinusOneIsInvalid",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/DataProtection/Cryptography.Internal/src/SafeHandles/NCryptDescriptorHandle.cs",
        "line": 9,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "internal sealed unsafe class NCryptDescriptorHandle : SafeHandleZeroOrMinusOneIsInvalid",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/DataProtection/Cryptography.KeyDerivation/src/PBKDF2/Win8Pbkdf2Provider.cs",
        "line": 16,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "internal sealed unsafe class Win8Pbkdf2Provider : IPbkdf2Provider",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/DataProtection/Cryptography.KeyDerivation/src/PBKDF2/Win7Pbkdf2Provider.cs",
        "line": 14,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "internal sealed unsafe class Win7Pbkdf2Provider : IPbkdf2Provider",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/test/Microsoft.AspNetCore.DataProtection.Tests/SecretTests.cs",
        "line": 8,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "public unsafe class SecretTests",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/test/Microsoft.AspNetCore.DataProtection.Tests/SequentialGenRandom.cs",
        "line": 10,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "internal unsafe class SequentialGenRandom : IBCryptGenRandom, IManagedGenRandom",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/test/Microsoft.AspNetCore.DataProtection.Tests/SP800_108/SP800_108Tests.cs",
        "line": 11,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "public unsafe class SP800_108Tests",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/test/Microsoft.AspNetCore.DataProtection.Tests/Cng/CngAuthenticatedEncryptorBaseTests.cs",
        "line": 8,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "public unsafe class CngAuthenticatedEncryptorBaseTests",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/test/Microsoft.AspNetCore.DataProtection.Tests/Cng/CngAuthenticatedEncryptorBaseTests.cs",
        "line": 93,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "protected sealed override unsafe byte[] DecryptImpl(byte* pbCiphertext, uint cbCiphertext, byte* pbAdditionalAuthenticatedData, uint cbAdditionalAuthenticatedData)",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/test/Microsoft.AspNetCore.DataProtection.Tests/Cng/CngAuthenticatedEncryptorBaseTests.cs",
        "line": 100,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "protected sealed override unsafe byte[] EncryptImpl(byte* pbPlaintext, uint cbPlaintext, byte* pbAdditionalAuthenticatedData, uint cbAdditionalAuthenticatedData, uint cbPreBuffer, uint cbPostBuffer)",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/src/BitHelpers.cs",
        "line": 8,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "internal static unsafe class BitHelpers",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/src/MemoryProtection.cs",
        "line": 12,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "internal static unsafe class MemoryProtection",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/src/Secret.cs",
        "line": 16,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "public sealed unsafe class Secret : IDisposable, ISecret",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/src/Managed/AesGcmAuthenticatedEncryptor.cs",
        "line": 16,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "internal sealed unsafe class AesGcmAuthenticatedEncryptor : IOptimizedAuthenticatedEncryptor, IDisposable",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/src/Managed/ManagedAuthenticatedEncryptor.cs",
        "line": 20,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "internal sealed unsafe class ManagedAuthenticatedEncryptor : IAuthenticatedEncryptor, IDisposable",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/src/Managed/ManagedGenRandomImpl.cs",
        "line": 9,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "internal sealed unsafe class ManagedGenRandomImpl : IManagedGenRandom",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/src/XmlEncryption/XmlEncryptionExtensions.cs",
        "line": 17,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "internal static unsafe class XmlEncryptionExtensions",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/src/KeyManagement/KeyRingBasedDataProtector.cs",
        "line": 24,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "internal sealed unsafe class KeyRingBasedDataProtector : IDataProtector, IPersistedDataProtector",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/src/KeyManagement/KeyRingBasedDataProtectionProvider.cs",
        "line": 11,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "internal sealed unsafe class KeyRingBasedDataProtectionProvider : IDataProtectionProvider",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/src/AuthenticatedEncryption/ConfigurationModel/SecretExtensions.cs",
        "line": 9,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "internal static unsafe class SecretExtensions",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/src/SP800_108/Win7SP800_108_CTR_HMACSHA512Provider.cs",
        "line": 11,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "internal sealed unsafe class Win7SP800_108_CTR_HMACSHA512Provider : ISP800_108_CTR_HMACSHA512Provider",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/src/SP800_108/ISP800_108_CTR_HMACSHA512Provider.cs",
        "line": 8,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "internal unsafe interface ISP800_108_CTR_HMACSHA512Provider : IDisposable",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/src/SP800_108/SP800_108_CTR_HMACSHA512Util.cs",
        "line": 16,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "internal static unsafe class SP800_108_CTR_HMACSHA512Util",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/src/SP800_108/Win8SP800_108_CTR_HMACSHA512Provider.cs",
        "line": 11,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "internal sealed unsafe class Win8SP800_108_CTR_HMACSHA512Provider : ISP800_108_CTR_HMACSHA512Provider",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/src/SP800_108/SP800_108_CTR_HMACSHA512Extensions.cs",
        "line": 8,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "internal static unsafe class SP800_108_CTR_HMACSHA512Extensions",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/src/Cng/CngGcmAuthenticatedEncryptor.cs",
        "line": 23,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "internal sealed unsafe class CngGcmAuthenticatedEncryptor : CngAuthenticatedEncryptorBase",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/src/Cng/DpapiSecretSerializerHelper.cs",
        "line": 15,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "internal static unsafe class DpapiSecretSerializerHelper",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/src/Cng/CbcAuthenticatedEncryptor.cs",
        "line": 17,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "internal sealed unsafe class CbcAuthenticatedEncryptor : CngAuthenticatedEncryptorBase",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/src/Cng/IBCryptGenRandom.cs",
        "line": 6,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "internal unsafe interface IBCryptGenRandom",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/src/Cng/BCryptGenRandomImpl.cs",
        "line": 8,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "internal sealed unsafe class BCryptGenRandomImpl : IBCryptGenRandom",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/src/Cng/Internal/CngAuthenticatedEncryptorBase.cs",
        "line": 12,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "internal abstract unsafe class CngAuthenticatedEncryptorBase : IOptimizedAuthenticatedEncryptor, IDisposable",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Http/Routing/perf/Microbenchmarks/Matching/FastPathTokenizerEmptyBenchmark.cs",
        "line": 15,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "public unsafe void Baseline()",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Http/Routing/perf/Microbenchmarks/Matching/FastPathTokenizerLargeBenchmark.cs",
        "line": 19,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "public unsafe void Baseline()",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Http/Routing/perf/Microbenchmarks/Matching/FastPathTokenizerSmallBenchmark.cs",
        "line": 15,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "public unsafe void Baseline()",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Http/Routing/perf/Microbenchmarks/Matching/FastPathTokenizerBenchmarkBase.cs",
        "line": 8,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "internal unsafe void NaiveBaseline(string path, PathSegment* segments, int maxCount)",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Http/Routing/perf/Microbenchmarks/Matching/FastPathTokenizerBenchmarkBase.cs",
        "line": 27,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "internal unsafe void MinimalBaseline(string path, PathSegment* segments, int maxCount)",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Http/Routing/perf/Microbenchmarks/Matching/FastPathTokenizerPlaintextBenchmark.cs",
        "line": 15,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "public unsafe void Baseline()",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/test/FunctionalTests/DelegateTests.cs",
        "line": 312,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "unsafe void AssertPermissions(SafeHandle handle)",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/test/FunctionalTests/HttpsTests.cs",
        "line": 215,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "unsafe",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/test/Tests/RequestHeaderTests.cs",
        "line": 20,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "public unsafe void RequestHeaders_PooledMemory_ReturnsKnownHeadersKeys()",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/test/Tests/RequestHeaderTests.cs",
        "line": 40,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "public unsafe void RequestHeaders_PinnedMemory_ReturnsKnownHeadersKeys()",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/test/Tests/RequestHeaderTests.cs",
        "line": 61,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "public unsafe void RequestHeaders_PooledMemory_ReturnsUnknownHeadersKeys()",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/test/Tests/RequestHeaderTests.cs",
        "line": 81,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "public unsafe void RequestHeaders_PinnedMemory_ReturnsUnknownHeadersKeys()",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/test/Tests/RequestHeaderTests.cs",
        "line": 102,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "public unsafe void RequestHeaders_PooledMemory_DoesNotReturnInvalidKnownHeadersKeys()",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/test/Tests/RequestHeaderTests.cs",
        "line": 121,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "public unsafe void RequestHeaders_PooledMemory_DoesNotReturnInvalidUnknownHeadersKeys()",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/test/Tests/RequestHeaderTests.cs",
        "line": 140,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "public unsafe void RequestHeaders_PooledMemory_ReturnsKnownAndUnKnownHeadersKeys()",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/test/Tests/RequestHeaderTests.cs",
        "line": 163,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "public unsafe void RequestHeaders_PinnedMemory_ReturnsKnownAndUnKnownHeadersKeys()",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/test/Tests/RequestHeaderTests.cs",
        "line": 187,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "public unsafe void RequestHeaders_RemoveUnknownHeader_DecreasesCount()",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/test/Tests/RequestHeaderTests.cs",
        "line": 209,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "public unsafe void RequestHeaders_AddUnknownHeader_IncreasesCount()",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/test/Tests/RequestHeaderTests.cs",
        "line": 231,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "public unsafe void RequestHeaders_RemoveUnknownHeader_RemovesKey()",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/test/Tests/RequestHeaderTests.cs",
        "line": 252,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "public unsafe void RequestHeaders_AddUnknownHeader_AddsKey()",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/test/Tests/RequestHeaderTests.cs",
        "line": 272,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "public unsafe void RequestHeaders_RemoveKnownHeader_DecreasesCount()",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/test/Tests/RequestHeaderTests.cs",
        "line": 294,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "public unsafe void RequestHeaders_AddKnownHeader_IncreasesCount()",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/test/Tests/RequestHeaderTests.cs",
        "line": 316,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "public unsafe void RequestHeaders_RemoveKnownHeader_RemovesKey()",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/test/Tests/RequestHeaderTests.cs",
        "line": 337,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "public unsafe void RequestHeaders_AddKnownHeader_AddsKey()",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/test/Tests/RequestHeaderTests.cs",
        "line": 356,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "private static unsafe Span<byte> SetHostAndContentTypeHeaders(Span<byte> nativeMemory, ref HTTP_REQUEST_V1 requestStructure)",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/test/Tests/RequestHeaderTests.cs",
        "line": 380,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "private static unsafe Span<byte> SetInvalidHostHeader(Span<byte> nativeMemory, ref HTTP_REQUEST_V1 requestStructure)",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/test/Tests/RequestHeaderTests.cs",
        "line": 400,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "private static unsafe Span<byte> SetUnknownHeaders(Span<byte> nativeMemory, ref HTTP_REQUEST_V1 requestStructure, IReadOnlyCollection<(string Key, string Value)> headerNames)",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/test/Tests/RequestHeaderTests.cs",
        "line": 438,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "private static unsafe Span<byte> SetInvalidUnknownHeaders(Span<byte> nativeMemory, ref HTTP_REQUEST_V1 requestStructure, IReadOnlyCollection<string> headerNames)",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/perf/Microbenchmarks/RequestHeaderBenchmarks.cs",
        "line": 20,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "public unsafe void Setup()",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/perf/Microbenchmarks/RequestHeaderBenchmarks.cs",
        "line": 54,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "private unsafe RequestHeaders CreateRequestHeader(int unknowHeaderCount)",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/perf/Microbenchmarks/RequestHeaderBenchmarks.cs",
        "line": 69,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "private unsafe Span<byte> SetHostHeader(Span<byte> nativeMemory, ref HTTP_REQUEST_V1 requestStructure)",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/perf/Microbenchmarks/RequestHeaderBenchmarks.cs",
        "line": 85,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "private unsafe Span<byte> SetUnknownHeaders(Span<byte> nativeMemory, ref HTTP_REQUEST_V1 requestStructure, IReadOnlyCollection<(string Key, string Value)> headerNames)",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/src/AsyncAcceptContext.cs",
        "line": 10,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "internal sealed unsafe partial class AsyncAcceptContext : IValueTaskSource<RequestContext>, IDisposable",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/src/AsyncAcceptContext.cs",
        "line": 121,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "private static unsafe void IOWaitCallback(uint errorCode, uint numBytes, NativeOverlapped* nativeOverlapped)",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/src/AuthenticationManager.cs",
        "line": 92,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "private unsafe void SetUrlGroupSecurity()",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/src/TimeoutManager.cs",
        "line": 203,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "private unsafe void SetUrlGroupTimeouts(int[] timeouts, uint minSendBytesPerSecond)",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/src/HttpSysListener.cs",
        "line": 297,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "internal unsafe void SendError(ulong requestId, int httpStatusCode, IList<string>? authChallenges = null)",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/src/NativeInterop/HttpApi.cs",
        "line": 20,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "internal static unsafe partial uint HttpReceiveClientCertificate(SafeHandle requestQueueHandle, ulong connectionId, uint flags, Windows.Win32.Networking.HttpServer.HTTP_SSL_CLIENT_CERT_INFO* pSslClientCertInfo, uint sslClientCertInfoSize, uint* pBytesReceived, SafeNativeOverlapped pOverlapped);",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/src/NativeInterop/HttpApi.cs",
        "line": 23,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "internal static unsafe partial uint HttpReceiveHttpRequest(SafeHandle requestQueueHandle, ulong requestId, uint flags, Windows.Win32.Networking.HttpServer.HTTP_REQUEST_V1* pRequestBuffer, uint requestBufferLength, uint* pBytesReturned, NativeOverlapped* pOverlapped);",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/src/NativeInterop/HttpApi.cs",
        "line": 26,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "internal static unsafe partial uint HttpSendHttpResponse(SafeHandle requestQueueHandle, ulong requestId, uint flags, Windows.Win32.Networking.HttpServer.HTTP_RESPONSE_V2* pHttpResponse, Windows.Win32.Networking.HttpServer.HTTP_CACHE_POLICY* pCachePolicy, uint* pBytesSent, IntPtr pReserved1, uint Reserved2, SafeNativeOverlapped pOverlapped, IntPtr pLogData);",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/src/NativeInterop/HttpApi.cs",
        "line": 29,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "internal static unsafe partial uint HttpWaitForDisconnectEx(SafeHandle requestQueueHandle, ulong connectionId, uint reserved, NativeOverlapped* overlapped);",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/src/NativeInterop/HttpApi.cs",
        "line": 32,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "internal static unsafe partial uint HttpSendResponseEntityBody(SafeHandle requestQueueHandle, ulong requestId, uint flags, ushort entityChunkCount, Windows.Win32.Networking.HttpServer.HTTP_DATA_CHUNK* pEntityChunks, uint* pBytesSent, IntPtr pReserved1, uint Reserved2, SafeNativeOverlapped pOverlapped, IntPtr pLogData);",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/src/NativeInterop/HttpApi.cs",
        "line": 37,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "internal unsafe delegate uint HttpGetRequestPropertyInvoker(SafeHandle requestQueueHandle, ulong requestId, HTTP_REQUEST_PROPERTY propertyId,",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/src/NativeInterop/HttpApi.cs",
        "line": 40,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "internal unsafe delegate uint HttpSetRequestPropertyInvoker(SafeHandle requestQueueHandle, ulong requestId, HTTP_REQUEST_PROPERTY propertyId,",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/src/NativeInterop/HttpApi.cs",
        "line": 55,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "internal static unsafe uint HttpGetRequestProperty(SafeHandle requestQueueHandle, ulong requestId, HTTP_REQUEST_PROPERTY propertyId,",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/src/NativeInterop/HttpApi.cs",
        "line": 61,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "internal static unsafe uint HttpSetRequestProperty(SafeHandle requestQueueHandle, ulong requestId, HTTP_REQUEST_PROPERTY propertyId,",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/src/NativeInterop/HttpApi.cs",
        "line": 76,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "static unsafe HttpApi()",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/src/NativeInterop/ServerSession.cs",
        "line": 11,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "internal unsafe ServerSession()",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/src/NativeInterop/DisconnectListener.cs",
        "line": 54,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "private unsafe CancellationToken CreateDisconnectToken(ulong connectionId)",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/src/NativeInterop/RequestQueue.cs",
        "line": 61,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "unsafe",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/src/NativeInterop/RequestQueue.cs",
        "line": 143,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "internal unsafe void SetLengthLimit(long length)",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/src/NativeInterop/RequestQueue.cs",
        "line": 159,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "internal unsafe void SetRejectionVerbosity(Http503VerbosityLevel verbosity)",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/src/NativeInterop/UrlGroup.cs",
        "line": 29,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "internal unsafe UrlGroup(ServerSession serverSession, RequestQueue requestQueue, ILogger logger)",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/src/NativeInterop/UrlGroup.cs",
        "line": 49,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "internal unsafe void SetMaxConnections(long maxConnections)",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/src/NativeInterop/UrlGroup.cs",
        "line": 66,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "internal unsafe void SetDelegationProperty(RequestQueue destination)",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/src/NativeInterop/UrlGroup.cs",
        "line": 77,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "internal unsafe void UnSetDelegationProperty(RequestQueue destination, bool throwOnError = true)",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/src/NativeInterop/UrlGroup.cs",
        "line": 87,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "internal unsafe void SetProperty(HTTP_SERVER_PROPERTY property, IntPtr info, uint infosize, bool throwOnError = true)",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/src/NativeInterop/UrlGroup.cs",
        "line": 105,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "internal unsafe void AttachToQueue()",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/src/NativeInterop/UrlGroup.cs",
        "line": 123,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "internal unsafe void DetachFromQueue()",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/src/NativeInterop/UrlGroup.cs",
        "line": 152,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "unsafe",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/src/NativeInterop/SafeNativeOverlapped.cs",
        "line": 22,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "internal unsafe SafeNativeOverlapped(ThreadPoolBoundHandle boundHandle, NativeOverlapped* handle)",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/src/NativeInterop/SafeNativeOverlapped.cs",
        "line": 43,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "unsafe",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/src/NativeInterop/SafeLibraryHandle.cs",
        "line": 13,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "internal sealed unsafe partial class SafeLibraryHandle : SafeHandleZeroOrMinusOneIsInvalid",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/src/RequestProcessing/Request.cs",
        "line": 460,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "private unsafe void GetTlsTokenBindingInfo()",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/src/RequestProcessing/Response.cs",
        "line": 277,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "internal unsafe uint SendHeaders(ref UnmanagedBufferAllocator allocator,",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/src/RequestProcessing/Response.cs",
        "line": 484,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "private unsafe void SerializeHeaders(ref UnmanagedBufferAllocator allocator, bool isOpaqueUpgrade)",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/src/RequestProcessing/Response.cs",
        "line": 605,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "internal unsafe void SerializeTrailers(ref UnmanagedBufferAllocator allocator, out HTTP_DATA_CHUNK dataChunk)",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/src/RequestProcessing/ClientCertLoader.cs",
        "line": 16,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "internal sealed unsafe partial class ClientCertLoader : IAsyncResult, IDisposable",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/src/RequestProcessing/ClientCertLoader.cs",
        "line": 218,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "private unsafe void IOCompleted(uint errorCode, uint numBytes)",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/src/RequestProcessing/ClientCertLoader.cs",
        "line": 224,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "private static unsafe void IOCompleted(ClientCertLoader asyncResult, uint errorCode, uint numBytes)",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/src/RequestProcessing/ClientCertLoader.cs",
        "line": 302,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "private static unsafe void WaitCallback(uint errorCode, uint numBytes, NativeOverlapped* nativeOverlapped)",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/src/RequestProcessing/RequestContext.cs",
        "line": 73,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "public unsafe Guid TraceIdentifier",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/src/RequestProcessing/RequestContext.cs",
        "line": 230,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "internal unsafe TlsCipherSuite? GetTlsCipherSuite()",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/src/RequestProcessing/RequestContext.cs",
        "line": 268,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "internal unsafe bool TryGetTlsClientHelloMessageBytes(",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/src/RequestProcessing/RequestContext.cs",
        "line": 316,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "internal unsafe HTTP_REQUEST_PROPERTY_SNI GetClientSni()",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/src/RequestProcessing/RequestContext.cs",
        "line": 347,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "internal unsafe void SetResetCode(int errorCode)",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/src/RequestProcessing/RequestContext.cs",
        "line": 382,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "internal unsafe void Delegate(DelegationRule destination)",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/src/RequestProcessing/ResponseStreamAsyncResult.cs",
        "line": 11,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "internal sealed unsafe partial class ResponseStreamAsyncResult : IAsyncResult, IDisposable",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/src/RequestProcessing/ResponseStreamAsyncResult.cs",
        "line": 279,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "private static unsafe void Callback(uint errorCode, uint _, NativeOverlapped* nativeOverlapped)",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/src/RequestProcessing/RequestStreamAsyncResult.cs",
        "line": 9,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "internal sealed unsafe class RequestStreamAsyncResult : IAsyncResult, IDisposable",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/src/RequestProcessing/RequestStreamAsyncResult.cs",
        "line": 93,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "private static unsafe void Callback(uint errorCode, uint numBytes, NativeOverlapped* nativeOverlapped)",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/src/RequestProcessing/ResponseBody.cs",
        "line": 112,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "private unsafe void FlushInternal(bool endOfRequest, ArraySegment<byte> data = new ArraySegment<byte>())",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/src/RequestProcessing/ResponseBody.cs",
        "line": 190,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "private unsafe void BuildDataChunks(scoped ref UnmanagedBufferAllocator allocator, bool endOfRequest, ArraySegment<byte> data, out Span<HTTP_DATA_CHUNK> dataChunks, out Span<GCHandle> pins)",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/src/RequestProcessing/ResponseBody.cs",
        "line": 275,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "private static unsafe void SetDataChunk(",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/src/RequestProcessing/ResponseBody.cs",
        "line": 285,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "private static unsafe void SetDataChunkWithPinnedData(",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/src/RequestProcessing/ResponseBody.cs",
        "line": 320,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "private unsafe Task FlushInternalAsync(ArraySegment<byte> data, CancellationToken cancellationToken)",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/src/RequestProcessing/ResponseBody.cs",
        "line": 609,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "// We can't mix await and unsafe so separate the unsafe code into another method.",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/src/RequestProcessing/ResponseBody.cs",
        "line": 613,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "internal unsafe Task SendFileAsyncCore(string fileName, long offset, long? count, CancellationToken cancellationToken)",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/src/RequestProcessing/ResponseBody.cs",
        "line": 743,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "protected override unsafe void Dispose(bool disposing)",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/src/RequestProcessing/ResponseBody.cs",
        "line": 770,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "internal unsafe void CancelLastWrite()",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/src/RequestProcessing/RequestStream.cs",
        "line": 99,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "public override unsafe int Read([In, Out] byte[] buffer, int offset, int size)",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/src/RequestProcessing/RequestStream.cs",
        "line": 183,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "public override unsafe IAsyncResult BeginRead(byte[] buffer, int offset, int size, AsyncCallback? callback, object? state)",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/src/RequestProcessing/RequestStream.cs",
        "line": 189,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "public override unsafe Task<int> ReadAsync(byte[] buffer, int offset, int size, CancellationToken cancellationToken)",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/Kestrel/Core/src/Internal/Infrastructure/KestrelEventSource.cs",
        "line": 383,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "private unsafe void WriteEvent(int eventId, string? arg1, string? arg2, string? arg3, string? arg4, string? arg5)",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/Kestrel/Transport.Sockets/src/SocketTransportOptions.cs",
        "line": 87,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "/// This will run application code on the IO thread which is why this is unsafe.",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/Kestrel/Transport.Sockets/src/SocketConnectionFactoryOptions.cs",
        "line": 63,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "/// This will run application code on the IO thread which is why this is unsafe.",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/Kestrel/Transport.Sockets/src/Internal/SocketAwaitableEventArgs.cs",
        "line": 28,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": ": base(unsafeSuppressExecutionContextFlow: true)",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/Kestrel/perf/Microbenchmarks/BinaryPrimitivesBenchmark.cs",
        "line": 34,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "public unsafe uint GetUInt32AsBinary()",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/IIS/IIS/src/NativeMethods.cs",
        "line": 52,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "private static unsafe partial int register_callbacks(NativeSafeHandle pInProcessApplication,",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/IIS/IIS/src/NativeMethods.cs",
        "line": 62,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "private static unsafe partial int http_write_response_bytes(NativeSafeHandle pInProcessHandler, HTTP_DATA_CHUNK* pDataChunks, int nChunks, [MarshalAs(UnmanagedType.Bool)] out bool fCompletionExpected);",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/IIS/IIS/src/NativeMethods.cs",
        "line": 68,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "private static unsafe partial HTTP_REQUEST_V2* http_get_raw_request(NativeSafeHandle pInProcessHandler);",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/IIS/IIS/src/NativeMethods.cs",
        "line": 83,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "private static unsafe partial int http_read_request_bytes(NativeSafeHandle pInProcessHandler, byte* pvBuffer, int cbBuffer, out int dwBytesReceived, [MarshalAs(UnmanagedType.Bool)] out bool fCompletionExpected);",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/IIS/IIS/src/NativeMethods.cs",
        "line": 96,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "private static unsafe partial int http_query_request_property(",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/IIS/IIS/src/NativeMethods.cs",
        "line": 119,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "private static unsafe partial int http_websockets_read_bytes(",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/IIS/IIS/src/NativeMethods.cs",
        "line": 129,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "private static unsafe partial int http_websockets_write_bytes(",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/IIS/IIS/src/NativeMethods.cs",
        "line": 150,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "private static unsafe partial int http_response_set_unknown_header(NativeSafeHandle pInProcessHandler, byte* pszHeaderName, byte* pszHeaderValue, ushort usHeaderValueLength, [MarshalAs(UnmanagedType.Bool)] bool fReplace);",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/IIS/IIS/src/NativeMethods.cs",
        "line": 153,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "private static unsafe partial int http_has_response4(NativeSafeHandle pInProcessHandler, [MarshalAs(UnmanagedType.Bool)] out bool isResponse4);",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/IIS/IIS/src/NativeMethods.cs",
        "line": 156,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "private static unsafe partial int http_response_set_trailer(NativeSafeHandle pInProcessHandler, byte* pszHeaderName, byte* pszHeaderValue, ushort usHeaderValueLength, [MarshalAs(UnmanagedType.Bool)] bool replace);",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/IIS/IIS/src/NativeMethods.cs",
        "line": 159,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "private static unsafe partial int http_reset_stream(NativeSafeHandle pInProcessHandler, ulong errorCode);",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/IIS/IIS/src/NativeMethods.cs",
        "line": 162,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "private static unsafe partial int http_response_set_known_header(NativeSafeHandle pInProcessHandler, int headerId, byte* pHeaderValue, ushort length, [MarshalAs(UnmanagedType.Bool)] bool fReplace);",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/IIS/IIS/src/NativeMethods.cs",
        "line": 168,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "private static unsafe partial int http_set_startup_error_page_content(byte* content, int contentLength);",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/IIS/IIS/src/NativeMethods.cs",
        "line": 180,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "public static unsafe void HttpRegisterCallbacks(NativeSafeHandle pInProcessApplication,",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/IIS/IIS/src/NativeMethods.cs",
        "line": 192,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "internal static unsafe int HttpWriteResponseBytes(NativeSafeHandle pInProcessHandler, HTTP_DATA_CHUNK* pDataChunks, int nChunks, out bool fCompletionExpected)",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/IIS/IIS/src/NativeMethods.cs",
        "line": 202,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "internal static unsafe HTTP_REQUEST_V2* HttpGetRawRequest(NativeSafeHandle pInProcessHandler)",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/IIS/IIS/src/NativeMethods.cs",
        "line": 227,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "public static unsafe int HttpReadRequestBytes(NativeSafeHandle pInProcessHandler, byte* pvBuffer, int cbBuffer, out int dwBytesReceived, out bool fCompletionExpected)",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/IIS/IIS/src/NativeMethods.cs",
        "line": 248,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "public static unsafe int HttpQueryRequestProperty(ulong requestId, HTTP_REQUEST_PROPERTY propertyId, void* qualifier, uint qualifierSize, void* output, uint outputSize, uint* bytesReturned, IntPtr overlapped)",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/IIS/IIS/src/NativeMethods.cs",
        "line": 263,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "public static unsafe int HttpWebsocketsReadBytes(",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/IIS/IIS/src/NativeMethods.cs",
        "line": 274,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "internal static unsafe int HttpWebsocketsWriteBytes(",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/IIS/IIS/src/NativeMethods.cs",
        "line": 309,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "public static unsafe void HttpResponseSetUnknownHeader(NativeSafeHandle pInProcessHandler, byte* pszHeaderName, byte* pszHeaderValue, ushort usHeaderValueLength, bool fReplace)",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/IIS/IIS/src/NativeMethods.cs",
        "line": 314,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "public static unsafe void HttpResponseSetKnownHeader(NativeSafeHandle pInProcessHandler, int headerId, byte* pHeaderValue, ushort length, bool fReplace)",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/IIS/IIS/src/NativeMethods.cs",
        "line": 329,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "internal static unsafe void HttpSetStartupErrorPageContent(byte[] content)",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/IIS/IIS/src/NativeMethods.cs",
        "line": 337,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "internal static unsafe void HttpResponseSetTrailer(NativeSafeHandle pInProcessHandler, byte* pHeaderName, byte* pHeaderValue, ushort length, bool replace)",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/IIS/IIS/src/NativeMethods.cs",
        "line": 342,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "internal static unsafe void HttpResetStream(NativeSafeHandle pInProcessHandler, ulong errorCode)",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/IIS/IIS/src/NativeMethods.cs",
        "line": 347,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "internal static unsafe bool HttpHasResponse4(NativeSafeHandle pInProcessHandler)",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/IIS/IIS/src/Core/IISHttpServer.cs",
        "line": 96,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "public unsafe Task StartAsync<TContext>(IHttpApplication<TContext> application, CancellationToken cancellationToken) where TContext : notnull",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/IIS/IIS/src/Core/IISHttpContext.FeatureCollection.cs",
        "line": 383,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "unsafe X509Certificate2? ITlsConnectionFeature.ClientCertificate",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/IIS/IIS/src/Core/IISHttpContext.FeatureCollection.cs",
        "line": 500,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "internal unsafe void SetResetCode(int errorCode)",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/IIS/IIS/src/Core/IISHttpContext.cs",
        "line": 75,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "internal unsafe IISHttpContext(",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/IIS/IIS/src/Core/IISHttpContext.cs",
        "line": 420,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "private unsafe TlsCipherSuite? GetTlsCipherSuite()",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/IIS/IIS/src/Core/IISHttpContext.cs",
        "line": 442,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "private unsafe HTTP_REQUEST_PROPERTY_SNI GetClientSni()",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/IIS/IIS/src/Core/IISHttpContext.cs",
        "line": 600,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "public unsafe void SetResponseHeaders()",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/IIS/IIS/src/Core/IISHttpContext.cs",
        "line": 659,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "public unsafe void SetResponseTrailers()",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/IIS/IIS/src/Core/IISNativeApplication.cs",
        "line": 47,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "public unsafe void RegisterCallbacks(",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/IIS/IIS/src/Core/IISHttpContext.IHttpRequestIdentifierFeature.cs",
        "line": 26,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "private unsafe void InitializeHttpRequestIdentifierFeature()",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/IIS/IIS/src/Core/IO/AsyncIOEngine.Read.cs",
        "line": 32,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "protected override unsafe bool InvokeOperation(out int hr, out int bytes)",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/IIS/IIS/src/Core/IO/AsyncWriteOperationBase.cs",
        "line": 24,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "protected override unsafe bool InvokeOperation(out int hr, out int bytes)",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/IIS/IIS/src/Core/IO/AsyncWriteOperationBase.cs",
        "line": 97,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "private unsafe int WriteSequence(NativeSafeHandle requestHandler, int nChunks, ReadOnlySequence<byte> buffer, HTTP_DATA_CHUNK* pDataChunks, out bool fCompletionExpected)",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/IIS/IIS/src/Core/IO/AsyncWriteOperationBase.cs",
        "line": 122,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "protected abstract unsafe int WriteChunks(NativeSafeHandle requestHandler, int chunkCount, HTTP_DATA_CHUNK* dataChunks, out bool completionExpected);",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/IIS/IIS/src/Core/IO/WebSocketsAsyncIOEngine.Read.cs",
        "line": 40,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "protected override unsafe bool InvokeOperation(out int hr, out int bytes)",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/IIS/IIS/src/Core/IO/WebSocketsAsyncIOEngine.Write.cs",
        "line": 35,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "protected override unsafe int WriteChunks(NativeSafeHandle requestHandler, int chunkCount, HTTP_DATA_CHUNK* dataChunks, out bool completionExpected)",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/IIS/IIS/src/Core/IO/AsyncIOEngine.Write.cs",
        "line": 19,
        "type": "unsafe_code",
        "pattern": "unsafe",
        "code": "protected override unsafe int WriteChunks(NativeSafeHandle requestHandler, int chunkCount, HTTP_DATA_CHUNK* dataChunks,",
        "severity": "CRITICAL",
        "description": "Unsafe code block detected",
        "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
      }
    ],
    "csrf": [
      {
        "file": "/tmp/aspnetcore_analysis/src/ProjectTemplates/Web.ItemTemplates/content/ApiController/ValueController.cs",
        "line": 30,
        "type": "csrf",
        "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
        "code": "[HttpPost]",
        "severity": "MEDIUM",
        "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
        "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/HtmlGenerationWebSite/Controllers/HtmlGeneration_HomeController.cs",
        "line": 241,
        "type": "csrf",
        "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
        "code": "[HttpPost]",
        "severity": "MEDIUM",
        "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
        "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/ControllersFromServicesClassLibrary/EmployeeRecords.cs",
        "line": 16,
        "type": "csrf",
        "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
        "code": "[HttpPost]",
        "severity": "MEDIUM",
        "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
        "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/RoutingWebSite/Areas/Admin/FallbackController.cs",
        "line": 16,
        "type": "csrf",
        "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
        "code": "[HttpPost]",
        "severity": "MEDIUM",
        "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
        "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/RoutingWebSite/Areas/Admin/DynamicController.cs",
        "line": 16,
        "type": "csrf",
        "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
        "code": "[HttpPost]",
        "severity": "MEDIUM",
        "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
        "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/RoutingWebSite/Areas/Travel/FlightController.cs",
        "line": 24,
        "type": "csrf",
        "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
        "code": "[HttpPost]",
        "severity": "MEDIUM",
        "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
        "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/RoutingWebSite/Controllers/OrderController.cs",
        "line": 24,
        "type": "csrf",
        "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
        "code": "[HttpPost]",
        "severity": "MEDIUM",
        "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
        "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/RoutingWebSite/Controllers/EndpointNameController.cs",
        "line": 20,
        "type": "csrf",
        "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
        "code": "[HttpPost]",
        "severity": "MEDIUM",
        "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
        "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/RoutingWebSite/Controllers/ConsumesAttributeController.cs",
        "line": 11,
        "type": "csrf",
        "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
        "code": "[HttpPost]",
        "severity": "MEDIUM",
        "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
        "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/RoutingWebSite/Controllers/BanksController.cs",
        "line": 45,
        "type": "csrf",
        "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
        "code": "[HttpPost]",
        "severity": "MEDIUM",
        "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
        "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/RazorBuildWebSite/Controllers/UpdateableViewsController.cs",
        "line": 12,
        "type": "csrf",
        "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
        "code": "[HttpPost]",
        "severity": "MEDIUM",
        "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
        "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/RazorBuildWebSite/Controllers/UpdateableViewsController.cs",
        "line": 19,
        "type": "csrf",
        "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
        "code": "[HttpPost]",
        "severity": "MEDIUM",
        "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
        "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/VersioningWebSite/Controllers/CustomersController.cs",
        "line": 40,
        "type": "csrf",
        "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
        "code": "[HttpPost]",
        "severity": "MEDIUM",
        "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
        "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/SecurityWebSite/Controllers/AntiforgeryController.cs",
        "line": 11,
        "type": "csrf",
        "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
        "code": "[HttpPost]",
        "severity": "MEDIUM",
        "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
        "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/SecurityWebSite/Controllers/HomeController.cs",
        "line": 18,
        "type": "csrf",
        "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
        "code": "[HttpPost]",
        "severity": "MEDIUM",
        "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
        "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/SecurityWebSite/Controllers/LoginController.cs",
        "line": 15,
        "type": "csrf",
        "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
        "code": "[HttpPost]",
        "severity": "MEDIUM",
        "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
        "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/SecurityWebSite/Controllers/LoginController.cs",
        "line": 23,
        "type": "csrf",
        "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
        "code": "[HttpPost]",
        "severity": "MEDIUM",
        "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
        "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/SecurityWebSite/Controllers/LoginController.cs",
        "line": 31,
        "type": "csrf",
        "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
        "code": "[HttpPost]",
        "severity": "MEDIUM",
        "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
        "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/TagHelpersWebSite/Controllers/EmployeeController.cs",
        "line": 24,
        "type": "csrf",
        "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
        "code": "[HttpPost]",
        "severity": "MEDIUM",
        "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
        "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/CorsWebSite/Controllers/CustomerController.cs",
        "line": 17,
        "type": "csrf",
        "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
        "code": "[HttpPost]",
        "severity": "MEDIUM",
        "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
        "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/ApiExplorerWebSite/Controllers/ApiExplorerResponseTypeWithApiConventionController.cs",
        "line": 22,
        "type": "csrf",
        "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
        "code": "[HttpPost]",
        "severity": "MEDIUM",
        "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
        "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/ApiExplorerWebSite/Controllers/ApiExplorerResponseTypeWithApiConventionController.cs",
        "line": 28,
        "type": "csrf",
        "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
        "code": "[HttpPost]",
        "severity": "MEDIUM",
        "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
        "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/ApiExplorerWebSite/Controllers/ApiExplorerResponseTypeWithApiConventionController.cs",
        "line": 32,
        "type": "csrf",
        "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
        "code": "[HttpPost]",
        "severity": "MEDIUM",
        "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
        "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/ApiExplorerWebSite/Controllers/ApiExplorerResponseTypeWithApiConventionController.cs",
        "line": 41,
        "type": "csrf",
        "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
        "code": "[HttpPost]",
        "severity": "MEDIUM",
        "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
        "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/BasicWebSite/Areas/Area1/Controllers/RemoteAttribute_HomeController.cs",
        "line": 21,
        "type": "csrf",
        "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
        "code": "[HttpPost]",
        "severity": "MEDIUM",
        "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
        "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/BasicWebSite/Controllers/RemoteAttribute_HomeController.cs",
        "line": 20,
        "type": "csrf",
        "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
        "code": "[HttpPost]",
        "severity": "MEDIUM",
        "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
        "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/BasicWebSite/Controllers/RequestSizeLimitController.cs",
        "line": 24,
        "type": "csrf",
        "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
        "code": "[HttpPost]",
        "severity": "MEDIUM",
        "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
        "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/BasicWebSite/Controllers/RequestFormLimitsController.cs",
        "line": 24,
        "type": "csrf",
        "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
        "code": "[HttpPost]",
        "severity": "MEDIUM",
        "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
        "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/BasicWebSite/Controllers/RequestFormLimitsController.cs",
        "line": 35,
        "type": "csrf",
        "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
        "code": "[HttpPost]",
        "severity": "MEDIUM",
        "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
        "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/BasicWebSite/Controllers/ContactApiController.cs",
        "line": 33,
        "type": "csrf",
        "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
        "code": "[HttpPost]",
        "severity": "MEDIUM",
        "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
        "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/BasicWebSite/Controllers/NonNullableController.cs",
        "line": 16,
        "type": "csrf",
        "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
        "code": "[HttpPost]",
        "severity": "MEDIUM",
        "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
        "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/BasicWebSite/Controllers/HomeController.cs",
        "line": 116,
        "type": "csrf",
        "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
        "code": "[HttpPost]",
        "severity": "MEDIUM",
        "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
        "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/BasicWebSite/Controllers/FiltersController.cs",
        "line": 12,
        "type": "csrf",
        "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
        "code": "[HttpPost]",
        "severity": "MEDIUM",
        "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
        "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/BasicWebSite/Controllers/TempDataPropertyController.cs",
        "line": 17,
        "type": "csrf",
        "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
        "code": "[HttpPost]",
        "severity": "MEDIUM",
        "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
        "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/BasicWebSite/Controllers/TempDataPropertyController.cs",
        "line": 25,
        "type": "csrf",
        "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
        "code": "[HttpPost]",
        "severity": "MEDIUM",
        "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
        "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/BasicWebSite/Controllers/ReadFromThrowingRequestBodyController .cs",
        "line": 11,
        "type": "csrf",
        "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
        "code": "[HttpPost]",
        "severity": "MEDIUM",
        "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
        "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/BasicWebSite/Controllers/ReadFromThrowingRequestBodyController .cs",
        "line": 14,
        "type": "csrf",
        "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
        "code": "[HttpPost]",
        "severity": "MEDIUM",
        "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
        "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/FormatterWebSite/Controllers/ValidationController.cs",
        "line": 11,
        "type": "csrf",
        "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
        "code": "[HttpPost]",
        "severity": "MEDIUM",
        "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
        "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/FormatterWebSite/Controllers/ValidationController.cs",
        "line": 25,
        "type": "csrf",
        "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
        "code": "[HttpPost]",
        "severity": "MEDIUM",
        "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
        "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/FormatterWebSite/Controllers/ValidationController.cs",
        "line": 44,
        "type": "csrf",
        "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
        "code": "[HttpPost]",
        "severity": "MEDIUM",
        "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
        "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/FormatterWebSite/Controllers/ValidationController.cs",
        "line": 71,
        "type": "csrf",
        "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
        "code": "[HttpPost]",
        "severity": "MEDIUM",
        "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
        "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/FormatterWebSite/Controllers/ValidationController.cs",
        "line": 82,
        "type": "csrf",
        "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
        "code": "[HttpPost]",
        "severity": "MEDIUM",
        "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
        "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/FormatterWebSite/Controllers/ValidationController.cs",
        "line": 88,
        "type": "csrf",
        "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
        "code": "[HttpPost]",
        "severity": "MEDIUM",
        "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
        "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/FormatterWebSite/Controllers/XmlSerializerController.cs",
        "line": 23,
        "type": "csrf",
        "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
        "code": "[HttpPost]",
        "severity": "MEDIUM",
        "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
        "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/FormatterWebSite/Controllers/XmlSerializerController.cs",
        "line": 29,
        "type": "csrf",
        "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
        "code": "[HttpPost]",
        "severity": "MEDIUM",
        "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
        "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/FormatterWebSite/Controllers/XmlSerializerController.cs",
        "line": 39,
        "type": "csrf",
        "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
        "code": "[HttpPost]",
        "severity": "MEDIUM",
        "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
        "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/FormatterWebSite/Controllers/XmlSerializerController.cs",
        "line": 48,
        "type": "csrf",
        "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
        "code": "[HttpPost]",
        "severity": "MEDIUM",
        "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
        "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/FormatterWebSite/Controllers/XmlSerializerController.cs",
        "line": 54,
        "type": "csrf",
        "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
        "code": "[HttpPost]",
        "severity": "MEDIUM",
        "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
        "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/FormatterWebSite/Controllers/PolymorphicPropertyBindingController.cs",
        "line": 14,
        "type": "csrf",
        "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
        "code": "[HttpPost]",
        "severity": "MEDIUM",
        "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
        "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/FormatterWebSite/Controllers/DoNotRespectBrowserAcceptHeaderController.cs",
        "line": 31,
        "type": "csrf",
        "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
        "code": "[HttpPost]",
        "severity": "MEDIUM",
        "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
        "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/FormatterWebSite/Controllers/SerializableErrorController.cs",
        "line": 10,
        "type": "csrf",
        "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
        "code": "[HttpPost]",
        "severity": "MEDIUM",
        "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
        "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/FormatterWebSite/Controllers/DataContractSerializerController.cs",
        "line": 27,
        "type": "csrf",
        "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
        "code": "[HttpPost]",
        "severity": "MEDIUM",
        "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
        "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/FormatterWebSite/Controllers/DataContractSerializerController.cs",
        "line": 35,
        "type": "csrf",
        "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
        "code": "[HttpPost]",
        "severity": "MEDIUM",
        "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
        "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/FormatterWebSite/Controllers/DataContractSerializerController.cs",
        "line": 43,
        "type": "csrf",
        "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
        "code": "[HttpPost]",
        "severity": "MEDIUM",
        "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
        "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/FormatterWebSite/Controllers/TestApiController.cs",
        "line": 13,
        "type": "csrf",
        "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
        "code": "[HttpPost]",
        "severity": "MEDIUM",
        "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
        "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/FormatterWebSite/Controllers/JsonInputFormatterController.cs",
        "line": 12,
        "type": "csrf",
        "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
        "code": "[HttpPost]",
        "severity": "MEDIUM",
        "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
        "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/FormatterWebSite/Controllers/HomeController.cs",
        "line": 13,
        "type": "csrf",
        "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
        "code": "[HttpPost]",
        "severity": "MEDIUM",
        "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
        "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/FormatterWebSite/Controllers/HomeController.cs",
        "line": 19,
        "type": "csrf",
        "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
        "code": "[HttpPost]",
        "severity": "MEDIUM",
        "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
        "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/FormatterWebSite/Controllers/HomeController.cs",
        "line": 25,
        "type": "csrf",
        "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
        "code": "[HttpPost]",
        "severity": "MEDIUM",
        "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
        "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/FormatterWebSite/Controllers/HomeController.cs",
        "line": 31,
        "type": "csrf",
        "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
        "code": "[HttpPost]",
        "severity": "MEDIUM",
        "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
        "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/FormatterWebSite/Controllers/HomeController.cs",
        "line": 41,
        "type": "csrf",
        "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
        "code": "[HttpPost]",
        "severity": "MEDIUM",
        "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
        "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/FormatterWebSite/Controllers/HomeController.cs",
        "line": 45,
        "type": "csrf",
        "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
        "code": "[HttpPost]",
        "severity": "MEDIUM",
        "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
        "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/FormatterWebSite/Controllers/HomeController.cs",
        "line": 49,
        "type": "csrf",
        "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
        "code": "[HttpPost]",
        "severity": "MEDIUM",
        "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
        "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/FormatterWebSite/Controllers/HomeController.cs",
        "line": 54,
        "type": "csrf",
        "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
        "code": "[HttpPost]",
        "severity": "MEDIUM",
        "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
        "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/FormatterWebSite/Controllers/HomeController.cs",
        "line": 58,
        "type": "csrf",
        "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
        "code": "[HttpPost]",
        "severity": "MEDIUM",
        "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
        "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/FormatterWebSite/Controllers/PolymorphicBindingController.cs",
        "line": 21,
        "type": "csrf",
        "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
        "code": "[HttpPost]",
        "severity": "MEDIUM",
        "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
        "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/FormatterWebSite/Controllers/JsonFormatterController.cs",
        "line": 48,
        "type": "csrf",
        "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
        "code": "[HttpPost]",
        "severity": "MEDIUM",
        "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
        "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/FormatterWebSite/Controllers/JsonFormatterController.cs",
        "line": 60,
        "type": "csrf",
        "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
        "code": "[HttpPost]",
        "severity": "MEDIUM",
        "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
        "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/FormatterWebSite/Controllers/JsonFormatterController.cs",
        "line": 71,
        "type": "csrf",
        "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
        "code": "[HttpPost]",
        "severity": "MEDIUM",
        "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
        "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/FormatterWebSite/Controllers/JsonFormatterController.cs",
        "line": 82,
        "type": "csrf",
        "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
        "code": "[HttpPost]",
        "severity": "MEDIUM",
        "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
        "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/FormatterWebSite/Controllers/JsonFormatterController.cs",
        "line": 88,
        "type": "csrf",
        "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
        "code": "[HttpPost]",
        "severity": "MEDIUM",
        "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
        "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/FormatterWebSite/Controllers/JsonFormatterController.cs",
        "line": 113,
        "type": "csrf",
        "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
        "code": "[HttpPost]",
        "severity": "MEDIUM",
        "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
        "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/XmlFormattersWebSite/Controllers/SerializableErrorController.cs",
        "line": 31,
        "type": "csrf",
        "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
        "code": "[HttpPost]",
        "severity": "MEDIUM",
        "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
        "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/XmlFormattersWebSite/Controllers/SerializableErrorController.cs",
        "line": 37,
        "type": "csrf",
        "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
        "code": "[HttpPost]",
        "severity": "MEDIUM",
        "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
        "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/XmlFormattersWebSite/Controllers/HomeController.cs",
        "line": 12,
        "type": "csrf",
        "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
        "code": "[HttpPost]",
        "severity": "MEDIUM",
        "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
        "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/AntiforgeryMiddlewareTest.cs",
        "line": 206,
        "type": "csrf",
        "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
        "code": "[HttpPost]",
        "severity": "MEDIUM",
        "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
        "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/AntiforgeryMiddlewareTest.cs",
        "line": 211,
        "type": "csrf",
        "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
        "code": "[HttpPost]",
        "severity": "MEDIUM",
        "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
        "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/AntiforgeryMiddlewareTest.cs",
        "line": 217,
        "type": "csrf",
        "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
        "code": "[HttpPost]",
        "severity": "MEDIUM",
        "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
        "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/AntiforgeryMiddlewareTest.cs",
        "line": 240,
        "type": "csrf",
        "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
        "code": "[HttpPost]",
        "severity": "MEDIUM",
        "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
        "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.ViewFeatures/test/Filters/AntiforgeryApplicationModelProviderTest.cs",
        "line": 192,
        "type": "csrf",
        "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
        "code": "[HttpPost]",
        "severity": "MEDIUM",
        "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
        "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.ViewFeatures/test/Filters/AntiforgeryApplicationModelProviderTest.cs",
        "line": 203,
        "type": "csrf",
        "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
        "code": "[HttpPost]",
        "severity": "MEDIUM",
        "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
        "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.ViewFeatures/test/Filters/AntiforgeryApplicationModelProviderTest.cs",
        "line": 215,
        "type": "csrf",
        "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
        "code": "[HttpPost]",
        "severity": "MEDIUM",
        "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
        "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.ViewFeatures/test/Filters/AntiforgeryApplicationModelProviderTest.cs",
        "line": 225,
        "type": "csrf",
        "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
        "code": "[HttpPost]",
        "severity": "MEDIUM",
        "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
        "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.ViewFeatures/test/Filters/AntiforgeryApplicationModelProviderTest.cs",
        "line": 234,
        "type": "csrf",
        "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
        "code": "[HttpPost]",
        "severity": "MEDIUM",
        "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
        "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.ViewFeatures/test/Filters/AntiforgeryApplicationModelProviderTest.cs",
        "line": 237,
        "type": "csrf",
        "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
        "code": "[HttpPost]",
        "severity": "MEDIUM",
        "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
        "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Cors/test/CorsApplicationModelProviderTest.cs",
        "line": 263,
        "type": "csrf",
        "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
        "code": "[HttpPost]",
        "severity": "MEDIUM",
        "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
        "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Cors/test/CorsApplicationModelProviderTest.cs",
        "line": 273,
        "type": "csrf",
        "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
        "code": "[HttpPost]",
        "severity": "MEDIUM",
        "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
        "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Cors/test/CorsApplicationModelProviderTest.cs",
        "line": 282,
        "type": "csrf",
        "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
        "code": "[HttpPost]",
        "severity": "MEDIUM",
        "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
        "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Analyzers/test/TopLevelParameterNameAnalyzerTest.cs",
        "line": 25,
        "type": "csrf",
        "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
        "code": "[HttpPost]",
        "severity": "MEDIUM",
        "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
        "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Analyzers/test/TopLevelParameterNameAnalyzerTest.cs",
        "line": 48,
        "type": "csrf",
        "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
        "code": "[HttpPost]",
        "severity": "MEDIUM",
        "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
        "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Analyzers/test/TopLevelParameterNameAnalyzerTest.cs",
        "line": 75,
        "type": "csrf",
        "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
        "code": "[HttpPost]",
        "severity": "MEDIUM",
        "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
        "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Analyzers/test/TopLevelParameterNameAnalyzerTest.cs",
        "line": 102,
        "type": "csrf",
        "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
        "code": "[HttpPost]",
        "severity": "MEDIUM",
        "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
        "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Analyzers/test/TopLevelParameterNameAnalyzerTest.cs",
        "line": 122,
        "type": "csrf",
        "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
        "code": "[HttpPost]",
        "severity": "MEDIUM",
        "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
        "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/samples/MvcFormSample/Controllers/HomeController.cs",
        "line": 38,
        "type": "csrf",
        "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
        "code": "[HttpPost]",
        "severity": "MEDIUM",
        "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
        "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/perf/benchmarkapps/BasicApi/Controllers/PetController.cs",
        "line": 123,
        "type": "csrf",
        "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
        "code": "[HttpPost]",
        "severity": "MEDIUM",
        "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
        "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/perf/benchmarkapps/BasicViews/Controllers/HomeController.cs",
        "line": 43,
        "type": "csrf",
        "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
        "code": "[HttpPost]",
        "severity": "MEDIUM",
        "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
        "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Core/test/ApplicationModels/ControllerActionDescriptorProviderTests.cs",
        "line": 1441,
        "type": "csrf",
        "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
        "code": "[HttpPost]",
        "severity": "MEDIUM",
        "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
        "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Core/test/ApplicationModels/ControllerActionDescriptorProviderTests.cs",
        "line": 1573,
        "type": "csrf",
        "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
        "code": "[HttpPost]",
        "severity": "MEDIUM",
        "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
        "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Core/test/ApplicationModels/ControllerActionDescriptorProviderTests.cs",
        "line": 1601,
        "type": "csrf",
        "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
        "code": "[HttpPost]",
        "severity": "MEDIUM",
        "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
        "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Core/test/ApplicationModels/ControllerActionDescriptorProviderTests.cs",
        "line": 1614,
        "type": "csrf",
        "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
        "code": "[HttpPost]",
        "severity": "MEDIUM",
        "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
        "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Core/test/ApplicationModels/ControllerActionDescriptorProviderTests.cs",
        "line": 1676,
        "type": "csrf",
        "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
        "code": "[HttpPost]",
        "severity": "MEDIUM",
        "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
        "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Core/test/ApplicationModels/InferParameterBindingInfoConventionTest.cs",
        "line": 988,
        "type": "csrf",
        "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
        "code": "[HttpPost]",
        "severity": "MEDIUM",
        "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
        "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Core/test/ApplicationModels/InferParameterBindingInfoConventionTest.cs",
        "line": 991,
        "type": "csrf",
        "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
        "code": "[HttpPost]",
        "severity": "MEDIUM",
        "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
        "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Core/test/ApplicationModels/ConsumesConstraintForFormFileParameterConventionTest.cs",
        "line": 87,
        "type": "csrf",
        "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
        "code": "[HttpPost]",
        "severity": "MEDIUM",
        "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
        "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Core/test/ApplicationModels/ConsumesConstraintForFormFileParameterConventionTest.cs",
        "line": 90,
        "type": "csrf",
        "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
        "code": "[HttpPost]",
        "severity": "MEDIUM",
        "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
        "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Core/test/ApplicationModels/DefaultApplicationModelProviderTest.cs",
        "line": 1686,
        "type": "csrf",
        "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
        "code": "[HttpPost]",
        "severity": "MEDIUM",
        "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
        "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Core/test/ApplicationModels/DefaultApplicationModelProviderTest.cs",
        "line": 1744,
        "type": "csrf",
        "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
        "code": "[HttpPost]",
        "severity": "MEDIUM",
        "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
        "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Core/test/Infrastructure/ActionSelectorTest.cs",
        "line": 1234,
        "type": "csrf",
        "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
        "code": "[HttpPost]",
        "severity": "MEDIUM",
        "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
        "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Core/src/ControllerBase.cs",
        "line": 453,
        "type": "csrf",
        "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
        "code": "[HttpPost]",
        "severity": "MEDIUM",
        "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
        "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Core/src/Routing/ActionEndpointFactory.cs",
        "line": 377,
        "type": "csrf",
        "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
        "code": "[HttpPost]",
        "severity": "MEDIUM",
        "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
        "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Core/src/ApplicationModels/DefaultApplicationModelProvider.cs",
        "line": 527,
        "type": "csrf",
        "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
        "code": "[HttpPost]",
        "severity": "MEDIUM",
        "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
        "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Grpc/JsonTranscoding/test/testassets/Sandbox/Controllers/ValuesController.cs",
        "line": 27,
        "type": "csrf",
        "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
        "code": "[HttpPost]",
        "severity": "MEDIUM",
        "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
        "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Framework/AspNetCoreAnalyzers/test/Mvc/DetectAmbiguousActionRoutesTest.cs",
        "line": 896,
        "type": "csrf",
        "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
        "code": "[HttpPost]",
        "severity": "MEDIUM",
        "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
        "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Framework/AspNetCoreAnalyzers/src/Analyzers/Mvc/MvcAnalyzer.cs",
        "line": 94,
        "type": "csrf",
        "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
        "code": "[HttpPost]",
        "severity": "MEDIUM",
        "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
        "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Security/samples/ClaimsTransformation/Controllers/AccountController.cs",
        "line": 28,
        "type": "csrf",
        "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
        "code": "[HttpPost]",
        "severity": "MEDIUM",
        "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
        "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Security/samples/StaticFilesAuth/Controllers/AccountController.cs",
        "line": 27,
        "type": "csrf",
        "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
        "code": "[HttpPost]",
        "severity": "MEDIUM",
        "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
        "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Security/samples/PathSchemeSelection/Controllers/AccountController.cs",
        "line": 28,
        "type": "csrf",
        "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
        "code": "[HttpPost]",
        "severity": "MEDIUM",
        "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
        "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Security/samples/DynamicSchemes/Controllers/AuthController.cs",
        "line": 30,
        "type": "csrf",
        "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
        "code": "[HttpPost]",
        "severity": "MEDIUM",
        "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
        "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Security/samples/CustomPolicyProvider/Controllers/AccountController.cs",
        "line": 20,
        "type": "csrf",
        "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
        "code": "[HttpPost]",
        "severity": "MEDIUM",
        "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
        "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Security/samples/Cookies/Controllers/AccountController.cs",
        "line": 27,
        "type": "csrf",
        "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
        "code": "[HttpPost]",
        "severity": "MEDIUM",
        "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
        "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.SourceGenerators.Tests/OperationTests.Controllers.cs",
        "line": 69,
        "type": "csrf",
        "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
        "code": "[HttpPost]",
        "severity": "MEDIUM",
        "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
        "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.Tests/Services/OpenApiSchemaService/OpenApiSchemaService.RequestBodySchemas.cs",
        "line": 996,
        "type": "csrf",
        "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
        "code": "[HttpPost]",
        "severity": "MEDIUM",
        "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
        "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/OpenApi/sample/Controllers/TestController.cs",
        "line": 29,
        "type": "csrf",
        "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
        "code": "[HttpPost]",
        "severity": "MEDIUM",
        "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
        "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/OpenApi/sample/Controllers/XmlController.cs",
        "line": 32,
        "type": "csrf",
        "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
        "code": "[HttpPost]",
        "severity": "MEDIUM",
        "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
        "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Components/test/testassets/Components.TestServer/Controllers/PersonController.cs",
        "line": 24,
        "type": "csrf",
        "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
        "code": "[HttpPost]",
        "severity": "MEDIUM",
        "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
        "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Components/test/testassets/Components.TestServer/Controllers/DataController.cs",
        "line": 27,
        "type": "csrf",
        "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
        "code": "[HttpPost]",
        "severity": "MEDIUM",
        "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
        "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Http/Http.Extensions/test/RequestDelegateGenerator/RequestDelegateCreationTests.Forms.cs",
        "line": 650,
        "type": "csrf",
        "pattern": "Request\\.Form\\[",
        "code": "Request.Form[",
        "severity": "MEDIUM",
        "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
        "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Http/Http.Extensions/test/RequestDelegateGenerator/RequestDelegateCreationTests.Forms.cs",
        "line": 679,
        "type": "csrf",
        "pattern": "Request\\.Form\\[",
        "code": "Request.Form[",
        "severity": "MEDIUM",
        "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
        "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Http/Http.Extensions/test/RequestDelegateGenerator/RequestDelegateCreationTests.Forms.cs",
        "line": 682,
        "type": "csrf",
        "pattern": "Request\\.Form\\[",
        "code": "Request.Form[",
        "severity": "MEDIUM",
        "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
        "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Http/Http.Extensions/test/RequestDelegateGenerator/RequestDelegateCreationTests.Forms.cs",
        "line": 712,
        "type": "csrf",
        "pattern": "Request\\.Form\\[",
        "code": "Request.Form[",
        "severity": "MEDIUM",
        "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
        "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Http/Http.Extensions/test/RequestDelegateGenerator/RequestDelegateCreationTests.Forms.cs",
        "line": 742,
        "type": "csrf",
        "pattern": "Request\\.Form\\[",
        "code": "Request.Form[",
        "severity": "MEDIUM",
        "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
        "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Http/Http.Extensions/test/RequestDelegateGenerator/RequestDelegateCreationTests.Forms.cs",
        "line": 772,
        "type": "csrf",
        "pattern": "Request\\.Form\\[",
        "code": "Request.Form[",
        "severity": "MEDIUM",
        "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
        "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Http/Http.Extensions/gen/Microsoft.AspNetCore.Http.RequestDelegateGenerator/StaticRouteHandlerModel/EndpointParameter.cs",
        "line": 122,
        "type": "csrf",
        "pattern": "Request\\.Form\\[",
        "code": "Request.Form[",
        "severity": "MEDIUM",
        "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
        "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Http/Http.Extensions/gen/Microsoft.AspNetCore.Http.RequestDelegateGenerator/StaticRouteHandlerModel/EndpointParameter.cs",
        "line": 123,
        "type": "csrf",
        "pattern": "Request\\.Form\\[",
        "code": "Request.Form[",
        "severity": "MEDIUM",
        "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
        "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
      }
    ],
    "hardcoded_secrets": [
      {
        "file": "/tmp/aspnetcore_analysis/src/ProjectTemplates/test/Templates.Mvc.Tests/BlazorTemplateTest.cs",
        "line": 209,
        "type": "hardcoded_secrets",
        "pattern": "password\\s*=\\s*[\"\\'][^\"\\']{8,}[\"\\']",
        "code": "Password = \"Account/ForgotPassword\"",
        "severity": "HIGH",
        "description": "Hardcoded secrets/credentials - potential for unauthorized access",
        "recommendation": "Use configuration files or Azure Key Vault"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/ProjectTemplates/test/Templates.Blazor.Tests/BlazorTemplateTest.cs",
        "line": 173,
        "type": "hardcoded_secrets",
        "pattern": "password\\s*=\\s*[\"\\'][^\"\\']{8,}[\"\\']",
        "code": "password = \"[PLACEHOLDER]-1a\"",
        "severity": "HIGH",
        "description": "Hardcoded secrets/credentials - potential for unauthorized access",
        "recommendation": "Use configuration files or Azure Key Vault"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/ProjectTemplates/Shared/PageUrls.cs",
        "line": 14,
        "type": "hardcoded_secrets",
        "pattern": "password\\s*=\\s*[\"\\'][^\"\\']{8,}[\"\\']",
        "code": "Password = \"/Identity/Account/ForgotPassword\"",
        "severity": "HIGH",
        "description": "Hardcoded secrets/credentials - potential for unauthorized access",
        "recommendation": "Use configuration files or Azure Key Vault"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Identity/test/InMemory.Test/ControllerTest.cs",
        "line": 47,
        "type": "hardcoded_secrets",
        "pattern": "password\\s*=\\s*[\"\\'][^\"\\']{8,}[\"\\']",
        "code": "password = \"[PLACEHOLDER]-1a\"",
        "severity": "HIGH",
        "description": "Hardcoded secrets/credentials - potential for unauthorized access",
        "recommendation": "Use configuration files or Azure Key Vault"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Identity/test/InMemory.Test/FunctionalTest.cs",
        "line": 27,
        "type": "hardcoded_secrets",
        "pattern": "password\\s*=\\s*[\"\\'][^\"\\']{8,}[\"\\']",
        "code": "Password = \"[PLACEHOLDER]-1a\"",
        "severity": "HIGH",
        "description": "Hardcoded secrets/credentials - potential for unauthorized access",
        "recommendation": "Use configuration files or Azure Key Vault"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Identity/test/Identity.Test/PasswordHasherTest.cs",
        "line": 12,
        "type": "hardcoded_secrets",
        "pattern": "password\\s*=\\s*[\"\\'][^\"\\']{8,}[\"\\']",
        "code": "Password = \"my password\"",
        "severity": "HIGH",
        "description": "Hardcoded secrets/credentials - potential for unauthorized access",
        "recommendation": "Use configuration files or Azure Key Vault"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Identity/test/Identity.FunctionalTests/ManagementTests.cs",
        "line": 126,
        "type": "hardcoded_secrets",
        "pattern": "password\\s*=\\s*[\"\\'][^\"\\']{8,}[\"\\']",
        "code": "password = \"[PLACEHOLDER]-1a\"",
        "severity": "HIGH",
        "description": "Hardcoded secrets/credentials - potential for unauthorized access",
        "recommendation": "Use configuration files or Azure Key Vault"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Identity/test/Identity.FunctionalTests/ManagementTests.cs",
        "line": 127,
        "type": "hardcoded_secrets",
        "pattern": "password\\s*=\\s*[\"\\'][^\"\\']{8,}[\"\\']",
        "code": "Password = \"[PLACEHOLDER]-1a-updated\"",
        "severity": "HIGH",
        "description": "Hardcoded secrets/credentials - potential for unauthorized access",
        "recommendation": "Use configuration files or Azure Key Vault"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Identity/EntityFrameworkCore/test/EF.Test/UserOnlyCustomContextTest.cs",
        "line": 96,
        "type": "hardcoded_secrets",
        "pattern": "password\\s*=\\s*[\"\\'][^\"\\']{8,}[\"\\']",
        "code": "password = \"[PLACEHOLDER]-1a\"",
        "severity": "HIGH",
        "description": "Hardcoded secrets/credentials - potential for unauthorized access",
        "recommendation": "Use configuration files or Azure Key Vault"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Identity/EntityFrameworkCore/test/EF.Test/UserOnlyTest.cs",
        "line": 57,
        "type": "hardcoded_secrets",
        "pattern": "password\\s*=\\s*[\"\\'][^\"\\']{8,}[\"\\']",
        "code": "password = \"[PLACEHOLDER]-1a\"",
        "severity": "HIGH",
        "description": "Hardcoded secrets/credentials - potential for unauthorized access",
        "recommendation": "Use configuration files or Azure Key Vault"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Identity/EntityFrameworkCore/test/EF.Test/UserOnlyTest.cs",
        "line": 74,
        "type": "hardcoded_secrets",
        "pattern": "password\\s*=\\s*[\"\\'][^\"\\']{8,}[\"\\']",
        "code": "password = \"[PLACEHOLDER]-1a\"",
        "severity": "HIGH",
        "description": "Hardcoded secrets/credentials - potential for unauthorized access",
        "recommendation": "Use configuration files or Azure Key Vault"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Identity/EntityFrameworkCore/test/EF.Test/DefaultPocoTest.cs",
        "line": 51,
        "type": "hardcoded_secrets",
        "pattern": "password\\s*=\\s*[\"\\'][^\"\\']{8,}[\"\\']",
        "code": "password = \"[PLACEHOLDER]-1a\"",
        "severity": "HIGH",
        "description": "Hardcoded secrets/credentials - potential for unauthorized access",
        "recommendation": "Use configuration files or Azure Key Vault"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Identity/Specification.Tests/src/UserManagerSpecificationTests.cs",
        "line": 503,
        "type": "hardcoded_secrets",
        "pattern": "password\\s*=\\s*[\"\\'][^\"\\']{8,}[\"\\']",
        "code": "password = \"password\"",
        "severity": "HIGH",
        "description": "Hardcoded secrets/credentials - potential for unauthorized access",
        "recommendation": "Use configuration files or Azure Key Vault"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Identity/Specification.Tests/src/UserManagerSpecificationTests.cs",
        "line": 504,
        "type": "hardcoded_secrets",
        "pattern": "password\\s*=\\s*[\"\\'][^\"\\']{8,}[\"\\']",
        "code": "Password = \"newpassword\"",
        "severity": "HIGH",
        "description": "Hardcoded secrets/credentials - potential for unauthorized access",
        "recommendation": "Use configuration files or Azure Key Vault"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Identity/Specification.Tests/src/UserManagerSpecificationTests.cs",
        "line": 668,
        "type": "hardcoded_secrets",
        "pattern": "password\\s*=\\s*[\"\\'][^\"\\']{8,}[\"\\']",
        "code": "password = \"password\"",
        "severity": "HIGH",
        "description": "Hardcoded secrets/credentials - potential for unauthorized access",
        "recommendation": "Use configuration files or Azure Key Vault"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Identity/Specification.Tests/src/UserManagerSpecificationTests.cs",
        "line": 688,
        "type": "hardcoded_secrets",
        "pattern": "password\\s*=\\s*[\"\\'][^\"\\']{8,}[\"\\']",
        "code": "password = \"password\"",
        "severity": "HIGH",
        "description": "Hardcoded secrets/credentials - potential for unauthorized access",
        "recommendation": "Use configuration files or Azure Key Vault"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Identity/Specification.Tests/src/UserManagerSpecificationTests.cs",
        "line": 689,
        "type": "hardcoded_secrets",
        "pattern": "password\\s*=\\s*[\"\\'][^\"\\']{8,}[\"\\']",
        "code": "Password = \"newpassword\"",
        "severity": "HIGH",
        "description": "Hardcoded secrets/credentials - potential for unauthorized access",
        "recommendation": "Use configuration files or Azure Key Vault"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Identity/Specification.Tests/src/UserManagerSpecificationTests.cs",
        "line": 993,
        "type": "hardcoded_secrets",
        "pattern": "password\\s*=\\s*[\"\\'][^\"\\']{8,}[\"\\']",
        "code": "password = \"password\"",
        "severity": "HIGH",
        "description": "Hardcoded secrets/credentials - potential for unauthorized access",
        "recommendation": "Use configuration files or Azure Key Vault"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Identity/Specification.Tests/src/UserManagerSpecificationTests.cs",
        "line": 994,
        "type": "hardcoded_secrets",
        "pattern": "password\\s*=\\s*[\"\\'][^\"\\']{8,}[\"\\']",
        "code": "Password = \"newpassword\"",
        "severity": "HIGH",
        "description": "Hardcoded secrets/credentials - potential for unauthorized access",
        "recommendation": "Use configuration files or Azure Key Vault"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Identity/Specification.Tests/src/UserManagerSpecificationTests.cs",
        "line": 1018,
        "type": "hardcoded_secrets",
        "pattern": "password\\s*=\\s*[\"\\'][^\"\\']{8,}[\"\\']",
        "code": "password = \"password\"",
        "severity": "HIGH",
        "description": "Hardcoded secrets/credentials - potential for unauthorized access",
        "recommendation": "Use configuration files or Azure Key Vault"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Identity/Specification.Tests/src/UserManagerSpecificationTests.cs",
        "line": 1019,
        "type": "hardcoded_secrets",
        "pattern": "password\\s*=\\s*[\"\\'][^\"\\']{8,}[\"\\']",
        "code": "Password = \"newpassword\"",
        "severity": "HIGH",
        "description": "Hardcoded secrets/credentials - potential for unauthorized access",
        "recommendation": "Use configuration files or Azure Key Vault"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Identity/Specification.Tests/src/UserManagerSpecificationTests.cs",
        "line": 1044,
        "type": "hardcoded_secrets",
        "pattern": "password\\s*=\\s*[\"\\'][^\"\\']{8,}[\"\\']",
        "code": "password = \"password\"",
        "severity": "HIGH",
        "description": "Hardcoded secrets/credentials - potential for unauthorized access",
        "recommendation": "Use configuration files or Azure Key Vault"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Identity/Specification.Tests/src/UserManagerSpecificationTests.cs",
        "line": 1045,
        "type": "hardcoded_secrets",
        "pattern": "password\\s*=\\s*[\"\\'][^\"\\']{8,}[\"\\']",
        "code": "Password = \"newpassword\"",
        "severity": "HIGH",
        "description": "Hardcoded secrets/credentials - potential for unauthorized access",
        "recommendation": "Use configuration files or Azure Key Vault"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Core/test/ModelBinding/Validation/DefaultObjectValidatorTests.cs",
        "line": 724,
        "type": "hardcoded_secrets",
        "pattern": "password\\s*=\\s*[\"\\'][^\"\\']{8,}[\"\\']",
        "code": "Password = \"password-val\"",
        "severity": "HIGH",
        "description": "Hardcoded secrets/credentials - potential for unauthorized access",
        "recommendation": "Use configuration files or Azure Key Vault"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Core/test/ModelBinding/Validation/DefaultObjectValidatorTests.cs",
        "line": 725,
        "type": "hardcoded_secrets",
        "pattern": "password\\s*=\\s*[\"\\'][^\"\\']{8,}[\"\\']",
        "code": "Password = \"not-password-val\"",
        "severity": "HIGH",
        "description": "Hardcoded secrets/credentials - potential for unauthorized access",
        "recommendation": "Use configuration files or Azure Key Vault"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Core/test/ModelBinding/Validation/DefaultObjectValidatorTests.cs",
        "line": 1135,
        "type": "hardcoded_secrets",
        "pattern": "password\\s*=\\s*[\"\\'][^\"\\']{8,}[\"\\']",
        "code": "Password = \"password-val\"",
        "severity": "HIGH",
        "description": "Hardcoded secrets/credentials - potential for unauthorized access",
        "recommendation": "Use configuration files or Azure Key Vault"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Core/test/ModelBinding/Validation/DefaultObjectValidatorTests.cs",
        "line": 1136,
        "type": "hardcoded_secrets",
        "pattern": "password\\s*=\\s*[\"\\'][^\"\\']{8,}[\"\\']",
        "code": "Password = \"not-password-val\"",
        "severity": "HIGH",
        "description": "Hardcoded secrets/credentials - potential for unauthorized access",
        "recommendation": "Use configuration files or Azure Key Vault"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Security/Authentication/test/TwitterTests.cs",
        "line": 57,
        "type": "hardcoded_secrets",
        "pattern": "secret\\s*=\\s*[\"\\'][^\"\\']{16,}[\"\\']",
        "code": "Secret = \"Test Consumer Secret\"",
        "severity": "HIGH",
        "description": "Hardcoded secrets/credentials - potential for unauthorized access",
        "recommendation": "Use configuration files or Azure Key Vault"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Security/Authentication/test/TwitterTests.cs",
        "line": 92,
        "type": "hardcoded_secrets",
        "pattern": "secret\\s*=\\s*[\"\\'][^\"\\']{16,}[\"\\']",
        "code": "Secret = \"Test Consumer Secret\"",
        "severity": "HIGH",
        "description": "Hardcoded secrets/credentials - potential for unauthorized access",
        "recommendation": "Use configuration files or Azure Key Vault"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Security/Authentication/test/TwitterTests.cs",
        "line": 121,
        "type": "hardcoded_secrets",
        "pattern": "secret\\s*=\\s*[\"\\'][^\"\\']{16,}[\"\\']",
        "code": "Secret = \"Test Consumer Secret\"",
        "severity": "HIGH",
        "description": "Hardcoded secrets/credentials - potential for unauthorized access",
        "recommendation": "Use configuration files or Azure Key Vault"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Security/Authentication/test/TwitterTests.cs",
        "line": 136,
        "type": "hardcoded_secrets",
        "pattern": "secret\\s*=\\s*[\"\\'][^\"\\']{16,}[\"\\']",
        "code": "Secret = \"Test Consumer Secret\"",
        "severity": "HIGH",
        "description": "Hardcoded secrets/credentials - potential for unauthorized access",
        "recommendation": "Use configuration files or Azure Key Vault"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Security/Authentication/test/TwitterTests.cs",
        "line": 149,
        "type": "hardcoded_secrets",
        "pattern": "secret\\s*=\\s*[\"\\'][^\"\\']{16,}[\"\\']",
        "code": "Secret = \"Test Consumer Secret\"",
        "severity": "HIGH",
        "description": "Hardcoded secrets/credentials - potential for unauthorized access",
        "recommendation": "Use configuration files or Azure Key Vault"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Security/Authentication/test/TwitterTests.cs",
        "line": 162,
        "type": "hardcoded_secrets",
        "pattern": "secret\\s*=\\s*[\"\\'][^\"\\']{16,}[\"\\']",
        "code": "Secret = \"Test Consumer Secret\"",
        "severity": "HIGH",
        "description": "Hardcoded secrets/credentials - potential for unauthorized access",
        "recommendation": "Use configuration files or Azure Key Vault"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Security/Authentication/test/TwitterTests.cs",
        "line": 175,
        "type": "hardcoded_secrets",
        "pattern": "secret\\s*=\\s*[\"\\'][^\"\\']{16,}[\"\\']",
        "code": "Secret = \"Test Consumer Secret\"",
        "severity": "HIGH",
        "description": "Hardcoded secrets/credentials - potential for unauthorized access",
        "recommendation": "Use configuration files or Azure Key Vault"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Security/Authentication/test/TwitterTests.cs",
        "line": 199,
        "type": "hardcoded_secrets",
        "pattern": "secret\\s*=\\s*[\"\\'][^\"\\']{16,}[\"\\']",
        "code": "Secret = \"Test Consumer Secret\"",
        "severity": "HIGH",
        "description": "Hardcoded secrets/credentials - potential for unauthorized access",
        "recommendation": "Use configuration files or Azure Key Vault"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Security/Authentication/test/TwitterTests.cs",
        "line": 240,
        "type": "hardcoded_secrets",
        "pattern": "secret\\s*=\\s*[\"\\'][^\"\\']{16,}[\"\\']",
        "code": "Secret = \"Test Consumer Secret\"",
        "severity": "HIGH",
        "description": "Hardcoded secrets/credentials - potential for unauthorized access",
        "recommendation": "Use configuration files or Azure Key Vault"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Security/Authentication/test/TwitterTests.cs",
        "line": 289,
        "type": "hardcoded_secrets",
        "pattern": "secret\\s*=\\s*[\"\\'][^\"\\']{16,}[\"\\']",
        "code": "Secret = \"Test Consumer Secret\"",
        "severity": "HIGH",
        "description": "Hardcoded secrets/credentials - potential for unauthorized access",
        "recommendation": "Use configuration files or Azure Key Vault"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Security/Authentication/test/TwitterTests.cs",
        "line": 319,
        "type": "hardcoded_secrets",
        "pattern": "secret\\s*=\\s*[\"\\'][^\"\\']{16,}[\"\\']",
        "code": "Secret = \"Test Consumer Secret\"",
        "severity": "HIGH",
        "description": "Hardcoded secrets/credentials - potential for unauthorized access",
        "recommendation": "Use configuration files or Azure Key Vault"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Security/Authentication/test/TwitterTests.cs",
        "line": 344,
        "type": "hardcoded_secrets",
        "pattern": "secret\\s*=\\s*[\"\\'][^\"\\']{16,}[\"\\']",
        "code": "Secret = \"Test Consumer Secret\"",
        "severity": "HIGH",
        "description": "Hardcoded secrets/credentials - potential for unauthorized access",
        "recommendation": "Use configuration files or Azure Key Vault"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Security/Authentication/test/GoogleTests.cs",
        "line": 1032,
        "type": "hardcoded_secrets",
        "pattern": "secret\\s*=\\s*[\"\\'][^\"\\']{16,}[\"\\']",
        "code": "Secret = \"Test Client Secret\"",
        "severity": "HIGH",
        "description": "Hardcoded secrets/credentials - potential for unauthorized access",
        "recommendation": "Use configuration files or Azure Key Vault"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Security/Authentication/test/MicrosoftAccountTests.cs",
        "line": 59,
        "type": "hardcoded_secrets",
        "pattern": "secret\\s*=\\s*[\"\\'][^\"\\']{16,}[\"\\']",
        "code": "Secret = \"Test Client Secret\"",
        "severity": "HIGH",
        "description": "Hardcoded secrets/credentials - potential for unauthorized access",
        "recommendation": "Use configuration files or Azure Key Vault"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Security/Authentication/test/MicrosoftAccountTests.cs",
        "line": 199,
        "type": "hardcoded_secrets",
        "pattern": "secret\\s*=\\s*[\"\\'][^\"\\']{16,}[\"\\']",
        "code": "Secret = \"Test Client Secret\"",
        "severity": "HIGH",
        "description": "Hardcoded secrets/credentials - potential for unauthorized access",
        "recommendation": "Use configuration files or Azure Key Vault"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Security/Authentication/test/MicrosoftAccountTests.cs",
        "line": 299,
        "type": "hardcoded_secrets",
        "pattern": "secret\\s*=\\s*[\"\\'][^\"\\']{16,}[\"\\']",
        "code": "Secret = \"Test Client Secret\"",
        "severity": "HIGH",
        "description": "Hardcoded secrets/credentials - potential for unauthorized access",
        "recommendation": "Use configuration files or Azure Key Vault"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Security/Authentication/test/OpenIdConnect/OpenIdConnectTests.cs",
        "line": 564,
        "type": "hardcoded_secrets",
        "pattern": "secret\\s*=\\s*[\"\\'][^\"\\']{16,}[\"\\']",
        "code": "Secret = \"overwritten-client-secret\"",
        "severity": "HIGH",
        "description": "Hardcoded secrets/credentials - potential for unauthorized access",
        "recommendation": "Use configuration files or Azure Key Vault"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Security/Authentication/Negotiate/test/Negotiate.Test/LdapSettingsValidationTests.cs",
        "line": 25,
        "type": "hardcoded_secrets",
        "pattern": "password\\s*=\\s*[\"\\'][^\"\\']{8,}[\"\\']",
        "code": "Password = \"Passw0rd\"",
        "severity": "HIGH",
        "description": "Hardcoded secrets/credentials - potential for unauthorized access",
        "recommendation": "Use configuration files or Azure Key Vault"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Security/Authentication/Negotiate/samples/NegotiateAuthSample/Startup.cs",
        "line": 30,
        "type": "hardcoded_secrets",
        "pattern": "password\\s*=\\s*[\"\\'][^\"\\']{8,}[\"\\']",
        "code": "Password = \"PassW0rd\"",
        "severity": "HIGH",
        "description": "Hardcoded secrets/credentials - potential for unauthorized access",
        "recommendation": "Use configuration files or Azure Key Vault"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/test/Microsoft.AspNetCore.DataProtection.TrimmingTests/Constants.cs",
        "line": 6,
        "type": "hardcoded_secrets",
        "pattern": "password\\s*=\\s*[\"\\'][^\"\\']{8,}[\"\\']",
        "code": "Password = \"password\"",
        "severity": "HIGH",
        "description": "Hardcoded secrets/credentials - potential for unauthorized access",
        "recommendation": "Use configuration files or Azure Key Vault"
      }
    ],
    "deserialize_vuln": [
      {
        "file": "/tmp/aspnetcore_analysis/src/Identity/test/Identity.FunctionalTests/UserStories.cs",
        "line": 271,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Identity/testassets/Identity.DefaultUI.WebSite/Pages/Contoso/Login.cshtml.cs",
        "line": 54,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/ApiExplorerWebSite/Startup.cs",
        "line": 29,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/BasicWebSite/Startup.cs",
        "line": 16,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/BasicWebSite/StartupWithoutEndpointRouting.cs",
        "line": 36,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/BasicWebSite/Services/WeatherForecastService.cs",
        "line": 24,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/FormatterWebSite/Startup.cs",
        "line": 20,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/FormatterWebSite/StartupWithJsonInputFormatter.cs",
        "line": 17,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/FormatterWebSite/Controllers/DataContractSerializerController.cs",
        "line": 11,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/FormatterWebSite/Controllers/DataContractSerializerController.cs",
        "line": 13,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/FormatterWebSite/Controllers/DataContractSerializerController.cs",
        "line": 21,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/FormatterWebSite/Controllers/DataContractSerializerController.cs",
        "line": 31,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/FormatterWebSite/Controllers/DataContractSerializerController.cs",
        "line": 39,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/FormatterWebSite/Controllers/DataContractSerializerController.cs",
        "line": 47,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/XmlFormattersWebSite/Startup.cs",
        "line": 18,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/XmlFormattersWebSite/Startup.cs",
        "line": 23,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/XmlFormattersWebSite/Startup.cs",
        "line": 31,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/XmlFormattersWebSite/Startup.cs",
        "line": 32,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/XmlFormattersWebSite/Startup.cs",
        "line": 42,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/XmlFormattersWebSite/Startup.cs",
        "line": 60,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/XmlFormattersWebSite/Controllers/XmlDataContractApiController.cs",
        "line": 27,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/ApiBehaviorTest.cs",
        "line": 63,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/ApiBehaviorTest.cs",
        "line": 130,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/ApiBehaviorTest.cs",
        "line": 157,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/ApiBehaviorTest.cs",
        "line": 178,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/ApiBehaviorTest.cs",
        "line": 194,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/ApiBehaviorTest.cs",
        "line": 211,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/ApiBehaviorTest.cs",
        "line": 300,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/ApiBehaviorTest.cs",
        "line": 360,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/ApiBehaviorTest.cs",
        "line": 453,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/ConsumesAttributeTestsBase.cs",
        "line": 106,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/ConsumesAttributeTestsBase.cs",
        "line": 128,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/ConsumesAttributeTestsBase.cs",
        "line": 153,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/ConsumesAttributeTestsBase.cs",
        "line": 172,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/ConsumesAttributeTestsBase.cs",
        "line": 195,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/RequestServicesEndpointRoutingTest.cs",
        "line": 21,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/JsonOutputFormatterTestBase.cs",
        "line": 64,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/XmlOutputFormatterTests.cs",
        "line": 37,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/XmlOutputFormatterTests.cs",
        "line": 82,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/XmlOutputFormatterTests.cs",
        "line": 87,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/XmlOutputFormatterTests.cs",
        "line": 126,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/XmlOutputFormatterTests.cs",
        "line": 210,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/XmlOutputFormatterTests.cs",
        "line": 231,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/JsonPatchInputFormatterTest.cs",
        "line": 46,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/JsonPatchInputFormatterTest.cs",
        "line": 66,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/JsonPatchInputFormatterTest.cs",
        "line": 86,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/JsonPatchInputFormatterTest.cs",
        "line": 107,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/JsonPatchInputFormatterTest.cs",
        "line": 128,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/VersioningTests.cs",
        "line": 21,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/RoutingTests.cs",
        "line": 23,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/RoutingTests.cs",
        "line": 52,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/RoutingTests.cs",
        "line": 74,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/InputParentValidationTests.cs",
        "line": 57,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/InputParentValidationTests.cs",
        "line": 76,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/VersioningEndpointRoutingTests.cs",
        "line": 22,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/VersioningEndpointRoutingTests.cs",
        "line": 41,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/VersioningEndpointRoutingTests.cs",
        "line": 62,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/RoutingWithoutRazorPagesTestsBase.cs",
        "line": 46,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/RoutingWithoutRazorPagesTestsBase.cs",
        "line": 67,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/RoutingEndpointRoutingTest.cs",
        "line": 22,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/RoutingEndpointRoutingTest.cs",
        "line": 43,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/RoutingEndpointRoutingTest.cs",
        "line": 69,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/RoutingEndpointRoutingTest.cs",
        "line": 85,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/RoutingEndpointRoutingTest.cs",
        "line": 101,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/RoutingEndpointRoutingTest.cs",
        "line": 129,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/RoutingEndpointRoutingTest.cs",
        "line": 149,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/RoutingEndpointRoutingTest.cs",
        "line": 169,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/RoutingEndpointRoutingTest.cs",
        "line": 189,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/RoutingEndpointRoutingTest.cs",
        "line": 207,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/RoutingEndpointRoutingTest.cs",
        "line": 222,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/RoutingEndpointRoutingTest.cs",
        "line": 239,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/RoutingEndpointRoutingTest.cs",
        "line": 266,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/RoutingEndpointRoutingTest.cs",
        "line": 291,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/RoutingEndpointRoutingTest.cs",
        "line": 306,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/RoutingEndpointRoutingTest.cs",
        "line": 326,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/RoutingEndpointRoutingTest.cs",
        "line": 345,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/RoutingEndpointRoutingTest.cs",
        "line": 364,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/RoutingTestsBase.cs",
        "line": 50,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/RoutingTestsBase.cs",
        "line": 68,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/RoutingTestsBase.cs",
        "line": 94,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/RoutingTestsBase.cs",
        "line": 116,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/RoutingTestsBase.cs",
        "line": 136,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/RoutingTestsBase.cs",
        "line": 165,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/RoutingTestsBase.cs",
        "line": 176,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/RoutingTestsBase.cs",
        "line": 197,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/RoutingTestsBase.cs",
        "line": 209,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/RoutingTestsBase.cs",
        "line": 267,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/RoutingTestsBase.cs",
        "line": 291,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/RoutingTestsBase.cs",
        "line": 325,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/RoutingTestsBase.cs",
        "line": 362,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/RoutingTestsBase.cs",
        "line": 377,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/RoutingTestsBase.cs",
        "line": 410,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/RoutingTestsBase.cs",
        "line": 475,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/RoutingTestsBase.cs",
        "line": 502,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/RoutingTestsBase.cs",
        "line": 544,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/RoutingTestsBase.cs",
        "line": 572,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/RoutingTestsBase.cs",
        "line": 638,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/RoutingTestsBase.cs",
        "line": 655,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/RoutingTestsBase.cs",
        "line": 685,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/RoutingTestsBase.cs",
        "line": 712,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/RoutingTestsBase.cs",
        "line": 737,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/RoutingTestsBase.cs",
        "line": 757,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/RoutingTestsBase.cs",
        "line": 780,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/RoutingTestsBase.cs",
        "line": 802,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/RoutingTestsBase.cs",
        "line": 827,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/RoutingTestsBase.cs",
        "line": 847,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/RoutingTestsBase.cs",
        "line": 870,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/RoutingTestsBase.cs",
        "line": 891,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/RoutingTestsBase.cs",
        "line": 912,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/RoutingTestsBase.cs",
        "line": 933,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/RoutingTestsBase.cs",
        "line": 972,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/RoutingTestsBase.cs",
        "line": 988,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/RoutingTestsBase.cs",
        "line": 1008,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/RoutingTestsBase.cs",
        "line": 1028,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/RoutingTestsBase.cs",
        "line": 1048,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/RoutingTestsBase.cs",
        "line": 1072,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/RoutingTestsBase.cs",
        "line": 1090,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/RoutingTestsBase.cs",
        "line": 1112,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/RoutingTestsBase.cs",
        "line": 1130,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/RoutingTestsBase.cs",
        "line": 1152,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/RoutingTestsBase.cs",
        "line": 1173,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/RoutingTestsBase.cs",
        "line": 1194,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/RoutingTestsBase.cs",
        "line": 1216,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/RoutingTestsBase.cs",
        "line": 1238,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/RoutingTestsBase.cs",
        "line": 1260,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/RoutingTestsBase.cs",
        "line": 1282,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/RoutingTestsBase.cs",
        "line": 1302,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/RoutingTestsBase.cs",
        "line": 1323,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/RoutingTestsBase.cs",
        "line": 1344,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/RoutingTestsBase.cs",
        "line": 1364,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/RoutingTestsBase.cs",
        "line": 1385,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/RoutingTestsBase.cs",
        "line": 1406,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/RoutingTestsBase.cs",
        "line": 1427,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/RoutingTestsBase.cs",
        "line": 1448,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/RoutingTestsBase.cs",
        "line": 1469,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/RoutingTestsBase.cs",
        "line": 1495,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/RoutingTestsBase.cs",
        "line": 1547,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/InputFormatterTests.cs",
        "line": 95,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/InputFormatterTests.cs",
        "line": 127,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/InputFormatterTests.cs",
        "line": 159,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/XmlDataContractSerializerInputFormatterTest.cs",
        "line": 16,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/XmlDataContractSerializerInputFormatterTest.cs",
        "line": 66,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/XmlDataContractSerializerInputFormatterTest.cs",
        "line": 97,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/ConsumesAttributeTests.cs",
        "line": 21,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/ContentNegotiationTest.cs",
        "line": 498,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/ContentNegotiationTest.cs",
        "line": 516,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/ConsumesAttributeEndpointRoutingTests.cs",
        "line": 21,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/RequestServicesTest.cs",
        "line": 21,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/InputValidationTests.cs",
        "line": 87,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/ApiExplorerTest.cs",
        "line": 47,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/ApiExplorerTest.cs",
        "line": 60,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/ApiExplorerTest.cs",
        "line": 73,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/ApiExplorerTest.cs",
        "line": 86,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/ApiExplorerTest.cs",
        "line": 99,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/ApiExplorerTest.cs",
        "line": 113,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/ApiExplorerTest.cs",
        "line": 127,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/ApiExplorerTest.cs",
        "line": 141,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/ApiExplorerTest.cs",
        "line": 155,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/ApiExplorerTest.cs",
        "line": 169,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/ApiExplorerTest.cs",
        "line": 183,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/ApiExplorerTest.cs",
        "line": 206,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/ApiExplorerTest.cs",
        "line": 229,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/ApiExplorerTest.cs",
        "line": 251,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/ApiExplorerTest.cs",
        "line": 280,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/ApiExplorerTest.cs",
        "line": 316,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/ApiExplorerTest.cs",
        "line": 351,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/ApiExplorerTest.cs",
        "line": 375,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/ApiExplorerTest.cs",
        "line": 393,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/ApiExplorerTest.cs",
        "line": 407,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/ApiExplorerTest.cs",
        "line": 428,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/ApiExplorerTest.cs",
        "line": 451,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/ApiExplorerTest.cs",
        "line": 470,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/ApiExplorerTest.cs",
        "line": 490,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/ApiExplorerTest.cs",
        "line": 514,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/ApiExplorerTest.cs",
        "line": 534,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/ApiExplorerTest.cs",
        "line": 557,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/ApiExplorerTest.cs",
        "line": 579,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/ApiExplorerTest.cs",
        "line": 600,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/ApiExplorerTest.cs",
        "line": 624,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/ApiExplorerTest.cs",
        "line": 656,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/ApiExplorerTest.cs",
        "line": 688,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/ApiExplorerTest.cs",
        "line": 720,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/ApiExplorerTest.cs",
        "line": 750,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/ApiExplorerTest.cs",
        "line": 787,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/ApiExplorerTest.cs",
        "line": 822,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/ApiExplorerTest.cs",
        "line": 852,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/ApiExplorerTest.cs",
        "line": 878,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/ApiExplorerTest.cs",
        "line": 902,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/ApiExplorerTest.cs",
        "line": 931,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/ApiExplorerTest.cs",
        "line": 957,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/ApiExplorerTest.cs",
        "line": 975,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/ApiExplorerTest.cs",
        "line": 1000,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/ApiExplorerTest.cs",
        "line": 1024,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/ApiExplorerTest.cs",
        "line": 1048,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/ApiExplorerTest.cs",
        "line": 1072,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/ApiExplorerTest.cs",
        "line": 1116,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/ApiExplorerTest.cs",
        "line": 1148,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/ApiExplorerTest.cs",
        "line": 1183,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/ApiExplorerTest.cs",
        "line": 1204,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/ApiExplorerTest.cs",
        "line": 1217,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/ApiExplorerTest.cs",
        "line": 1230,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/ApiExplorerTest.cs",
        "line": 1246,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/ApiExplorerTest.cs",
        "line": 1274,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/ApiExplorerTest.cs",
        "line": 1308,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/ApiExplorerTest.cs",
        "line": 1335,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/ApiExplorerTest.cs",
        "line": 1366,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/ApiExplorerTest.cs",
        "line": 1401,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/ApiExplorerTest.cs",
        "line": 1436,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/ApiExplorerTest.cs",
        "line": 1476,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/ApiExplorerTest.cs",
        "line": 1517,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/ApiExplorerTest.cs",
        "line": 1546,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/ApiExplorerTest.cs",
        "line": 861,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/ApiExplorerTest.cs",
        "line": 863,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/ApiExplorerTest.cs",
        "line": 945,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/VersioningTestsBase.cs",
        "line": 54,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/VersioningTestsBase.cs",
        "line": 78,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/VersioningTestsBase.cs",
        "line": 98,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/VersioningTestsBase.cs",
        "line": 119,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/VersioningTestsBase.cs",
        "line": 138,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/VersioningTestsBase.cs",
        "line": 157,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/VersioningTestsBase.cs",
        "line": 184,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/VersioningTestsBase.cs",
        "line": 233,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/VersioningTestsBase.cs",
        "line": 278,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/VersioningTestsBase.cs",
        "line": 300,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/VersioningTestsBase.cs",
        "line": 321,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/VersioningTestsBase.cs",
        "line": 342,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/VersioningTestsBase.cs",
        "line": 364,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/VersioningTestsBase.cs",
        "line": 385,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/VersioningTestsBase.cs",
        "line": 404,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/VersioningTestsBase.cs",
        "line": 426,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/VersioningTestsBase.cs",
        "line": 447,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/VersioningTestsBase.cs",
        "line": 468,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/VersioningTestsBase.cs",
        "line": 492,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/VersioningTestsBase.cs",
        "line": 511,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/VersioningTestsBase.cs",
        "line": 530,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/VersioningTestsBase.cs",
        "line": 552,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/XmlDataContractSerializerFormattersWrappingTest.cs",
        "line": 18,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/InputObjectValidationTests.cs",
        "line": 147,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/InputObjectValidationTests.cs",
        "line": 175,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/InputObjectValidationTests.cs",
        "line": 300,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/InputObjectValidationTests.cs",
        "line": 329,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/InputObjectValidationTests.cs",
        "line": 361,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc/test/MvcOptionsSetupTest.cs",
        "line": 163,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/ValidationProblemDetailsWrapperTest.cs",
        "line": 29,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/ValidationProblemDetailsWrapperTest.cs",
        "line": 85,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/ValidationProblemDetailsWrapperTest.cs",
        "line": 123,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/ValidationProblemDetailsWrapperTest.cs",
        "line": 175,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "dataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/ValidationProblemDetailsWrapperTest.cs",
        "line": 175,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/ValidationProblemDetailsWrapperTest.cs",
        "line": 176,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "dataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/ValidationProblemDetailsWrapperTest.cs",
        "line": 213,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "dataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/ValidationProblemDetailsWrapperTest.cs",
        "line": 213,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/ValidationProblemDetailsWrapperTest.cs",
        "line": 214,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "dataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/XmlDataContractSerializerInputFormatterTest.cs",
        "line": 16,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/XmlDataContractSerializerInputFormatterTest.cs",
        "line": 70,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/XmlDataContractSerializerInputFormatterTest.cs",
        "line": 92,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/XmlDataContractSerializerInputFormatterTest.cs",
        "line": 97,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/XmlDataContractSerializerInputFormatterTest.cs",
        "line": 113,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/XmlDataContractSerializerInputFormatterTest.cs",
        "line": 126,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/XmlDataContractSerializerInputFormatterTest.cs",
        "line": 144,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/XmlDataContractSerializerInputFormatterTest.cs",
        "line": 176,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/XmlDataContractSerializerInputFormatterTest.cs",
        "line": 208,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/XmlDataContractSerializerInputFormatterTest.cs",
        "line": 243,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/XmlDataContractSerializerInputFormatterTest.cs",
        "line": 275,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/XmlDataContractSerializerInputFormatterTest.cs",
        "line": 307,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/XmlDataContractSerializerInputFormatterTest.cs",
        "line": 335,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/XmlDataContractSerializerInputFormatterTest.cs",
        "line": 373,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/XmlDataContractSerializerInputFormatterTest.cs",
        "line": 398,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/XmlDataContractSerializerInputFormatterTest.cs",
        "line": 420,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/XmlDataContractSerializerInputFormatterTest.cs",
        "line": 436,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/XmlDataContractSerializerInputFormatterTest.cs",
        "line": 449,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/XmlDataContractSerializerInputFormatterTest.cs",
        "line": 461,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/XmlDataContractSerializerInputFormatterTest.cs",
        "line": 490,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/XmlDataContractSerializerInputFormatterTest.cs",
        "line": 508,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/XmlDataContractSerializerInputFormatterTest.cs",
        "line": 545,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/XmlDataContractSerializerInputFormatterTest.cs",
        "line": 571,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/XmlDataContractSerializerInputFormatterTest.cs",
        "line": 610,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/XmlDataContractSerializerInputFormatterTest.cs",
        "line": 634,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/XmlDataContractSerializerInputFormatterTest.cs",
        "line": 639,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/XmlDataContractSerializerInputFormatterTest.cs",
        "line": 669,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/XmlDataContractSerializerInputFormatterTest.cs",
        "line": 694,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/XmlDataContractSerializerInputFormatterTest.cs",
        "line": 698,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/XmlDataContractSerializerInputFormatterTest.cs",
        "line": 753,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/XmlDataContractSerializerInputFormatterTest.cs",
        "line": 753,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/XmlDataContractSerializerInputFormatterTest.cs",
        "line": 757,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/XmlDataContractSerializerInputFormatterTest.cs",
        "line": 762,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/SerializableErrorWrapperTests.cs",
        "line": 63,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/SerializableErrorWrapperTests.cs",
        "line": 116,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "dataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/SerializableErrorWrapperTests.cs",
        "line": 116,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/SerializableErrorWrapperTests.cs",
        "line": 117,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "dataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/XmlDataContractSerializerOutputFormatterTest.cs",
        "line": 20,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/XmlDataContractSerializerOutputFormatterTest.cs",
        "line": 101,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/XmlDataContractSerializerOutputFormatterTest.cs",
        "line": 118,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/XmlDataContractSerializerOutputFormatterTest.cs",
        "line": 122,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/XmlDataContractSerializerOutputFormatterTest.cs",
        "line": 141,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/XmlDataContractSerializerOutputFormatterTest.cs",
        "line": 161,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/XmlDataContractSerializerOutputFormatterTest.cs",
        "line": 190,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/XmlDataContractSerializerOutputFormatterTest.cs",
        "line": 225,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/XmlDataContractSerializerOutputFormatterTest.cs",
        "line": 252,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/XmlDataContractSerializerOutputFormatterTest.cs",
        "line": 284,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/XmlDataContractSerializerOutputFormatterTest.cs",
        "line": 311,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/XmlDataContractSerializerOutputFormatterTest.cs",
        "line": 333,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/XmlDataContractSerializerOutputFormatterTest.cs",
        "line": 351,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/XmlDataContractSerializerOutputFormatterTest.cs",
        "line": 382,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/XmlDataContractSerializerOutputFormatterTest.cs",
        "line": 415,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/XmlDataContractSerializerOutputFormatterTest.cs",
        "line": 446,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/XmlDataContractSerializerOutputFormatterTest.cs",
        "line": 469,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/XmlDataContractSerializerOutputFormatterTest.cs",
        "line": 486,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/XmlDataContractSerializerOutputFormatterTest.cs",
        "line": 515,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/XmlDataContractSerializerOutputFormatterTest.cs",
        "line": 520,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/XmlDataContractSerializerOutputFormatterTest.cs",
        "line": 563,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/XmlDataContractSerializerOutputFormatterTest.cs",
        "line": 567,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/XmlDataContractSerializerOutputFormatterTest.cs",
        "line": 610,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/XmlDataContractSerializerOutputFormatterTest.cs",
        "line": 614,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/XmlDataContractSerializerOutputFormatterTest.cs",
        "line": 631,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/XmlDataContractSerializerOutputFormatterTest.cs",
        "line": 636,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/XmlDataContractSerializerOutputFormatterTest.cs",
        "line": 639,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/XmlDataContractSerializerOutputFormatterTest.cs",
        "line": 643,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/XmlDataContractSerializerOutputFormatterTest.cs",
        "line": 654,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/XmlDataContractSerializerOutputFormatterTest.cs",
        "line": 667,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/XmlDataContractSerializerOutputFormatterTest.cs",
        "line": 675,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/XmlDataContractSerializerOutputFormatterTest.cs",
        "line": 706,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/XmlDataContractSerializerOutputFormatterTest.cs",
        "line": 725,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/XmlDataContractSerializerOutputFormatterTest.cs",
        "line": 765,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/XmlDataContractSerializerOutputFormatterTest.cs",
        "line": 813,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/XmlDataContractSerializerOutputFormatterTest.cs",
        "line": 813,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/XmlDataContractSerializerOutputFormatterTest.cs",
        "line": 817,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/XmlDataContractSerializerOutputFormatterTest.cs",
        "line": 824,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/XmlDataContractSerializerOutputFormatterTest.cs",
        "line": 824,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/ProblemDetailsWrapperTest.cs",
        "line": 25,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/ProblemDetailsWrapperTest.cs",
        "line": 86,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "dataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/ProblemDetailsWrapperTest.cs",
        "line": 86,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/ProblemDetailsWrapperTest.cs",
        "line": 87,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "dataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/DependencyInjection/XmlDataContractSerializerMvcOptionsSetupTest.cs",
        "line": 10,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/DependencyInjection/XmlDataContractSerializerMvcOptionsSetupTest.cs",
        "line": 16,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/DependencyInjection/XmlDataContractSerializerMvcOptionsSetupTest.cs",
        "line": 31,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/DependencyInjection/XmlDataContractSerializerMvcOptionsSetupTest.cs",
        "line": 47,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/DependencyInjection/XmlDataContractSerializerMvcOptionsSetupTest.cs",
        "line": 54,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/DependencyInjection/XmlDataContractSerializerMvcOptionsSetupTest.cs",
        "line": 61,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/DependencyInjection/XmlDataContractSerializerMvcOptionsSetupTest.cs",
        "line": 68,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/src/XmlDataContractSerializerInputFormatter.cs",
        "line": 16,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/src/XmlDataContractSerializerInputFormatter.cs",
        "line": 18,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/src/XmlDataContractSerializerInputFormatter.cs",
        "line": 24,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/src/XmlDataContractSerializerInputFormatter.cs",
        "line": 27,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/src/XmlDataContractSerializerInputFormatter.cs",
        "line": 30,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/src/XmlDataContractSerializerInputFormatter.cs",
        "line": 41,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/src/XmlDataContractSerializerInputFormatter.cs",
        "line": 71,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/src/XmlDataContractSerializerInputFormatter.cs",
        "line": 72,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/src/XmlDataContractSerializerInputFormatter.cs",
        "line": 74,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/src/XmlDataContractSerializerInputFormatter.cs",
        "line": 90,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/src/XmlDataContractSerializerInputFormatter.cs",
        "line": 120,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/src/XmlDataContractSerializerInputFormatter.cs",
        "line": 210,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/src/XmlDataContractSerializerInputFormatter.cs",
        "line": 213,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/src/XmlDataContractSerializerInputFormatter.cs",
        "line": 214,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/src/XmlDataContractSerializerInputFormatter.cs",
        "line": 221,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/src/XmlDataContractSerializerInputFormatter.cs",
        "line": 234,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/src/XmlDataContractSerializerInputFormatter.cs",
        "line": 235,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/src/XmlDataContractSerializerInputFormatter.cs",
        "line": 248,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/src/DelegatingEnumerable.cs",
        "line": 25,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/src/XmlDataContractSerializerOutputFormatter.cs",
        "line": 21,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/src/XmlDataContractSerializerOutputFormatter.cs",
        "line": 23,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/src/XmlDataContractSerializerOutputFormatter.cs",
        "line": 27,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/src/XmlDataContractSerializerOutputFormatter.cs",
        "line": 32,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/src/XmlDataContractSerializerOutputFormatter.cs",
        "line": 35,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/src/XmlDataContractSerializerOutputFormatter.cs",
        "line": 41,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/src/XmlDataContractSerializerOutputFormatter.cs",
        "line": 45,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/src/XmlDataContractSerializerOutputFormatter.cs",
        "line": 51,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/src/XmlDataContractSerializerOutputFormatter.cs",
        "line": 53,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/src/XmlDataContractSerializerOutputFormatter.cs",
        "line": 54,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/src/XmlDataContractSerializerOutputFormatter.cs",
        "line": 60,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/src/XmlDataContractSerializerOutputFormatter.cs",
        "line": 62,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/src/XmlDataContractSerializerOutputFormatter.cs",
        "line": 64,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/src/XmlDataContractSerializerOutputFormatter.cs",
        "line": 77,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/src/XmlDataContractSerializerOutputFormatter.cs",
        "line": 100,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/src/XmlDataContractSerializerOutputFormatter.cs",
        "line": 101,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/src/XmlDataContractSerializerOutputFormatter.cs",
        "line": 103,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/src/XmlDataContractSerializerOutputFormatter.cs",
        "line": 142,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/src/XmlDataContractSerializerOutputFormatter.cs",
        "line": 145,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/src/XmlDataContractSerializerOutputFormatter.cs",
        "line": 146,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/src/XmlDataContractSerializerOutputFormatter.cs",
        "line": 156,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/src/XmlDataContractSerializerOutputFormatter.cs",
        "line": 160,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/src/XmlDataContractSerializerOutputFormatter.cs",
        "line": 256,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "dataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/src/XmlDataContractSerializerOutputFormatter.cs",
        "line": 271,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "dataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/src/XmlDataContractSerializerOutputFormatter.cs",
        "line": 292,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/src/XmlDataContractSerializerOutputFormatter.cs",
        "line": 293,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/src/XmlDataContractSerializerOutputFormatter.cs",
        "line": 304,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/src/XmlDataContractSerializerOutputFormatter.cs",
        "line": 320,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/src/XmlDataContractSerializerOutputFormatter.cs",
        "line": 320,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/src/XmlDataContractSerializerOutputFormatter.cs",
        "line": 321,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/src/DependencyInjection/XmlDataContractSerializerMvcOptionsSetup.cs",
        "line": 18,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/src/DependencyInjection/XmlDataContractSerializerMvcOptionsSetup.cs",
        "line": 23,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/src/DependencyInjection/XmlDataContractSerializerMvcOptionsSetup.cs",
        "line": 26,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/src/DependencyInjection/XmlDataContractSerializerMvcOptionsSetup.cs",
        "line": 39,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/src/DependencyInjection/XmlDataContractSerializerMvcOptionsSetup.cs",
        "line": 43,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/src/DependencyInjection/MvcXmlMvcCoreBuilderExtensions.cs",
        "line": 34,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/src/DependencyInjection/MvcXmlMvcCoreBuilderExtensions.cs",
        "line": 38,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/src/DependencyInjection/MvcXmlMvcCoreBuilderExtensions.cs",
        "line": 42,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/src/DependencyInjection/MvcXmlMvcCoreBuilderExtensions.cs",
        "line": 47,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/src/DependencyInjection/MvcXmlMvcCoreBuilderExtensions.cs",
        "line": 52,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/src/DependencyInjection/MvcXmlMvcCoreBuilderExtensions.cs",
        "line": 59,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/src/DependencyInjection/MvcXmlMvcCoreBuilderExtensions.cs",
        "line": 95,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/src/DependencyInjection/MvcXmlMvcCoreBuilderExtensions.cs",
        "line": 98,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/src/DependencyInjection/MvcXmlMvcBuilderExtensions.cs",
        "line": 33,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/src/DependencyInjection/MvcXmlMvcBuilderExtensions.cs",
        "line": 37,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/src/DependencyInjection/MvcXmlMvcBuilderExtensions.cs",
        "line": 41,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/src/DependencyInjection/MvcXmlMvcBuilderExtensions.cs",
        "line": 46,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/src/DependencyInjection/MvcXmlMvcBuilderExtensions.cs",
        "line": 51,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/src/DependencyInjection/MvcXmlMvcBuilderExtensions.cs",
        "line": 58,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/src/DependencyInjection/MvcXmlMvcBuilderExtensions.cs",
        "line": 94,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/src/DependencyInjection/MvcXmlMvcBuilderExtensions.cs",
        "line": 97,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Core/test/ModelBinding/Binders/BodyModelBinderTests.cs",
        "line": 289,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Core/test/ModelBinding/Binders/BodyModelBinderTests.cs",
        "line": 361,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Core/test/ModelBinding/Binders/BodyModelBinderTests.cs",
        "line": 434,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Core/test/ModelBinding/Binders/BodyModelBinderTests.cs",
        "line": 469,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Core/test/ModelBinding/Binders/BodyModelBinderTests.cs",
        "line": 815,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Core/test/ModelBinding/Binders/BodyModelBinderTests.cs",
        "line": 815,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Core/test/ModelBinding/Binders/BodyModelBinderTests.cs",
        "line": 819,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Core/test/ModelBinding/Binders/BodyModelBinderTests.cs",
        "line": 885,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Core/test/ModelBinding/Binders/BodyModelBinderTests.cs",
        "line": 885,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Core/test/ModelBinding/Binders/BodyModelBinderTests.cs",
        "line": 889,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Security/Authentication/test/WsFederation/CustomStateDataFormat.cs",
        "line": 14,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Security/Authentication/test/WsFederation/CustomStateDataFormat.cs",
        "line": 14,
        "type": "deserialize_vuln",
        "pattern": "DataContractSerializer",
        "code": "DataContractSerializer",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/SignalR/common/Http.Connections/test/HttpConnectionDispatcherTests.cs",
        "line": 70,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/SignalR/common/Http.Connections/test/HttpConnectionDispatcherTests.cs",
        "line": 95,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/SignalR/common/Http.Connections/test/HttpConnectionDispatcherTests.cs",
        "line": 122,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/SignalR/common/Http.Connections/test/HttpConnectionDispatcherTests.cs",
        "line": 159,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/SignalR/common/Http.Connections/test/HttpConnectionDispatcherTests.cs",
        "line": 187,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/SignalR/common/Http.Connections/test/HttpConnectionDispatcherTests.cs",
        "line": 274,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/SignalR/common/Http.Connections/test/HttpConnectionDispatcherTests.cs",
        "line": 2276,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/SignalR/common/Http.Connections/test/HttpConnectionDispatcherTests.cs",
        "line": 2302,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/SignalR/common/Http.Connections/test/HttpConnectionDispatcherTests.cs",
        "line": 2331,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/SignalR/common/Http.Connections/test/HttpConnectionDispatcherTests.cs",
        "line": 2360,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/SignalR/perf/benchmarkapps/Crankier/WorkerReceiver.cs",
        "line": 41,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/SignalR/perf/benchmarkapps/Crankier/AgentReceiver.cs",
        "line": 32,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Features/JsonPatch/test/JsonPatchDocumentTest.cs",
        "line": 62,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Features/JsonPatch/test/JsonPatchDocumentTest.cs",
        "line": 89,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Features/JsonPatch/test/JsonPatchDocumentTest.cs",
        "line": 122,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Features/JsonPatch/test/JsonPatchDocumentTest.cs",
        "line": 138,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Features/JsonPatch/test/JsonPatchDocumentTest.cs",
        "line": 155,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Features/JsonPatch/test/IntegrationTests/NestedObjectIntegrationTest.cs",
        "line": 50,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Features/JsonPatch/src/Internal/ConversionResultProvider.cs",
        "line": 38,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Features/JsonPatch/src/Internal/ConversionResultProvider.cs",
        "line": 47,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Features/JsonPatch/src/Internal/ConversionResultProvider.cs",
        "line": 72,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/Kestrel/test/FunctionalTests/RequestTests.cs",
        "line": 1191,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/IIS/IIS/test/Common.FunctionalTests/Infrastructure/Helpers.cs",
        "line": 217,
        "type": "deserialize_vuln",
        "pattern": "JsonConvert\\.DeserializeObject",
        "code": "JsonConvert.DeserializeObject",
        "severity": "CRITICAL",
        "description": "Deserialization vulnerability - potential for remote code execution",
        "recommendation": "Use secure serialization methods, validate input types"
      }
    ],
    "insecure_random": [
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/perf/Microbenchmarks/Microsoft.AspNetCore.Mvc/ActionSelectorBenchmark.cs",
        "line": 166,
        "type": "insecure_random",
        "pattern": "Random\\(.*\\)",
        "code": "Random(Seed)",
        "severity": "MEDIUM",
        "description": "Insecure random number generation - potential for predictable values",
        "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Shared/test/Shared.Tests/runtime/Http2/HuffmanDecodingTests.cs",
        "line": 133,
        "type": "insecure_random",
        "pattern": "Random\\(.*\\)",
        "code": "Random(42).NextBytes(data)",
        "severity": "MEDIUM",
        "description": "Insecure random number generation - potential for predictable values",
        "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Testing/test/QuarantinedTestAttributeTest.cs",
        "line": 27,
        "type": "insecure_random",
        "pattern": "Random\\(\\)",
        "code": "Random()",
        "severity": "MEDIUM",
        "description": "Insecure random number generation - potential for predictable values",
        "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Testing/test/QuarantinedTestAttributeTest.cs",
        "line": 27,
        "type": "insecure_random",
        "pattern": "Random\\(.*\\)",
        "code": "Random().Next(100) <= 80)",
        "severity": "MEDIUM",
        "description": "Insecure random number generation - potential for predictable values",
        "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Testing/test/HttpClientSlimTest.cs",
        "line": 74,
        "type": "insecure_random",
        "pattern": "Random\\(\\)",
        "code": "Random()",
        "severity": "MEDIUM",
        "description": "Insecure random number generation - potential for predictable values",
        "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Testing/test/HttpClientSlimTest.cs",
        "line": 74,
        "type": "insecure_random",
        "pattern": "Random\\(.*\\)",
        "code": "Random()",
        "severity": "MEDIUM",
        "description": "Insecure random number generation - potential for predictable values",
        "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Components/benchmarkapps/Wasm.Performance/TestApp/Person.cs",
        "line": 20,
        "type": "insecure_random",
        "pattern": "Random\\(.*\\)",
        "code": "Random(0)",
        "severity": "MEDIUM",
        "description": "Insecure random number generation - potential for predictable values",
        "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Components/Server/test/Circuits/RemoteJSDataStreamTest.cs",
        "line": 52,
        "type": "insecure_random",
        "pattern": "Random\\(\\)",
        "code": "Random()",
        "severity": "MEDIUM",
        "description": "Insecure random number generation - potential for predictable values",
        "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Components/Server/test/Circuits/RemoteJSDataStreamTest.cs",
        "line": 80,
        "type": "insecure_random",
        "pattern": "Random\\(\\)",
        "code": "Random()",
        "severity": "MEDIUM",
        "description": "Insecure random number generation - potential for predictable values",
        "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Components/Server/test/Circuits/RemoteJSDataStreamTest.cs",
        "line": 52,
        "type": "insecure_random",
        "pattern": "Random\\(.*\\)",
        "code": "Random()",
        "severity": "MEDIUM",
        "description": "Insecure random number generation - potential for predictable values",
        "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Components/Server/test/Circuits/RemoteJSDataStreamTest.cs",
        "line": 80,
        "type": "insecure_random",
        "pattern": "Random\\(.*\\)",
        "code": "Random()",
        "severity": "MEDIUM",
        "description": "Insecure random number generation - potential for predictable values",
        "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Components/Server/test/Circuits/CircuitActivitySourceTest.cs",
        "line": 44,
        "type": "insecure_random",
        "pattern": "Random\\(\\)",
        "code": "Random()",
        "severity": "MEDIUM",
        "description": "Insecure random number generation - potential for predictable values",
        "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Components/Server/test/Circuits/CircuitActivitySourceTest.cs",
        "line": 44,
        "type": "insecure_random",
        "pattern": "Random\\(\\)",
        "code": "Random()",
        "severity": "MEDIUM",
        "description": "Insecure random number generation - potential for predictable values",
        "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Components/Server/test/Circuits/CircuitActivitySourceTest.cs",
        "line": 44,
        "type": "insecure_random",
        "pattern": "Random\\(.*\\)",
        "code": "Random(), ActivitySpanId.CreateRandom(), ActivityTraceFlags.Recorded)",
        "severity": "MEDIUM",
        "description": "Insecure random number generation - potential for predictable values",
        "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Components/Components/test/ComponentsActivitySourceTest.cs",
        "line": 50,
        "type": "insecure_random",
        "pattern": "Random\\(\\)",
        "code": "Random()",
        "severity": "MEDIUM",
        "description": "Insecure random number generation - potential for predictable values",
        "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Components/Components/test/ComponentsActivitySourceTest.cs",
        "line": 50,
        "type": "insecure_random",
        "pattern": "Random\\(\\)",
        "code": "Random()",
        "severity": "MEDIUM",
        "description": "Insecure random number generation - potential for predictable values",
        "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Components/Components/test/ComponentsActivitySourceTest.cs",
        "line": 50,
        "type": "insecure_random",
        "pattern": "Random\\(.*\\)",
        "code": "Random(), ActivitySpanId.CreateRandom(), ActivityTraceFlags.Recorded), new KeyValuePair<string, object>(\"aspnetcore.components.circuit.id\", \"test-circuit-id\"))",
        "severity": "MEDIUM",
        "description": "Insecure random number generation - potential for predictable values",
        "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/DataProtection/Cryptography.Internal/test/Cng/BCryptUtilTests.cs",
        "line": 32,
        "type": "insecure_random",
        "pattern": "Random\\(.*\\)",
        "code": "Random(pBytes, (uint)sizeof(Guid))",
        "severity": "MEDIUM",
        "description": "Insecure random number generation - potential for predictable values",
        "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/DataProtection/Cryptography.Internal/src/Cng/BCryptUtil.cs",
        "line": 16,
        "type": "insecure_random",
        "pattern": "Random\\(.*\\)",
        "code": "Random(byte* pbBuffer, uint cbBuffer)",
        "severity": "MEDIUM",
        "description": "Insecure random number generation - potential for predictable values",
        "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/DataProtection/samples/KeyManagementSimulator/Program.cs",
        "line": 93,
        "type": "insecure_random",
        "pattern": "Random\\(.*\\)",
        "code": "Random(seed)",
        "severity": "MEDIUM",
        "description": "Insecure random number generation - potential for predictable values",
        "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/DataProtection/samples/KeyManagementSimulator/Program.cs",
        "line": 94,
        "type": "insecure_random",
        "pattern": "Random\\(.*\\)",
        "code": "Random(productRandom.Next())",
        "severity": "MEDIUM",
        "description": "Insecure random number generation - potential for predictable values",
        "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/test/Microsoft.AspNetCore.DataProtection.Tests/SecretTests.cs",
        "line": 160,
        "type": "insecure_random",
        "pattern": "Random\\(.*\\)",
        "code": "Random(0)",
        "severity": "MEDIUM",
        "description": "Insecure random number generation - potential for predictable values",
        "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/test/Microsoft.AspNetCore.DataProtection.Tests/SecretTests.cs",
        "line": 170,
        "type": "insecure_random",
        "pattern": "Random\\(.*\\)",
        "code": "Random(32)",
        "severity": "MEDIUM",
        "description": "Insecure random number generation - potential for predictable values",
        "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/test/Microsoft.AspNetCore.DataProtection.Tests/SecretTests.cs",
        "line": 185,
        "type": "insecure_random",
        "pattern": "Random\\(.*\\)",
        "code": "Random(31)",
        "severity": "MEDIUM",
        "description": "Insecure random number generation - potential for predictable values",
        "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/test/Microsoft.AspNetCore.DataProtection.Tests/SecretTests.cs",
        "line": 201,
        "type": "insecure_random",
        "pattern": "Random\\(.*\\)",
        "code": "Random(16)",
        "severity": "MEDIUM",
        "description": "Insecure random number generation - potential for predictable values",
        "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/test/Microsoft.AspNetCore.DataProtection.Tests/SecretTests.cs",
        "line": 214,
        "type": "insecure_random",
        "pattern": "Random\\(.*\\)",
        "code": "Random(16)",
        "severity": "MEDIUM",
        "description": "Insecure random number generation - potential for predictable values",
        "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/test/Microsoft.AspNetCore.DataProtection.Tests/SecretTests.cs",
        "line": 226,
        "type": "insecure_random",
        "pattern": "Random\\(.*\\)",
        "code": "Random(16)",
        "severity": "MEDIUM",
        "description": "Insecure random number generation - potential for predictable values",
        "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/test/Microsoft.AspNetCore.DataProtection.Tests/SecretTests.cs",
        "line": 238,
        "type": "insecure_random",
        "pattern": "Random\\(.*\\)",
        "code": "Random(16)",
        "severity": "MEDIUM",
        "description": "Insecure random number generation - potential for predictable values",
        "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/test/Microsoft.AspNetCore.DataProtection.Tests/SecretTests.cs",
        "line": 255,
        "type": "insecure_random",
        "pattern": "Random\\(.*\\)",
        "code": "Random(16)",
        "severity": "MEDIUM",
        "description": "Insecure random number generation - potential for predictable values",
        "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/test/Microsoft.AspNetCore.DataProtection.Tests/SequentialGenRandom.cs",
        "line": 14,
        "type": "insecure_random",
        "pattern": "Random\\(.*\\)",
        "code": "Random(int numBytes)",
        "severity": "MEDIUM",
        "description": "Insecure random number generation - potential for predictable values",
        "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/test/Microsoft.AspNetCore.DataProtection.Tests/SequentialGenRandom.cs",
        "line": 24,
        "type": "insecure_random",
        "pattern": "Random\\(.*\\)",
        "code": "Random(byte* pbBuffer, uint cbBuffer)",
        "severity": "MEDIUM",
        "description": "Insecure random number generation - potential for predictable values",
        "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/test/Microsoft.AspNetCore.DataProtection.Tests/SequentialGenRandom.cs",
        "line": 32,
        "type": "insecure_random",
        "pattern": "Random\\(.*\\)",
        "code": "Random(Span<byte> target)",
        "severity": "MEDIUM",
        "description": "Insecure random number generation - potential for predictable values",
        "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/test/Microsoft.AspNetCore.DataProtection.Tests/Managed/ManagedAuthenticatedEncryptorTests.cs",
        "line": 86,
        "type": "insecure_random",
        "pattern": "Random\\(\\)",
        "code": "Random()",
        "severity": "MEDIUM",
        "description": "Insecure random number generation - potential for predictable values",
        "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/test/Microsoft.AspNetCore.DataProtection.Tests/Managed/ManagedAuthenticatedEncryptorTests.cs",
        "line": 86,
        "type": "insecure_random",
        "pattern": "Random\\(.*\\)",
        "code": "Random())",
        "severity": "MEDIUM",
        "description": "Insecure random number generation - potential for predictable values",
        "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/test/Microsoft.AspNetCore.DataProtection.Tests/AuthenticatedEncryption/ConfigurationModel/AuthenticatedEncryptorDescriptorTests.cs",
        "line": 36,
        "type": "insecure_random",
        "pattern": "Random\\(.*\\)",
        "code": "Random(512 / 8)",
        "severity": "MEDIUM",
        "description": "Insecure random number generation - potential for predictable values",
        "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/test/Microsoft.AspNetCore.DataProtection.Tests/AuthenticatedEncryption/ConfigurationModel/AuthenticatedEncryptorDescriptorTests.cs",
        "line": 63,
        "type": "insecure_random",
        "pattern": "Random\\(.*\\)",
        "code": "Random(512 / 8)",
        "severity": "MEDIUM",
        "description": "Insecure random number generation - potential for predictable values",
        "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/test/Microsoft.AspNetCore.DataProtection.Tests/AuthenticatedEncryption/ConfigurationModel/AuthenticatedEncryptorDescriptorTests.cs",
        "line": 89,
        "type": "insecure_random",
        "pattern": "Random\\(.*\\)",
        "code": "Random(512 / 8)",
        "severity": "MEDIUM",
        "description": "Insecure random number generation - potential for predictable values",
        "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/test/Microsoft.AspNetCore.DataProtection.Tests/AuthenticatedEncryption/ConfigurationModel/AuthenticatedEncryptorDescriptorTests.cs",
        "line": 126,
        "type": "insecure_random",
        "pattern": "Random\\(.*\\)",
        "code": "Random(512 / 8)",
        "severity": "MEDIUM",
        "description": "Insecure random number generation - potential for predictable values",
        "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/test/Microsoft.AspNetCore.DataProtection.Tests/Cng/CbcAuthenticatedEncryptorTests.cs",
        "line": 92,
        "type": "insecure_random",
        "pattern": "Random\\(\\)",
        "code": "Random()",
        "severity": "MEDIUM",
        "description": "Insecure random number generation - potential for predictable values",
        "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/test/Microsoft.AspNetCore.DataProtection.Tests/Cng/CbcAuthenticatedEncryptorTests.cs",
        "line": 92,
        "type": "insecure_random",
        "pattern": "Random\\(.*\\)",
        "code": "Random())",
        "severity": "MEDIUM",
        "description": "Insecure random number generation - potential for predictable values",
        "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/test/Microsoft.AspNetCore.DataProtection.Tests/Cng/GcmAuthenticatedEncryptorTests.cs",
        "line": 82,
        "type": "insecure_random",
        "pattern": "Random\\(\\)",
        "code": "Random()",
        "severity": "MEDIUM",
        "description": "Insecure random number generation - potential for predictable values",
        "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/test/Microsoft.AspNetCore.DataProtection.Tests/Cng/GcmAuthenticatedEncryptorTests.cs",
        "line": 82,
        "type": "insecure_random",
        "pattern": "Random\\(.*\\)",
        "code": "Random())",
        "severity": "MEDIUM",
        "description": "Insecure random number generation - potential for predictable values",
        "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/src/Secret.cs",
        "line": 165,
        "type": "insecure_random",
        "pattern": "Random\\(.*\\)",
        "code": "Random(int numBytes)",
        "severity": "MEDIUM",
        "description": "Insecure random number generation - potential for predictable values",
        "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/src/Secret.cs",
        "line": 182,
        "type": "insecure_random",
        "pattern": "Random\\(.*\\)",
        "code": "Random(numBytes))",
        "severity": "MEDIUM",
        "description": "Insecure random number generation - potential for predictable values",
        "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/src/Secret.cs",
        "line": 190,
        "type": "insecure_random",
        "pattern": "Random\\(.*\\)",
        "code": "Random(pbBytes, (uint)numBytes)",
        "severity": "MEDIUM",
        "description": "Insecure random number generation - potential for predictable values",
        "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/src/Managed/AesGcmAuthenticatedEncryptor.cs",
        "line": 168,
        "type": "insecure_random",
        "pattern": "Random\\(.*\\)",
        "code": "Random(KEY_MODIFIER_SIZE_IN_BYTES)",
        "severity": "MEDIUM",
        "description": "Insecure random number generation - potential for predictable values",
        "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/src/Managed/AesGcmAuthenticatedEncryptor.cs",
        "line": 169,
        "type": "insecure_random",
        "pattern": "Random\\(.*\\)",
        "code": "Random(NONCE_SIZE_IN_BYTES)",
        "severity": "MEDIUM",
        "description": "Insecure random number generation - potential for predictable values",
        "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/src/Managed/IManagedGenRandom.cs",
        "line": 10,
        "type": "insecure_random",
        "pattern": "Random\\(.*\\)",
        "code": "Random(int numBytes)",
        "severity": "MEDIUM",
        "description": "Insecure random number generation - potential for predictable values",
        "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/src/Managed/IManagedGenRandom.cs",
        "line": 13,
        "type": "insecure_random",
        "pattern": "Random\\(.*\\)",
        "code": "Random(Span<byte> target)",
        "severity": "MEDIUM",
        "description": "Insecure random number generation - potential for predictable values",
        "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/src/Managed/ManagedAuthenticatedEncryptor.cs",
        "line": 345,
        "type": "insecure_random",
        "pattern": "Random\\(.*\\)",
        "code": "Random(keyModifier)",
        "severity": "MEDIUM",
        "description": "Insecure random number generation - potential for predictable values",
        "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/src/Managed/ManagedAuthenticatedEncryptor.cs",
        "line": 347,
        "type": "insecure_random",
        "pattern": "Random\\(.*\\)",
        "code": "Random(keyModifierLength)",
        "severity": "MEDIUM",
        "description": "Insecure random number generation - potential for predictable values",
        "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/src/Managed/ManagedAuthenticatedEncryptor.cs",
        "line": 392,
        "type": "insecure_random",
        "pattern": "Random\\(.*\\)",
        "code": "Random(iv)",
        "severity": "MEDIUM",
        "description": "Insecure random number generation - potential for predictable values",
        "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/src/Managed/ManagedAuthenticatedEncryptor.cs",
        "line": 398,
        "type": "insecure_random",
        "pattern": "Random\\(.*\\)",
        "code": "Random(_symmetricAlgorithmBlockSizeInBytes)",
        "severity": "MEDIUM",
        "description": "Insecure random number generation - potential for predictable values",
        "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/src/Managed/ManagedGenRandomImpl.cs",
        "line": 21,
        "type": "insecure_random",
        "pattern": "Random\\(.*\\)",
        "code": "Random(Span<byte> target) => RandomNumberGenerator.Fill(target)",
        "severity": "MEDIUM",
        "description": "Insecure random number generation - potential for predictable values",
        "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/src/Managed/ManagedGenRandomImpl.cs",
        "line": 24,
        "type": "insecure_random",
        "pattern": "Random\\(.*\\)",
        "code": "Random(int numBytes)",
        "severity": "MEDIUM",
        "description": "Insecure random number generation - potential for predictable values",
        "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/src/KeyManagement/KeyRingProvider.cs",
        "line": 67,
        "type": "insecure_random",
        "pattern": "Random\\(\\)",
        "code": "Random()",
        "severity": "MEDIUM",
        "description": "Insecure random number generation - potential for predictable values",
        "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/src/KeyManagement/KeyRingProvider.cs",
        "line": 67,
        "type": "insecure_random",
        "pattern": "Random\\(.*\\)",
        "code": "Random()",
        "severity": "MEDIUM",
        "description": "Insecure random number generation - potential for predictable values",
        "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/src/AuthenticatedEncryption/ConfigurationModel/AuthenticatedEncryptorConfiguration.cs",
        "line": 35,
        "type": "insecure_random",
        "pattern": "Random\\(.*\\)",
        "code": "Random(KDK_SIZE_IN_BYTES))",
        "severity": "MEDIUM",
        "description": "Insecure random number generation - potential for predictable values",
        "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/src/AuthenticatedEncryption/ConfigurationModel/AuthenticatedEncryptorConfiguration.cs",
        "line": 47,
        "type": "insecure_random",
        "pattern": "Random\\(.*\\)",
        "code": "Random(512 / 8)",
        "severity": "MEDIUM",
        "description": "Insecure random number generation - potential for predictable values",
        "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/src/AuthenticatedEncryption/ConfigurationModel/CngGcmAuthenticatedEncryptorConfiguration.cs",
        "line": 56,
        "type": "insecure_random",
        "pattern": "Random\\(.*\\)",
        "code": "Random(KDK_SIZE_IN_BYTES))",
        "severity": "MEDIUM",
        "description": "Insecure random number generation - potential for predictable values",
        "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/src/AuthenticatedEncryption/ConfigurationModel/CngGcmAuthenticatedEncryptorConfiguration.cs",
        "line": 73,
        "type": "insecure_random",
        "pattern": "Random\\(.*\\)",
        "code": "Random(512 / 8)",
        "severity": "MEDIUM",
        "description": "Insecure random number generation - potential for predictable values",
        "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/src/AuthenticatedEncryption/ConfigurationModel/CngCbcAuthenticatedEncryptorConfiguration.cs",
        "line": 80,
        "type": "insecure_random",
        "pattern": "Random\\(.*\\)",
        "code": "Random(KDK_SIZE_IN_BYTES))",
        "severity": "MEDIUM",
        "description": "Insecure random number generation - potential for predictable values",
        "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/src/AuthenticatedEncryption/ConfigurationModel/CngCbcAuthenticatedEncryptorConfiguration.cs",
        "line": 97,
        "type": "insecure_random",
        "pattern": "Random\\(.*\\)",
        "code": "Random(512 / 8)",
        "severity": "MEDIUM",
        "description": "Insecure random number generation - potential for predictable values",
        "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/src/AuthenticatedEncryption/ConfigurationModel/ManagedAuthenticatedEncryptorConfiguration.cs",
        "line": 59,
        "type": "insecure_random",
        "pattern": "Random\\(.*\\)",
        "code": "Random(KDK_SIZE_IN_BYTES))",
        "severity": "MEDIUM",
        "description": "Insecure random number generation - potential for predictable values",
        "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/src/AuthenticatedEncryption/ConfigurationModel/ManagedAuthenticatedEncryptorConfiguration.cs",
        "line": 76,
        "type": "insecure_random",
        "pattern": "Random\\(.*\\)",
        "code": "Random(512 / 8)",
        "severity": "MEDIUM",
        "description": "Insecure random number generation - potential for predictable values",
        "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/src/Cng/CngGcmAuthenticatedEncryptor.cs",
        "line": 247,
        "type": "insecure_random",
        "pattern": "Random\\(.*\\)",
        "code": "Random(pbKeyModifier, KEY_MODIFIER_SIZE_IN_BYTES + NONCE_SIZE_IN_BYTES)",
        "severity": "MEDIUM",
        "description": "Insecure random number generation - potential for predictable values",
        "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/src/Cng/CbcAuthenticatedEncryptor.cs",
        "line": 314,
        "type": "insecure_random",
        "pattern": "Random\\(.*\\)",
        "code": "Random(pbKeyModifierAndIV, cbKeyModifierAndIV)",
        "severity": "MEDIUM",
        "description": "Insecure random number generation - potential for predictable values",
        "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/src/Cng/IBCryptGenRandom.cs",
        "line": 8,
        "type": "insecure_random",
        "pattern": "Random\\(.*\\)",
        "code": "Random(byte* pbBuffer, uint cbBuffer)",
        "severity": "MEDIUM",
        "description": "Insecure random number generation - potential for predictable values",
        "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/src/Cng/BCryptGenRandomImpl.cs",
        "line": 16,
        "type": "insecure_random",
        "pattern": "Random\\(.*\\)",
        "code": "Random(byte* pbBuffer, uint cbBuffer)",
        "severity": "MEDIUM",
        "description": "Insecure random number generation - potential for predictable values",
        "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/src/Cng/BCryptGenRandomImpl.cs",
        "line": 18,
        "type": "insecure_random",
        "pattern": "Random\\(.*\\)",
        "code": "Random(pbBuffer, cbBuffer)",
        "severity": "MEDIUM",
        "description": "Insecure random number generation - potential for predictable values",
        "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Caching/perf/MicroBenchmarks/Microsoft.Extensions.Caching.MicroBenchmarks/DistributedCacheBenchmarks.cs",
        "line": 20,
        "type": "insecure_random",
        "pattern": "Random\\(\\)",
        "code": "Random()",
        "severity": "MEDIUM",
        "description": "Insecure random number generation - potential for predictable values",
        "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Caching/perf/MicroBenchmarks/Microsoft.Extensions.Caching.MicroBenchmarks/DistributedCacheBenchmarks.cs",
        "line": 117,
        "type": "insecure_random",
        "pattern": "Random\\(\\)",
        "code": "Random()",
        "severity": "MEDIUM",
        "description": "Insecure random number generation - potential for predictable values",
        "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Caching/perf/MicroBenchmarks/Microsoft.Extensions.Caching.MicroBenchmarks/DistributedCacheBenchmarks.cs",
        "line": 128,
        "type": "insecure_random",
        "pattern": "Random\\(\\)",
        "code": "Random()",
        "severity": "MEDIUM",
        "description": "Insecure random number generation - potential for predictable values",
        "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Caching/perf/MicroBenchmarks/Microsoft.Extensions.Caching.MicroBenchmarks/DistributedCacheBenchmarks.cs",
        "line": 20,
        "type": "insecure_random",
        "pattern": "Random\\(.*\\)",
        "code": "Random()",
        "severity": "MEDIUM",
        "description": "Insecure random number generation - potential for predictable values",
        "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Caching/perf/MicroBenchmarks/Microsoft.Extensions.Caching.MicroBenchmarks/DistributedCacheBenchmarks.cs",
        "line": 117,
        "type": "insecure_random",
        "pattern": "Random\\(.*\\)",
        "code": "Random()",
        "severity": "MEDIUM",
        "description": "Insecure random number generation - potential for predictable values",
        "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Caching/perf/MicroBenchmarks/Microsoft.Extensions.Caching.MicroBenchmarks/DistributedCacheBenchmarks.cs",
        "line": 128,
        "type": "insecure_random",
        "pattern": "Random\\(.*\\)",
        "code": "Random()",
        "severity": "MEDIUM",
        "description": "Insecure random number generation - potential for predictable values",
        "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Caching/perf/MicroBenchmarks/Microsoft.Extensions.Caching.MicroBenchmarks/Program.cs",
        "line": 18,
        "type": "insecure_random",
        "pattern": "Random\\(\\)",
        "code": "Random()",
        "severity": "MEDIUM",
        "description": "Insecure random number generation - potential for predictable values",
        "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Caching/perf/MicroBenchmarks/Microsoft.Extensions.Caching.MicroBenchmarks/Program.cs",
        "line": 22,
        "type": "insecure_random",
        "pattern": "Random\\(\\)",
        "code": "Random()",
        "severity": "MEDIUM",
        "description": "Insecure random number generation - potential for predictable values",
        "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Caching/perf/MicroBenchmarks/Microsoft.Extensions.Caching.MicroBenchmarks/Program.cs",
        "line": 34,
        "type": "insecure_random",
        "pattern": "Random\\(\\)",
        "code": "Random()",
        "severity": "MEDIUM",
        "description": "Insecure random number generation - potential for predictable values",
        "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Caching/perf/MicroBenchmarks/Microsoft.Extensions.Caching.MicroBenchmarks/Program.cs",
        "line": 38,
        "type": "insecure_random",
        "pattern": "Random\\(\\)",
        "code": "Random()",
        "severity": "MEDIUM",
        "description": "Insecure random number generation - potential for predictable values",
        "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Caching/perf/MicroBenchmarks/Microsoft.Extensions.Caching.MicroBenchmarks/Program.cs",
        "line": 18,
        "type": "insecure_random",
        "pattern": "Random\\(.*\\)",
        "code": "Random())",
        "severity": "MEDIUM",
        "description": "Insecure random number generation - potential for predictable values",
        "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Caching/perf/MicroBenchmarks/Microsoft.Extensions.Caching.MicroBenchmarks/Program.cs",
        "line": 22,
        "type": "insecure_random",
        "pattern": "Random\\(.*\\)",
        "code": "Random())",
        "severity": "MEDIUM",
        "description": "Insecure random number generation - potential for predictable values",
        "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Caching/perf/MicroBenchmarks/Microsoft.Extensions.Caching.MicroBenchmarks/Program.cs",
        "line": 34,
        "type": "insecure_random",
        "pattern": "Random\\(.*\\)",
        "code": "Random())",
        "severity": "MEDIUM",
        "description": "Insecure random number generation - potential for predictable values",
        "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Caching/perf/MicroBenchmarks/Microsoft.Extensions.Caching.MicroBenchmarks/Program.cs",
        "line": 38,
        "type": "insecure_random",
        "pattern": "Random\\(.*\\)",
        "code": "Random())",
        "severity": "MEDIUM",
        "description": "Insecure random number generation - potential for predictable values",
        "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/Kestrel/Core/test/BufferWriterTests.cs",
        "line": 219,
        "type": "insecure_random",
        "pattern": "Random\\(.*\\)",
        "code": "Random(length).NextBytes(data)",
        "severity": "MEDIUM",
        "description": "Insecure random number generation - potential for predictable values",
        "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/Kestrel/stress/Program.cs",
        "line": 636,
        "type": "insecure_random",
        "pattern": "Random\\(.*\\)",
        "code": "Random(Combine(seed, taskNum))",
        "severity": "MEDIUM",
        "description": "Insecure random number generation - potential for predictable values",
        "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
      }
    ],
    "path_traversal": [
      {
        "file": "/tmp/aspnetcore_analysis/src/Framework/test/SharedFxTests.cs",
        "line": 327,
        "type": "path_traversal",
        "pattern": "Directory\\.GetFiles\\(.*\\+",
        "code": "Directory.GetFiles(packageFolder, \"Microsoft.AspNetCore.App.Runtime.*-*.\" + TestData.GetSharedFxVersion() +",
        "severity": "HIGH",
        "description": "Path Traversal vulnerability - potential for accessing unauthorized files",
        "recommendation": "Validate file paths, use Path.GetFullPath() for validation"
      }
    ],
    "command_injection": [
      {
        "file": "/tmp/aspnetcore_analysis/src/Shared/CertificateGeneration/MacOSCertificateManager.cs",
        "line": 104,
        "type": "command_injection",
        "pattern": "Process\\.Start\\(.*\\+",
        "code": "Process.Start(MacOSTrustCertificateCommandLine, MacOSTrustCertificateCommandLineArguments +",
        "severity": "CRITICAL",
        "description": "Command Injection vulnerability - potential for arbitrary command execution",
        "recommendation": "Validate and sanitize all user input, use ProcessStartInfo safely"
      }
    ],
    "pinvoke": [
      {
        "file": "/tmp/aspnetcore_analysis/src/Testing/src/DumpCollector/DumpCollector.Windows.cs",
        "line": 33,
        "type": "pinvoke",
        "pattern": "DllImport",
        "code": "[DllImport(\"Dbghelp.dll\")]",
        "severity": "HIGH",
        "description": "P/Invoke call detected - potential security risk",
        "recommendation": "Validate all P/Invoke calls and ensure proper input validation"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/DataProtection/Cryptography.Internal/src/UnsafeNativeMethods.cs",
        "line": 37,
        "type": "pinvoke",
        "pattern": "DllImport",
        "code": "[DllImport(BCRYPT_LIB)]",
        "severity": "HIGH",
        "description": "P/Invoke call detected - potential security risk",
        "recommendation": "Validate all P/Invoke calls and ensure proper input validation"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/DataProtection/Cryptography.Internal/src/UnsafeNativeMethods.cs",
        "line": 48,
        "type": "pinvoke",
        "pattern": "DllImport",
        "code": "[DllImport(BCRYPT_LIB)]",
        "severity": "HIGH",
        "description": "P/Invoke call detected - potential security risk",
        "recommendation": "Validate all P/Invoke calls and ensure proper input validation"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/DataProtection/Cryptography.Internal/src/UnsafeNativeMethods.cs",
        "line": 64,
        "type": "pinvoke",
        "pattern": "DllImport",
        "code": "[DllImport(BCRYPT_LIB)]",
        "severity": "HIGH",
        "description": "P/Invoke call detected - potential security risk",
        "recommendation": "Validate all P/Invoke calls and ensure proper input validation"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/DataProtection/Cryptography.Internal/src/UnsafeNativeMethods.cs",
        "line": 83,
        "type": "pinvoke",
        "pattern": "DllImport",
        "code": "[DllImport(BCRYPT_LIB)]",
        "severity": "HIGH",
        "description": "P/Invoke call detected - potential security risk",
        "recommendation": "Validate all P/Invoke calls and ensure proper input validation"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/DataProtection/Cryptography.Internal/src/UnsafeNativeMethods.cs",
        "line": 104,
        "type": "pinvoke",
        "pattern": "DllImport",
        "code": "[DllImport(BCRYPT_LIB)]",
        "severity": "HIGH",
        "description": "P/Invoke call detected - potential security risk",
        "recommendation": "Validate all P/Invoke calls and ensure proper input validation"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/DataProtection/Cryptography.Internal/src/UnsafeNativeMethods.cs",
        "line": 117,
        "type": "pinvoke",
        "pattern": "DllImport",
        "code": "[DllImport(BCRYPT_LIB)]",
        "severity": "HIGH",
        "description": "P/Invoke call detected - potential security risk",
        "recommendation": "Validate all P/Invoke calls and ensure proper input validation"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/DataProtection/Cryptography.Internal/src/UnsafeNativeMethods.cs",
        "line": 127,
        "type": "pinvoke",
        "pattern": "DllImport",
        "code": "[DllImport(BCRYPT_LIB)]",
        "severity": "HIGH",
        "description": "P/Invoke call detected - potential security risk",
        "recommendation": "Validate all P/Invoke calls and ensure proper input validation"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/DataProtection/Cryptography.Internal/src/UnsafeNativeMethods.cs",
        "line": 141,
        "type": "pinvoke",
        "pattern": "DllImport",
        "code": "[DllImport(BCRYPT_LIB)]",
        "severity": "HIGH",
        "description": "P/Invoke call detected - potential security risk",
        "recommendation": "Validate all P/Invoke calls and ensure proper input validation"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/DataProtection/Cryptography.Internal/src/UnsafeNativeMethods.cs",
        "line": 160,
        "type": "pinvoke",
        "pattern": "DllImport",
        "code": "[DllImport(BCRYPT_LIB)]",
        "severity": "HIGH",
        "description": "P/Invoke call detected - potential security risk",
        "recommendation": "Validate all P/Invoke calls and ensure proper input validation"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/DataProtection/Cryptography.Internal/src/UnsafeNativeMethods.cs",
        "line": 173,
        "type": "pinvoke",
        "pattern": "DllImport",
        "code": "[DllImport(BCRYPT_LIB)]",
        "severity": "HIGH",
        "description": "P/Invoke call detected - potential security risk",
        "recommendation": "Validate all P/Invoke calls and ensure proper input validation"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/DataProtection/Cryptography.Internal/src/UnsafeNativeMethods.cs",
        "line": 189,
        "type": "pinvoke",
        "pattern": "DllImport",
        "code": "[DllImport(BCRYPT_LIB)]",
        "severity": "HIGH",
        "description": "P/Invoke call detected - potential security risk",
        "recommendation": "Validate all P/Invoke calls and ensure proper input validation"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/DataProtection/Cryptography.Internal/src/UnsafeNativeMethods.cs",
        "line": 202,
        "type": "pinvoke",
        "pattern": "DllImport",
        "code": "[DllImport(BCRYPT_LIB)]",
        "severity": "HIGH",
        "description": "P/Invoke call detected - potential security risk",
        "recommendation": "Validate all P/Invoke calls and ensure proper input validation"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/DataProtection/Cryptography.Internal/src/UnsafeNativeMethods.cs",
        "line": 217,
        "type": "pinvoke",
        "pattern": "DllImport",
        "code": "[DllImport(BCRYPT_LIB)]",
        "severity": "HIGH",
        "description": "P/Invoke call detected - potential security risk",
        "recommendation": "Validate all P/Invoke calls and ensure proper input validation"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/DataProtection/Cryptography.Internal/src/UnsafeNativeMethods.cs",
        "line": 230,
        "type": "pinvoke",
        "pattern": "DllImport",
        "code": "[DllImport(BCRYPT_LIB)]",
        "severity": "HIGH",
        "description": "P/Invoke call detected - potential security risk",
        "recommendation": "Validate all P/Invoke calls and ensure proper input validation"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/DataProtection/Cryptography.Internal/src/UnsafeNativeMethods.cs",
        "line": 245,
        "type": "pinvoke",
        "pattern": "DllImport",
        "code": "[DllImport(BCRYPT_LIB)]",
        "severity": "HIGH",
        "description": "P/Invoke call detected - potential security risk",
        "recommendation": "Validate all P/Invoke calls and ensure proper input validation"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/DataProtection/Cryptography.Internal/src/UnsafeNativeMethods.cs",
        "line": 258,
        "type": "pinvoke",
        "pattern": "DllImport",
        "code": "[DllImport(BCRYPT_LIB)]",
        "severity": "HIGH",
        "description": "P/Invoke call detected - potential security risk",
        "recommendation": "Validate all P/Invoke calls and ensure proper input validation"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/DataProtection/Cryptography.Internal/src/UnsafeNativeMethods.cs",
        "line": 277,
        "type": "pinvoke",
        "pattern": "DllImport",
        "code": "[DllImport(CRYPT32_LIB, SetLastError = true)]",
        "severity": "HIGH",
        "description": "P/Invoke call detected - potential security risk",
        "recommendation": "Validate all P/Invoke calls and ensure proper input validation"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/DataProtection/Cryptography.Internal/src/UnsafeNativeMethods.cs",
        "line": 294,
        "type": "pinvoke",
        "pattern": "DllImport",
        "code": "[DllImport(CRYPT32_LIB, SetLastError = true)]",
        "severity": "HIGH",
        "description": "P/Invoke call detected - potential security risk",
        "recommendation": "Validate all P/Invoke calls and ensure proper input validation"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/DataProtection/Cryptography.Internal/src/UnsafeNativeMethods.cs",
        "line": 307,
        "type": "pinvoke",
        "pattern": "DllImport",
        "code": "[DllImport(CRYPT32_LIB, SetLastError = true)]",
        "severity": "HIGH",
        "description": "P/Invoke call detected - potential security risk",
        "recommendation": "Validate all P/Invoke calls and ensure proper input validation"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/DataProtection/Cryptography.Internal/src/UnsafeNativeMethods.cs",
        "line": 324,
        "type": "pinvoke",
        "pattern": "DllImport",
        "code": "[DllImport(CRYPT32_LIB, SetLastError = true)]",
        "severity": "HIGH",
        "description": "P/Invoke call detected - potential security risk",
        "recommendation": "Validate all P/Invoke calls and ensure proper input validation"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/DataProtection/Cryptography.Internal/src/UnsafeNativeMethods.cs",
        "line": 337,
        "type": "pinvoke",
        "pattern": "DllImport",
        "code": "[DllImport(CRYPT32_LIB, SetLastError = true)]",
        "severity": "HIGH",
        "description": "P/Invoke call detected - potential security risk",
        "recommendation": "Validate all P/Invoke calls and ensure proper input validation"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/DataProtection/Cryptography.Internal/src/UnsafeNativeMethods.cs",
        "line": 356,
        "type": "pinvoke",
        "pattern": "DllImport",
        "code": "[DllImport(NCRYPT_LIB)]",
        "severity": "HIGH",
        "description": "P/Invoke call detected - potential security risk",
        "recommendation": "Validate all P/Invoke calls and ensure proper input validation"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/DataProtection/Cryptography.Internal/src/UnsafeNativeMethods.cs",
        "line": 366,
        "type": "pinvoke",
        "pattern": "DllImport",
        "code": "[DllImport(NCRYPT_LIB)]",
        "severity": "HIGH",
        "description": "P/Invoke call detected - potential security risk",
        "recommendation": "Validate all P/Invoke calls and ensure proper input validation"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/DataProtection/Cryptography.Internal/src/UnsafeNativeMethods.cs",
        "line": 378,
        "type": "pinvoke",
        "pattern": "DllImport",
        "code": "[DllImport(NCRYPT_LIB)]",
        "severity": "HIGH",
        "description": "P/Invoke call detected - potential security risk",
        "recommendation": "Validate all P/Invoke calls and ensure proper input validation"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/DataProtection/Cryptography.Internal/src/UnsafeNativeMethods.cs",
        "line": 391,
        "type": "pinvoke",
        "pattern": "DllImport",
        "code": "[DllImport(NCRYPT_LIB)]",
        "severity": "HIGH",
        "description": "P/Invoke call detected - potential security risk",
        "recommendation": "Validate all P/Invoke calls and ensure proper input validation"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/DataProtection/Cryptography.Internal/src/UnsafeNativeMethods.cs",
        "line": 408,
        "type": "pinvoke",
        "pattern": "DllImport",
        "code": "[DllImport(NCRYPT_LIB)]",
        "severity": "HIGH",
        "description": "P/Invoke call detected - potential security risk",
        "recommendation": "Validate all P/Invoke calls and ensure proper input validation"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/DataProtection/Cryptography.Internal/src/UnsafeNativeMethods.cs",
        "line": 425,
        "type": "pinvoke",
        "pattern": "DllImport",
        "code": "[DllImport(NCRYPT_LIB)]",
        "severity": "HIGH",
        "description": "P/Invoke call detected - potential security risk",
        "recommendation": "Validate all P/Invoke calls and ensure proper input validation"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/DataProtection/Cryptography.Internal/src/SafeHandles/SafeLibraryHandle.cs",
        "line": 135,
        "type": "pinvoke",
        "pattern": "DllImport",
        "code": "[DllImport(\"kernel32.dll\", EntryPoint = \"FormatMessageW\", SetLastError = true)]",
        "severity": "HIGH",
        "description": "P/Invoke call detected - potential security risk",
        "recommendation": "Validate all P/Invoke calls and ensure proper input validation"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/DataProtection/Cryptography.Internal/src/SafeHandles/SafeLibraryHandle.cs",
        "line": 156,
        "type": "pinvoke",
        "pattern": "DllImport",
        "code": "[DllImport(\"kernel32.dll\")]",
        "severity": "HIGH",
        "description": "P/Invoke call detected - potential security risk",
        "recommendation": "Validate all P/Invoke calls and ensure proper input validation"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/DataProtection/Cryptography.Internal/src/SafeHandles/SafeLibraryHandle.cs",
        "line": 167,
        "type": "pinvoke",
        "pattern": "DllImport",
        "code": "[DllImport(\"kernel32.dll\", EntryPoint = \"GetModuleHandleExW\", SetLastError = true)]",
        "severity": "HIGH",
        "description": "P/Invoke call detected - potential security risk",
        "recommendation": "Validate all P/Invoke calls and ensure proper input validation"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/DataProtection/Cryptography.Internal/src/SafeHandles/SafeLibraryHandle.cs",
        "line": 179,
        "type": "pinvoke",
        "pattern": "DllImport",
        "code": "[DllImport(\"kernel32.dll\", SetLastError = true)]",
        "severity": "HIGH",
        "description": "P/Invoke call detected - potential security risk",
        "recommendation": "Validate all P/Invoke calls and ensure proper input validation"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/DataProtection/Cryptography.Internal/src/SafeHandles/SafeLibraryHandle.cs",
        "line": 190,
        "type": "pinvoke",
        "pattern": "DllImport",
        "code": "[DllImport(\"kernel32.dll\", EntryPoint = \"LoadLibraryExW\", SetLastError = true)]",
        "severity": "HIGH",
        "description": "P/Invoke call detected - potential security risk",
        "recommendation": "Validate all P/Invoke calls and ensure proper input validation"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/samples/TlsFeaturesObserve/HttpSys/HttpSysConfigurator.cs",
        "line": 109,
        "type": "pinvoke",
        "pattern": "DllImport",
        "code": "[DllImport(\"httpapi.dll\", SetLastError = true)]",
        "severity": "HIGH",
        "description": "P/Invoke call detected - potential security risk",
        "recommendation": "Validate all P/Invoke calls and ensure proper input validation"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/samples/TlsFeaturesObserve/HttpSys/HttpSysConfigurator.cs",
        "line": 115,
        "type": "pinvoke",
        "pattern": "DllImport",
        "code": "[DllImport(\"httpapi.dll\", SetLastError = true)]",
        "severity": "HIGH",
        "description": "P/Invoke call detected - potential security risk",
        "recommendation": "Validate all P/Invoke calls and ensure proper input validation"
      }
    ],
    "weak_crypto": [
      {
        "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/test/Microsoft.AspNetCore.DataProtection.Tests/XmlEncryption/CertificateXmlEncryptionTests.cs",
        "line": 20,
        "type": "weak_crypto",
        "pattern": "DES\\.Create\\(\\)",
        "code": "DES.Create()",
        "severity": "MEDIUM",
        "description": "Weak cryptographic algorithm - potential for data compromise",
        "recommendation": "Use SHA-256 or stronger algorithms, AES for encryption"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/test/Microsoft.AspNetCore.DataProtection.Tests/XmlEncryption/CertificateXmlEncryptionTests.cs",
        "line": 20,
        "type": "weak_crypto",
        "pattern": "TripleDES\\.Create\\(\\)",
        "code": "TripleDES.Create()",
        "severity": "MEDIUM",
        "description": "Weak cryptographic algorithm - potential for data compromise",
        "recommendation": "Use SHA-256 or stronger algorithms, AES for encryption"
      }
    ],
    "config_security": [
      {
        "file": "/tmp/aspnetcore_analysis/src/Middleware/WebSockets/samples/AutobahnTestAppAspNet4/Web.config",
        "line": 8,
        "type": "config_security",
        "pattern": "debug\\s*=\\s*[\"\\']true[\"\\']",
        "code": "debug=\"true\"",
        "severity": "MEDIUM",
        "description": "Security issue in web.config",
        "recommendation": "Review configuration security settings"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Middleware/WebSockets/samples/AutobahnTestAppAspNet4/Web.config",
        "line": 8,
        "type": "config_security",
        "pattern": "compilation.*debug\\s*=\\s*[\"\\']true[\"\\']",
        "code": "compilation debug=\"true\"",
        "severity": "MEDIUM",
        "description": "Security issue in web.config",
        "recommendation": "Review configuration security settings"
      }
    ],
    "unsafe_blocks_allowed": [
      {
        "file": "/tmp/aspnetcore_analysis/eng/tools/HelixTestRunner/HelixTestRunner.csproj",
        "line": 0,
        "type": "unsafe_blocks_allowed",
        "pattern": "AllowUnsafeBlocks>true",
        "code": "<AllowUnsafeBlocks>true</AllowUnsafeBlocks>",
        "severity": "HIGH",
        "description": "Unsafe code blocks are allowed",
        "recommendation": "Disable unsafe blocks unless absolutely necessary"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Middleware/ResponseCaching/src/Microsoft.AspNetCore.ResponseCaching.csproj",
        "line": 0,
        "type": "unsafe_blocks_allowed",
        "pattern": "AllowUnsafeBlocks>true",
        "code": "<AllowUnsafeBlocks>true</AllowUnsafeBlocks>",
        "severity": "HIGH",
        "description": "Unsafe code blocks are allowed",
        "recommendation": "Disable unsafe blocks unless absolutely necessary"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Middleware/WebSockets/src/Microsoft.AspNetCore.WebSockets.csproj",
        "line": 0,
        "type": "unsafe_blocks_allowed",
        "pattern": "AllowUnsafeBlocks>true",
        "code": "<AllowUnsafeBlocks>true</AllowUnsafeBlocks>",
        "severity": "HIGH",
        "description": "Unsafe code blocks are allowed",
        "recommendation": "Disable unsafe blocks unless absolutely necessary"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Middleware/HttpLogging/src/Microsoft.AspNetCore.HttpLogging.csproj",
        "line": 0,
        "type": "unsafe_blocks_allowed",
        "pattern": "AllowUnsafeBlocks>true",
        "code": "<AllowUnsafeBlocks>true</AllowUnsafeBlocks>",
        "severity": "HIGH",
        "description": "Unsafe code blocks are allowed",
        "recommendation": "Disable unsafe blocks unless absolutely necessary"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Middleware/Session/src/Microsoft.AspNetCore.Session.csproj",
        "line": 0,
        "type": "unsafe_blocks_allowed",
        "pattern": "AllowUnsafeBlocks>true",
        "code": "<AllowUnsafeBlocks>true</AllowUnsafeBlocks>",
        "severity": "HIGH",
        "description": "Unsafe code blocks are allowed",
        "recommendation": "Disable unsafe blocks unless absolutely necessary"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Razor/Razor/src/Microsoft.AspNetCore.Razor.csproj",
        "line": 0,
        "type": "unsafe_blocks_allowed",
        "pattern": "AllowUnsafeBlocks>true",
        "code": "<AllowUnsafeBlocks>true</AllowUnsafeBlocks>",
        "severity": "HIGH",
        "description": "Unsafe code blocks are allowed",
        "recommendation": "Disable unsafe blocks unless absolutely necessary"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/ObjectPool/perf/Microbenchmarks/Microsoft.Extensions.ObjectPool.Microbenchmark.csproj",
        "line": 0,
        "type": "unsafe_blocks_allowed",
        "pattern": "AllowUnsafeBlocks>true",
        "code": "<AllowUnsafeBlocks>true</AllowUnsafeBlocks>",
        "severity": "HIGH",
        "description": "Unsafe code blocks are allowed",
        "recommendation": "Disable unsafe blocks unless absolutely necessary"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/TagHelpersWebSite/TagHelpersWebSite.csproj",
        "line": 0,
        "type": "unsafe_blocks_allowed",
        "pattern": "AllowUnsafeBlocks>true",
        "code": "<AllowUnsafeBlocks>true</AllowUnsafeBlocks>",
        "severity": "HIGH",
        "description": "Unsafe code blocks are allowed",
        "recommendation": "Disable unsafe blocks unless absolutely necessary"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.ViewFeatures/src/Microsoft.AspNetCore.Mvc.ViewFeatures.csproj",
        "line": 0,
        "type": "unsafe_blocks_allowed",
        "pattern": "AllowUnsafeBlocks>true",
        "code": "<AllowUnsafeBlocks>true</AllowUnsafeBlocks>",
        "severity": "HIGH",
        "description": "Unsafe code blocks are allowed",
        "recommendation": "Disable unsafe blocks unless absolutely necessary"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Mvc/perf/Microbenchmarks/Microsoft.AspNetCore.Mvc/Microsoft.AspNetCore.Mvc.Microbenchmarks.csproj",
        "line": 0,
        "type": "unsafe_blocks_allowed",
        "pattern": "AllowUnsafeBlocks>true",
        "code": "<AllowUnsafeBlocks>true</AllowUnsafeBlocks>",
        "severity": "HIGH",
        "description": "Unsafe code blocks are allowed",
        "recommendation": "Disable unsafe blocks unless absolutely necessary"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Grpc/JsonTranscoding/perf/Microsoft.AspNetCore.Grpc.Microbenchmarks/Microsoft.AspNetCore.Grpc.Microbenchmarks.csproj",
        "line": 0,
        "type": "unsafe_blocks_allowed",
        "pattern": "AllowUnsafeBlocks>true",
        "code": "<AllowUnsafeBlocks>true</AllowUnsafeBlocks>",
        "severity": "HIGH",
        "description": "Unsafe code blocks are allowed",
        "recommendation": "Disable unsafe blocks unless absolutely necessary"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Security/perf/Microbenchmarks/Microsoft.AspNetCore.Security.Microbenchmarks.csproj",
        "line": 0,
        "type": "unsafe_blocks_allowed",
        "pattern": "AllowUnsafeBlocks>true",
        "code": "<AllowUnsafeBlocks>true</AllowUnsafeBlocks>",
        "severity": "HIGH",
        "description": "Unsafe code blocks are allowed",
        "recommendation": "Disable unsafe blocks unless absolutely necessary"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Azure/AzureAppServicesIntegration/src/Microsoft.AspNetCore.AzureAppServicesIntegration.csproj",
        "line": 0,
        "type": "unsafe_blocks_allowed",
        "pattern": "AllowUnsafeBlocks>true",
        "code": "<AllowUnsafeBlocks>true</AllowUnsafeBlocks>",
        "severity": "HIGH",
        "description": "Unsafe code blocks are allowed",
        "recommendation": "Disable unsafe blocks unless absolutely necessary"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/SignalR/common/Protocols.Json/src/Microsoft.AspNetCore.SignalR.Protocols.Json.csproj",
        "line": 0,
        "type": "unsafe_blocks_allowed",
        "pattern": "AllowUnsafeBlocks>true",
        "code": "<AllowUnsafeBlocks>true</AllowUnsafeBlocks>",
        "severity": "HIGH",
        "description": "Unsafe code blocks are allowed",
        "recommendation": "Disable unsafe blocks unless absolutely necessary"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/SignalR/common/Http.Connections.Common/src/Microsoft.AspNetCore.Http.Connections.Common.csproj",
        "line": 0,
        "type": "unsafe_blocks_allowed",
        "pattern": "AllowUnsafeBlocks>true",
        "code": "<AllowUnsafeBlocks>true</AllowUnsafeBlocks>",
        "severity": "HIGH",
        "description": "Unsafe code blocks are allowed",
        "recommendation": "Disable unsafe blocks unless absolutely necessary"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/SignalR/common/Protocols.MessagePack/src/Microsoft.AspNetCore.SignalR.Protocols.MessagePack.csproj",
        "line": 0,
        "type": "unsafe_blocks_allowed",
        "pattern": "AllowUnsafeBlocks>true",
        "code": "<AllowUnsafeBlocks>true</AllowUnsafeBlocks>",
        "severity": "HIGH",
        "description": "Unsafe code blocks are allowed",
        "recommendation": "Disable unsafe blocks unless absolutely necessary"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/SignalR/common/SignalR.Common/src/Microsoft.AspNetCore.SignalR.Common.csproj",
        "line": 0,
        "type": "unsafe_blocks_allowed",
        "pattern": "AllowUnsafeBlocks>true",
        "code": "<AllowUnsafeBlocks>true</AllowUnsafeBlocks>",
        "severity": "HIGH",
        "description": "Unsafe code blocks are allowed",
        "recommendation": "Disable unsafe blocks unless absolutely necessary"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/SignalR/common/Http.Connections/src/Microsoft.AspNetCore.Http.Connections.csproj",
        "line": 0,
        "type": "unsafe_blocks_allowed",
        "pattern": "AllowUnsafeBlocks>true",
        "code": "<AllowUnsafeBlocks>true</AllowUnsafeBlocks>",
        "severity": "HIGH",
        "description": "Unsafe code blocks are allowed",
        "recommendation": "Disable unsafe blocks unless absolutely necessary"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/SignalR/common/Protocols.NewtonsoftJson/src/Microsoft.AspNetCore.SignalR.Protocols.NewtonsoftJson.csproj",
        "line": 0,
        "type": "unsafe_blocks_allowed",
        "pattern": "AllowUnsafeBlocks>true",
        "code": "<AllowUnsafeBlocks>true</AllowUnsafeBlocks>",
        "severity": "HIGH",
        "description": "Unsafe code blocks are allowed",
        "recommendation": "Disable unsafe blocks unless absolutely necessary"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/JSInterop/Microsoft.JSInterop/src/Microsoft.JSInterop.csproj",
        "line": 0,
        "type": "unsafe_blocks_allowed",
        "pattern": "AllowUnsafeBlocks>true",
        "code": "<AllowUnsafeBlocks>true</AllowUnsafeBlocks>",
        "severity": "HIGH",
        "description": "Unsafe code blocks are allowed",
        "recommendation": "Disable unsafe blocks unless absolutely necessary"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Shared/test/Shared.Tests/Microsoft.AspNetCore.Shared.Tests.csproj",
        "line": 0,
        "type": "unsafe_blocks_allowed",
        "pattern": "AllowUnsafeBlocks>true",
        "code": "<AllowUnsafeBlocks>true</AllowUnsafeBlocks>",
        "severity": "HIGH",
        "description": "Unsafe code blocks are allowed",
        "recommendation": "Disable unsafe blocks unless absolutely necessary"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/OpenApi/src/Microsoft.AspNetCore.OpenApi.csproj",
        "line": 0,
        "type": "unsafe_blocks_allowed",
        "pattern": "AllowUnsafeBlocks>true",
        "code": "<AllowUnsafeBlocks>true</AllowUnsafeBlocks>",
        "severity": "HIGH",
        "description": "Unsafe code blocks are allowed",
        "recommendation": "Disable unsafe blocks unless absolutely necessary"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Components/Endpoints/src/Microsoft.AspNetCore.Components.Endpoints.csproj",
        "line": 0,
        "type": "unsafe_blocks_allowed",
        "pattern": "AllowUnsafeBlocks>true",
        "code": "<AllowUnsafeBlocks>true</AllowUnsafeBlocks>",
        "severity": "HIGH",
        "description": "Unsafe code blocks are allowed",
        "recommendation": "Disable unsafe blocks unless absolutely necessary"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Components/test/testassets/Components.WasmMinimal/Components.WasmMinimal.csproj",
        "line": 0,
        "type": "unsafe_blocks_allowed",
        "pattern": "AllowUnsafeBlocks>true",
        "code": "<AllowUnsafeBlocks>true</AllowUnsafeBlocks>",
        "severity": "HIGH",
        "description": "Unsafe code blocks are allowed",
        "recommendation": "Disable unsafe blocks unless absolutely necessary"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Components/Server/src/Microsoft.AspNetCore.Components.Server.csproj",
        "line": 0,
        "type": "unsafe_blocks_allowed",
        "pattern": "AllowUnsafeBlocks>true",
        "code": "<AllowUnsafeBlocks>true</AllowUnsafeBlocks>",
        "severity": "HIGH",
        "description": "Unsafe code blocks are allowed",
        "recommendation": "Disable unsafe blocks unless absolutely necessary"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Components/Components/perf/Microsoft.AspNetCore.Components.Performance.csproj",
        "line": 0,
        "type": "unsafe_blocks_allowed",
        "pattern": "AllowUnsafeBlocks>true",
        "code": "<AllowUnsafeBlocks>true</AllowUnsafeBlocks>",
        "severity": "HIGH",
        "description": "Unsafe code blocks are allowed",
        "recommendation": "Disable unsafe blocks unless absolutely necessary"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Components/Components/src/Microsoft.AspNetCore.Components.csproj",
        "line": 0,
        "type": "unsafe_blocks_allowed",
        "pattern": "AllowUnsafeBlocks>true",
        "code": "<AllowUnsafeBlocks>true</AllowUnsafeBlocks>",
        "severity": "HIGH",
        "description": "Unsafe code blocks are allowed",
        "recommendation": "Disable unsafe blocks unless absolutely necessary"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Components/WebAssembly/JSInterop/src/Microsoft.JSInterop.WebAssembly.csproj",
        "line": 0,
        "type": "unsafe_blocks_allowed",
        "pattern": "AllowUnsafeBlocks>true",
        "code": "<AllowUnsafeBlocks>true</AllowUnsafeBlocks>",
        "severity": "HIGH",
        "description": "Unsafe code blocks are allowed",
        "recommendation": "Disable unsafe blocks unless absolutely necessary"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Components/WebAssembly/WebAssembly/src/Microsoft.AspNetCore.Components.WebAssembly.csproj",
        "line": 0,
        "type": "unsafe_blocks_allowed",
        "pattern": "AllowUnsafeBlocks>true",
        "code": "<AllowUnsafeBlocks>true</AllowUnsafeBlocks>",
        "severity": "HIGH",
        "description": "Unsafe code blocks are allowed",
        "recommendation": "Disable unsafe blocks unless absolutely necessary"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Components/WebAssembly/WebAssembly.Authentication/src/Microsoft.AspNetCore.Components.WebAssembly.Authentication.csproj",
        "line": 0,
        "type": "unsafe_blocks_allowed",
        "pattern": "AllowUnsafeBlocks>true",
        "code": "<AllowUnsafeBlocks>true</AllowUnsafeBlocks>",
        "severity": "HIGH",
        "description": "Unsafe code blocks are allowed",
        "recommendation": "Disable unsafe blocks unless absolutely necessary"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/DataProtection/Cryptography.Internal/test/Microsoft.AspNetCore.Cryptography.Internal.Tests.csproj",
        "line": 0,
        "type": "unsafe_blocks_allowed",
        "pattern": "AllowUnsafeBlocks>true",
        "code": "<AllowUnsafeBlocks>true</AllowUnsafeBlocks>",
        "severity": "HIGH",
        "description": "Unsafe code blocks are allowed",
        "recommendation": "Disable unsafe blocks unless absolutely necessary"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/DataProtection/Cryptography.Internal/src/Microsoft.AspNetCore.Cryptography.Internal.csproj",
        "line": 0,
        "type": "unsafe_blocks_allowed",
        "pattern": "AllowUnsafeBlocks>true",
        "code": "<AllowUnsafeBlocks>true</AllowUnsafeBlocks>",
        "severity": "HIGH",
        "description": "Unsafe code blocks are allowed",
        "recommendation": "Disable unsafe blocks unless absolutely necessary"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/DataProtection/EntityFrameworkCore/src/Microsoft.AspNetCore.DataProtection.EntityFrameworkCore.csproj",
        "line": 0,
        "type": "unsafe_blocks_allowed",
        "pattern": "AllowUnsafeBlocks>true",
        "code": "<AllowUnsafeBlocks>true</AllowUnsafeBlocks>",
        "severity": "HIGH",
        "description": "Unsafe code blocks are allowed",
        "recommendation": "Disable unsafe blocks unless absolutely necessary"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/DataProtection/Cryptography.KeyDerivation/test/Microsoft.AspNetCore.Cryptography.KeyDerivation.Tests.csproj",
        "line": 0,
        "type": "unsafe_blocks_allowed",
        "pattern": "AllowUnsafeBlocks>true",
        "code": "<AllowUnsafeBlocks>true</AllowUnsafeBlocks>",
        "severity": "HIGH",
        "description": "Unsafe code blocks are allowed",
        "recommendation": "Disable unsafe blocks unless absolutely necessary"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/DataProtection/Cryptography.KeyDerivation/src/Microsoft.AspNetCore.Cryptography.KeyDerivation.csproj",
        "line": 0,
        "type": "unsafe_blocks_allowed",
        "pattern": "AllowUnsafeBlocks>true",
        "code": "<AllowUnsafeBlocks>true</AllowUnsafeBlocks>",
        "severity": "HIGH",
        "description": "Unsafe code blocks are allowed",
        "recommendation": "Disable unsafe blocks unless absolutely necessary"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/test/Microsoft.AspNetCore.DataProtection.Tests/Microsoft.AspNetCore.DataProtection.Tests.csproj",
        "line": 0,
        "type": "unsafe_blocks_allowed",
        "pattern": "AllowUnsafeBlocks>true",
        "code": "<AllowUnsafeBlocks>true</AllowUnsafeBlocks>",
        "severity": "HIGH",
        "description": "Unsafe code blocks are allowed",
        "recommendation": "Disable unsafe blocks unless absolutely necessary"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/src/Microsoft.AspNetCore.DataProtection.csproj",
        "line": 0,
        "type": "unsafe_blocks_allowed",
        "pattern": "AllowUnsafeBlocks>true",
        "code": "<AllowUnsafeBlocks>true</AllowUnsafeBlocks>",
        "severity": "HIGH",
        "description": "Unsafe code blocks are allowed",
        "recommendation": "Disable unsafe blocks unless absolutely necessary"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/DataProtection/StackExchangeRedis/src/Microsoft.AspNetCore.DataProtection.StackExchangeRedis.csproj",
        "line": 0,
        "type": "unsafe_blocks_allowed",
        "pattern": "AllowUnsafeBlocks>true",
        "code": "<AllowUnsafeBlocks>true</AllowUnsafeBlocks>",
        "severity": "HIGH",
        "description": "Unsafe code blocks are allowed",
        "recommendation": "Disable unsafe blocks unless absolutely necessary"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/DataProtection/Abstractions/src/Microsoft.AspNetCore.DataProtection.Abstractions.csproj",
        "line": 0,
        "type": "unsafe_blocks_allowed",
        "pattern": "AllowUnsafeBlocks>true",
        "code": "<AllowUnsafeBlocks>true</AllowUnsafeBlocks>",
        "severity": "HIGH",
        "description": "Unsafe code blocks are allowed",
        "recommendation": "Disable unsafe blocks unless absolutely necessary"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Http/Headers/src/Microsoft.Net.Http.Headers.csproj",
        "line": 0,
        "type": "unsafe_blocks_allowed",
        "pattern": "AllowUnsafeBlocks>true",
        "code": "<AllowUnsafeBlocks>true</AllowUnsafeBlocks>",
        "severity": "HIGH",
        "description": "Unsafe code blocks are allowed",
        "recommendation": "Disable unsafe blocks unless absolutely necessary"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Http/Http/test/Microsoft.AspNetCore.Http.Tests.csproj",
        "line": 0,
        "type": "unsafe_blocks_allowed",
        "pattern": "AllowUnsafeBlocks>true",
        "code": "<AllowUnsafeBlocks>true</AllowUnsafeBlocks>",
        "severity": "HIGH",
        "description": "Unsafe code blocks are allowed",
        "recommendation": "Disable unsafe blocks unless absolutely necessary"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Http/Http/perf/Microbenchmarks/Microsoft.AspNetCore.Http.Microbenchmarks.csproj",
        "line": 0,
        "type": "unsafe_blocks_allowed",
        "pattern": "AllowUnsafeBlocks>true",
        "code": "<AllowUnsafeBlocks>true</AllowUnsafeBlocks>",
        "severity": "HIGH",
        "description": "Unsafe code blocks are allowed",
        "recommendation": "Disable unsafe blocks unless absolutely necessary"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Http/Http/src/Microsoft.AspNetCore.Http.csproj",
        "line": 0,
        "type": "unsafe_blocks_allowed",
        "pattern": "AllowUnsafeBlocks>true",
        "code": "<AllowUnsafeBlocks>true</AllowUnsafeBlocks>",
        "severity": "HIGH",
        "description": "Unsafe code blocks are allowed",
        "recommendation": "Disable unsafe blocks unless absolutely necessary"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Http/WebUtilities/perf/Microbenchmarks/Microsoft.AspNetCore.WebUtilities.Microbenchmarks.csproj",
        "line": 0,
        "type": "unsafe_blocks_allowed",
        "pattern": "AllowUnsafeBlocks>true",
        "code": "<AllowUnsafeBlocks>true</AllowUnsafeBlocks>",
        "severity": "HIGH",
        "description": "Unsafe code blocks are allowed",
        "recommendation": "Disable unsafe blocks unless absolutely necessary"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Http/WebUtilities/src/Microsoft.AspNetCore.WebUtilities.csproj",
        "line": 0,
        "type": "unsafe_blocks_allowed",
        "pattern": "AllowUnsafeBlocks>true",
        "code": "<AllowUnsafeBlocks>true</AllowUnsafeBlocks>",
        "severity": "HIGH",
        "description": "Unsafe code blocks are allowed",
        "recommendation": "Disable unsafe blocks unless absolutely necessary"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Http/Routing/test/UnitTests/Microsoft.AspNetCore.Routing.Tests.csproj",
        "line": 0,
        "type": "unsafe_blocks_allowed",
        "pattern": "AllowUnsafeBlocks>true",
        "code": "<AllowUnsafeBlocks>true</AllowUnsafeBlocks>",
        "severity": "HIGH",
        "description": "Unsafe code blocks are allowed",
        "recommendation": "Disable unsafe blocks unless absolutely necessary"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Http/Routing/perf/Microbenchmarks/Microsoft.AspNetCore.Routing.Microbenchmarks.csproj",
        "line": 0,
        "type": "unsafe_blocks_allowed",
        "pattern": "AllowUnsafeBlocks>true",
        "code": "<AllowUnsafeBlocks>true</AllowUnsafeBlocks>",
        "severity": "HIGH",
        "description": "Unsafe code blocks are allowed",
        "recommendation": "Disable unsafe blocks unless absolutely necessary"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Http/Routing/src/Microsoft.AspNetCore.Routing.csproj",
        "line": 0,
        "type": "unsafe_blocks_allowed",
        "pattern": "AllowUnsafeBlocks>true",
        "code": "<AllowUnsafeBlocks>true</AllowUnsafeBlocks>",
        "severity": "HIGH",
        "description": "Unsafe code blocks are allowed",
        "recommendation": "Disable unsafe blocks unless absolutely necessary"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Http/Http.Extensions/src/Microsoft.AspNetCore.Http.Extensions.csproj",
        "line": 0,
        "type": "unsafe_blocks_allowed",
        "pattern": "AllowUnsafeBlocks>true",
        "code": "<AllowUnsafeBlocks>true</AllowUnsafeBlocks>",
        "severity": "HIGH",
        "description": "Unsafe code blocks are allowed",
        "recommendation": "Disable unsafe blocks unless absolutely necessary"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Caching/perf/MicroBenchmarks/Microsoft.Extensions.Caching.MicroBenchmarks/Microsoft.Extensions.Caching.MicroBenchmarks.csproj",
        "line": 0,
        "type": "unsafe_blocks_allowed",
        "pattern": "AllowUnsafeBlocks>true",
        "code": "<AllowUnsafeBlocks>true</AllowUnsafeBlocks>",
        "severity": "HIGH",
        "description": "Unsafe code blocks are allowed",
        "recommendation": "Disable unsafe blocks unless absolutely necessary"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/test/FunctionalTests/Microsoft.AspNetCore.Server.HttpSys.FunctionalTests.csproj",
        "line": 0,
        "type": "unsafe_blocks_allowed",
        "pattern": "AllowUnsafeBlocks>true",
        "code": "<AllowUnsafeBlocks>true</AllowUnsafeBlocks>",
        "severity": "HIGH",
        "description": "Unsafe code blocks are allowed",
        "recommendation": "Disable unsafe blocks unless absolutely necessary"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/test/Tests/Microsoft.AspNetCore.Server.HttpSys.Tests.csproj",
        "line": 0,
        "type": "unsafe_blocks_allowed",
        "pattern": "AllowUnsafeBlocks>true",
        "code": "<AllowUnsafeBlocks>true</AllowUnsafeBlocks>",
        "severity": "HIGH",
        "description": "Unsafe code blocks are allowed",
        "recommendation": "Disable unsafe blocks unless absolutely necessary"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/test/NonHelixTests/Microsoft.AspNetCore.Server.HttpSys.NonHelixTests.csproj",
        "line": 0,
        "type": "unsafe_blocks_allowed",
        "pattern": "AllowUnsafeBlocks>true",
        "code": "<AllowUnsafeBlocks>true</AllowUnsafeBlocks>",
        "severity": "HIGH",
        "description": "Unsafe code blocks are allowed",
        "recommendation": "Disable unsafe blocks unless absolutely necessary"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/perf/Microbenchmarks/Microsoft.AspNetCore.Server.HttpSys.Microbenchmarks.csproj",
        "line": 0,
        "type": "unsafe_blocks_allowed",
        "pattern": "AllowUnsafeBlocks>true",
        "code": "<AllowUnsafeBlocks>true</AllowUnsafeBlocks>",
        "severity": "HIGH",
        "description": "Unsafe code blocks are allowed",
        "recommendation": "Disable unsafe blocks unless absolutely necessary"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/src/Microsoft.AspNetCore.Server.HttpSys.csproj",
        "line": 0,
        "type": "unsafe_blocks_allowed",
        "pattern": "AllowUnsafeBlocks>true",
        "code": "<AllowUnsafeBlocks>true</AllowUnsafeBlocks>",
        "severity": "HIGH",
        "description": "Unsafe code blocks are allowed",
        "recommendation": "Disable unsafe blocks unless absolutely necessary"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/Kestrel/tools/CodeGenerator/CodeGenerator.csproj",
        "line": 0,
        "type": "unsafe_blocks_allowed",
        "pattern": "AllowUnsafeBlocks>true",
        "code": "<AllowUnsafeBlocks>true</AllowUnsafeBlocks>",
        "severity": "HIGH",
        "description": "Unsafe code blocks are allowed",
        "recommendation": "Disable unsafe blocks unless absolutely necessary"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/Kestrel/Core/test/Microsoft.AspNetCore.Server.Kestrel.Core.Tests.csproj",
        "line": 0,
        "type": "unsafe_blocks_allowed",
        "pattern": "AllowUnsafeBlocks>true",
        "code": "<AllowUnsafeBlocks>true</AllowUnsafeBlocks>",
        "severity": "HIGH",
        "description": "Unsafe code blocks are allowed",
        "recommendation": "Disable unsafe blocks unless absolutely necessary"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/Kestrel/Core/src/Microsoft.AspNetCore.Server.Kestrel.Core.csproj",
        "line": 0,
        "type": "unsafe_blocks_allowed",
        "pattern": "AllowUnsafeBlocks>true",
        "code": "<AllowUnsafeBlocks>true</AllowUnsafeBlocks>",
        "severity": "HIGH",
        "description": "Unsafe code blocks are allowed",
        "recommendation": "Disable unsafe blocks unless absolutely necessary"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/Kestrel/test/InMemory.FunctionalTests/InMemory.FunctionalTests.csproj",
        "line": 0,
        "type": "unsafe_blocks_allowed",
        "pattern": "AllowUnsafeBlocks>true",
        "code": "<AllowUnsafeBlocks>true</AllowUnsafeBlocks>",
        "severity": "HIGH",
        "description": "Unsafe code blocks are allowed",
        "recommendation": "Disable unsafe blocks unless absolutely necessary"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/Kestrel/test/Interop.FunctionalTests/Interop.FunctionalTests.csproj",
        "line": 0,
        "type": "unsafe_blocks_allowed",
        "pattern": "AllowUnsafeBlocks>true",
        "code": "<AllowUnsafeBlocks>true</AllowUnsafeBlocks>",
        "severity": "HIGH",
        "description": "Unsafe code blocks are allowed",
        "recommendation": "Disable unsafe blocks unless absolutely necessary"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/Kestrel/Transport.Sockets/src/Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.csproj",
        "line": 0,
        "type": "unsafe_blocks_allowed",
        "pattern": "AllowUnsafeBlocks>true",
        "code": "<AllowUnsafeBlocks>true</AllowUnsafeBlocks>",
        "severity": "HIGH",
        "description": "Unsafe code blocks are allowed",
        "recommendation": "Disable unsafe blocks unless absolutely necessary"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/Kestrel/Transport.NamedPipes/test/Microsoft.AspNetCore.Server.Kestrel.Transport.NamedPipes.Tests.csproj",
        "line": 0,
        "type": "unsafe_blocks_allowed",
        "pattern": "AllowUnsafeBlocks>true",
        "code": "<AllowUnsafeBlocks>true</AllowUnsafeBlocks>",
        "severity": "HIGH",
        "description": "Unsafe code blocks are allowed",
        "recommendation": "Disable unsafe blocks unless absolutely necessary"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/Kestrel/Transport.NamedPipes/src/Microsoft.AspNetCore.Server.Kestrel.Transport.NamedPipes.csproj",
        "line": 0,
        "type": "unsafe_blocks_allowed",
        "pattern": "AllowUnsafeBlocks>true",
        "code": "<AllowUnsafeBlocks>true</AllowUnsafeBlocks>",
        "severity": "HIGH",
        "description": "Unsafe code blocks are allowed",
        "recommendation": "Disable unsafe blocks unless absolutely necessary"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/Kestrel/samples/http2cat/http2cat.csproj",
        "line": 0,
        "type": "unsafe_blocks_allowed",
        "pattern": "AllowUnsafeBlocks>true",
        "code": "<AllowUnsafeBlocks>true</AllowUnsafeBlocks>",
        "severity": "HIGH",
        "description": "Unsafe code blocks are allowed",
        "recommendation": "Disable unsafe blocks unless absolutely necessary"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/Kestrel/perf/Microbenchmarks/Microsoft.AspNetCore.Server.Kestrel.Microbenchmarks.csproj",
        "line": 0,
        "type": "unsafe_blocks_allowed",
        "pattern": "AllowUnsafeBlocks>true",
        "code": "<AllowUnsafeBlocks>true</AllowUnsafeBlocks>",
        "severity": "HIGH",
        "description": "Unsafe code blocks are allowed",
        "recommendation": "Disable unsafe blocks unless absolutely necessary"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/Kestrel/Transport.Quic/test/Microsoft.AspNetCore.Server.Kestrel.Transport.Quic.Tests.csproj",
        "line": 0,
        "type": "unsafe_blocks_allowed",
        "pattern": "AllowUnsafeBlocks>true",
        "code": "<AllowUnsafeBlocks>true</AllowUnsafeBlocks>",
        "severity": "HIGH",
        "description": "Unsafe code blocks are allowed",
        "recommendation": "Disable unsafe blocks unless absolutely necessary"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/Kestrel/Transport.Quic/src/Microsoft.AspNetCore.Server.Kestrel.Transport.Quic.csproj",
        "line": 0,
        "type": "unsafe_blocks_allowed",
        "pattern": "AllowUnsafeBlocks>true",
        "code": "<AllowUnsafeBlocks>true</AllowUnsafeBlocks>",
        "severity": "HIGH",
        "description": "Unsafe code blocks are allowed",
        "recommendation": "Disable unsafe blocks unless absolutely necessary"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/IIS/IISIntegration/src/Microsoft.AspNetCore.Server.IISIntegration.csproj",
        "line": 0,
        "type": "unsafe_blocks_allowed",
        "pattern": "AllowUnsafeBlocks>true",
        "code": "<AllowUnsafeBlocks>true</AllowUnsafeBlocks>",
        "severity": "HIGH",
        "description": "Unsafe code blocks are allowed",
        "recommendation": "Disable unsafe blocks unless absolutely necessary"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/IIS/IntegrationTesting.IIS/src/Microsoft.AspNetCore.Server.IntegrationTesting.IIS.csproj",
        "line": 0,
        "type": "unsafe_blocks_allowed",
        "pattern": "AllowUnsafeBlocks>true",
        "code": "<AllowUnsafeBlocks>true</AllowUnsafeBlocks>",
        "severity": "HIGH",
        "description": "Unsafe code blocks are allowed",
        "recommendation": "Disable unsafe blocks unless absolutely necessary"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/IIS/IIS/test/IIS.FunctionalTests/IIS.FunctionalTests.csproj",
        "line": 0,
        "type": "unsafe_blocks_allowed",
        "pattern": "AllowUnsafeBlocks>true",
        "code": "<AllowUnsafeBlocks>true</AllowUnsafeBlocks>",
        "severity": "HIGH",
        "description": "Unsafe code blocks are allowed",
        "recommendation": "Disable unsafe blocks unless absolutely necessary"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/IIS/IIS/test/IISExpress.FunctionalTests/IISExpress.FunctionalTests.csproj",
        "line": 0,
        "type": "unsafe_blocks_allowed",
        "pattern": "AllowUnsafeBlocks>true",
        "code": "<AllowUnsafeBlocks>true</AllowUnsafeBlocks>",
        "severity": "HIGH",
        "description": "Unsafe code blocks are allowed",
        "recommendation": "Disable unsafe blocks unless absolutely necessary"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/IIS/IIS/test/IIS.NewHandler.FunctionalTests/IIS.NewHandler.FunctionalTests.csproj",
        "line": 0,
        "type": "unsafe_blocks_allowed",
        "pattern": "AllowUnsafeBlocks>true",
        "code": "<AllowUnsafeBlocks>true</AllowUnsafeBlocks>",
        "severity": "HIGH",
        "description": "Unsafe code blocks are allowed",
        "recommendation": "Disable unsafe blocks unless absolutely necessary"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/IIS/IIS/test/IIS.LongTests/IIS.LongTests.csproj",
        "line": 0,
        "type": "unsafe_blocks_allowed",
        "pattern": "AllowUnsafeBlocks>true",
        "code": "<AllowUnsafeBlocks>true</AllowUnsafeBlocks>",
        "severity": "HIGH",
        "description": "Unsafe code blocks are allowed",
        "recommendation": "Disable unsafe blocks unless absolutely necessary"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/IIS/IIS/test/IIS.ShadowCopy.Tests/IIS.ShadowCopy.Tests.csproj",
        "line": 0,
        "type": "unsafe_blocks_allowed",
        "pattern": "AllowUnsafeBlocks>true",
        "code": "<AllowUnsafeBlocks>true</AllowUnsafeBlocks>",
        "severity": "HIGH",
        "description": "Unsafe code blocks are allowed",
        "recommendation": "Disable unsafe blocks unless absolutely necessary"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/IIS/IIS/test/testassets/InProcessWebSite/InProcessWebSite.csproj",
        "line": 0,
        "type": "unsafe_blocks_allowed",
        "pattern": "AllowUnsafeBlocks>true",
        "code": "<AllowUnsafeBlocks>true</AllowUnsafeBlocks>",
        "severity": "HIGH",
        "description": "Unsafe code blocks are allowed",
        "recommendation": "Disable unsafe blocks unless absolutely necessary"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/IIS/IIS/test/testassets/InProcessNewShimWebSite/InProcessNewShimWebSite.csproj",
        "line": 0,
        "type": "unsafe_blocks_allowed",
        "pattern": "AllowUnsafeBlocks>true",
        "code": "<AllowUnsafeBlocks>true</AllowUnsafeBlocks>",
        "severity": "HIGH",
        "description": "Unsafe code blocks are allowed",
        "recommendation": "Disable unsafe blocks unless absolutely necessary"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/IIS/IIS/test/IIS.Tests/IIS.Tests.csproj",
        "line": 0,
        "type": "unsafe_blocks_allowed",
        "pattern": "AllowUnsafeBlocks>true",
        "code": "<AllowUnsafeBlocks>true</AllowUnsafeBlocks>",
        "severity": "HIGH",
        "description": "Unsafe code blocks are allowed",
        "recommendation": "Disable unsafe blocks unless absolutely necessary"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/IIS/IIS/test/IIS.NewShim.FunctionalTests/IIS.NewShim.FunctionalTests.csproj",
        "line": 0,
        "type": "unsafe_blocks_allowed",
        "pattern": "AllowUnsafeBlocks>true",
        "code": "<AllowUnsafeBlocks>true</AllowUnsafeBlocks>",
        "severity": "HIGH",
        "description": "Unsafe code blocks are allowed",
        "recommendation": "Disable unsafe blocks unless absolutely necessary"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/IIS/IIS/perf/Microbenchmarks/IIS.Microbenchmarks.csproj",
        "line": 0,
        "type": "unsafe_blocks_allowed",
        "pattern": "AllowUnsafeBlocks>true",
        "code": "<AllowUnsafeBlocks>true</AllowUnsafeBlocks>",
        "severity": "HIGH",
        "description": "Unsafe code blocks are allowed",
        "recommendation": "Disable unsafe blocks unless absolutely necessary"
      },
      {
        "file": "/tmp/aspnetcore_analysis/src/Servers/IIS/IIS/src/Microsoft.AspNetCore.Server.IIS.csproj",
        "line": 0,
        "type": "unsafe_blocks_allowed",
        "pattern": "AllowUnsafeBlocks>true",
        "code": "<AllowUnsafeBlocks>true</AllowUnsafeBlocks>",
        "severity": "HIGH",
        "description": "Unsafe code blocks are allowed",
        "recommendation": "Disable unsafe blocks unless absolutely necessary"
      }
    ]
  },
  "risk_score": 13533,
  "risk_level": "CRITICAL",
  "detailed_findings": [
    {
      "file": "/tmp/aspnetcore_analysis/eng/tools/BaselineGenerator/Program.cs",
      "line": 61,
      "type": "xxe",
      "pattern": "XDocument\\.Load",
      "code": "XDocument.Load",
      "severity": "HIGH",
      "description": "XML External Entity (XXE) vulnerability - potential for data disclosure",
      "recommendation": "Disable external entity processing in XML parsers"
    },
    {
      "file": "/tmp/aspnetcore_analysis/eng/tools/RepoTasks/RemoveSharedFrameworkDependencies.cs",
      "line": 90,
      "type": "xxe",
      "pattern": "XDocument\\.Load",
      "code": "XDocument.Load",
      "severity": "HIGH",
      "description": "XML External Entity (XXE) vulnerability - potential for data disclosure",
      "recommendation": "Disable external entity processing in XML parsers"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Middleware/Rewrite/test/IISUrlRewrite/RewriteMapParserTests.cs",
      "line": 27,
      "type": "xxe",
      "pattern": "XDocument\\.Load",
      "code": "XDocument.Load",
      "severity": "HIGH",
      "description": "XML External Entity (XXE) vulnerability - potential for data disclosure",
      "recommendation": "Disable external entity processing in XML parsers"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Middleware/Rewrite/src/IISUrlRewrite/UrlRewriteFileParser.cs",
      "line": 23,
      "type": "xxe",
      "pattern": "XDocument\\.Load",
      "code": "XDocument.Load",
      "severity": "HIGH",
      "description": "XML External Entity (XXE) vulnerability - potential for data disclosure",
      "recommendation": "Disable external entity processing in XML parsers"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Middleware/ResponseCaching/test/TestUtils.cs",
      "line": 101,
      "type": "xss",
      "pattern": "Response\\.Write\\(.*\\)",
      "code": "Response.Write(uniqueId)",
      "severity": "HIGH",
      "description": "Cross-Site Scripting (XSS) vulnerability - potential for client-side code injection",
      "recommendation": "Encode output, use AntiXSS library, implement CSP"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Middleware/WebSockets/samples/AutobahnTestAppAspNet4/EchoSocket.ashx.cs",
      "line": 29,
      "type": "xss",
      "pattern": "Response\\.Write\\(.*\\)",
      "code": "Response.Write(\"Ready to accept WebSocket request at: \" + context.Request.Url.ToString().Replace(\"https://\", \"wss://\").Replace(\"http://\", \"ws://\"))",
      "severity": "HIGH",
      "description": "Cross-Site Scripting (XSS) vulnerability - potential for client-side code injection",
      "recommendation": "Encode output, use AntiXSS library, implement CSP"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Middleware/OutputCaching/test/TestUtils.cs",
      "line": 76,
      "type": "xss",
      "pattern": "Response\\.Write\\(.*\\)",
      "code": "Response.Write(uniqueId)",
      "severity": "HIGH",
      "description": "Cross-Site Scripting (XSS) vulnerability - potential for client-side code injection",
      "recommendation": "Encode output, use AntiXSS library, implement CSP"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Middleware/OutputCaching/test/OutputCacheMiddlewareTests.cs",
      "line": 877,
      "type": "xss",
      "pattern": "Response\\.Write\\(.*\\)",
      "code": "Response.Write(\"Hello\" + responseCounter)",
      "severity": "HIGH",
      "description": "Cross-Site Scripting (XSS) vulnerability - potential for client-side code injection",
      "recommendation": "Encode output, use AntiXSS library, implement CSP"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Middleware/OutputCaching/test/OutputCacheMiddlewareTests.cs",
      "line": 943,
      "type": "xss",
      "pattern": "Response\\.Write\\(.*\\)",
      "code": "Response.Write(\"Hello\" + responseCounter)",
      "severity": "HIGH",
      "description": "Cross-Site Scripting (XSS) vulnerability - potential for client-side code injection",
      "recommendation": "Encode output, use AntiXSS library, implement CSP"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Middleware/Diagnostics.EntityFrameworkCore/test/FunctionalTests/Helpers/PlatformHelper.cs",
      "line": 12,
      "type": "dangerous_api",
      "pattern": "Type.GetType",
      "code": "return Type.GetType(\"Mono.Runtime\") != null;",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Type.GetType",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Middleware/Diagnostics.EntityFrameworkCore/test/FunctionalTests/Helpers/StringHelpers.cs",
      "line": 12,
      "type": "dangerous_api",
      "pattern": "Assembly.GetType",
      "code": "var strings = typeof(DatabaseErrorPageMiddleware).Assembly.GetType(\"Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.Strings\").GetTypeInfo();",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Assembly.GetType",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Middleware/Diagnostics.EntityFrameworkCore/test/UnitTests/Helpers/StringHelpers.cs",
      "line": 12,
      "type": "dangerous_api",
      "pattern": "Assembly.GetType",
      "code": "var strings = typeof(DatabaseErrorPageMiddleware).Assembly.GetType(\"Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.Strings\").GetTypeInfo();",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Assembly.GetType",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Middleware/Diagnostics.EntityFrameworkCore/src/Views/DatabaseErrorPage.Designer.cs",
      "line": 376,
      "type": "xss",
      "pattern": "innerHTML\\s*=",
      "code": "innerHTML =",
      "severity": "HIGH",
      "description": "Cross-Site Scripting (XSS) vulnerability - potential for client-side code injection",
      "recommendation": "Encode output, use AntiXSS library, implement CSP"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Middleware/Diagnostics.EntityFrameworkCore/src/Views/DatabaseErrorPage.Designer.cs",
      "line": 376,
      "type": "xss",
      "pattern": "innerHTML\\s*=",
      "code": "innerHTML =",
      "severity": "HIGH",
      "description": "Cross-Site Scripting (XSS) vulnerability - potential for client-side code injection",
      "recommendation": "Encode output, use AntiXSS library, implement CSP"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Middleware/Diagnostics.EntityFrameworkCore/src/Views/DatabaseErrorPage.Designer.cs",
      "line": 384,
      "type": "xss",
      "pattern": "innerHTML\\s*=",
      "code": "innerHTML =",
      "severity": "HIGH",
      "description": "Cross-Site Scripting (XSS) vulnerability - potential for client-side code injection",
      "recommendation": "Encode output, use AntiXSS library, implement CSP"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Middleware/Diagnostics.EntityFrameworkCore/src/Views/DatabaseErrorPage.Designer.cs",
      "line": 392,
      "type": "xss",
      "pattern": "innerHTML\\s*=",
      "code": "innerHTML =",
      "severity": "HIGH",
      "description": "Cross-Site Scripting (XSS) vulnerability - potential for client-side code injection",
      "recommendation": "Encode output, use AntiXSS library, implement CSP"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Middleware/Diagnostics.EntityFrameworkCore/src/Views/DatabaseErrorPage.Designer.cs",
      "line": 425,
      "type": "xss",
      "pattern": "innerHTML\\s*=",
      "code": "innerHTML =",
      "severity": "HIGH",
      "description": "Cross-Site Scripting (XSS) vulnerability - potential for client-side code injection",
      "recommendation": "Encode output, use AntiXSS library, implement CSP"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Middleware/Diagnostics.EntityFrameworkCore/src/Views/DatabaseErrorPage.Designer.cs",
      "line": 433,
      "type": "xss",
      "pattern": "innerHTML\\s*=",
      "code": "innerHTML =",
      "severity": "HIGH",
      "description": "Cross-Site Scripting (XSS) vulnerability - potential for client-side code injection",
      "recommendation": "Encode output, use AntiXSS library, implement CSP"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Middleware/Session/src/SipHash.cs",
      "line": 24,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "unsafe",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Analyzers/Microsoft.AspNetCore.Analyzer.Testing/src/DiagnosticProject.cs",
      "line": 101,
      "type": "dangerous_api",
      "pattern": "Assembly.LoadFrom",
      "code": "return Assembly.LoadFrom(fullPath);",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Assembly.LoadFrom",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Razor/Razor/src/TagHelpers/NullHtmlEncoder.cs",
      "line": 71,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "public override unsafe int FindFirstCharacterToEncode(char* text, int textLength)",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Razor/Razor/src/TagHelpers/NullHtmlEncoder.cs",
      "line": 77,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "public override unsafe bool TryEncodeUnicodeScalar(",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/ProjectTemplates/Web.ItemTemplates/content/ApiController/ValueController.cs",
      "line": 30,
      "type": "csrf",
      "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
      "code": "[HttpPost]",
      "severity": "MEDIUM",
      "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
      "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/ProjectTemplates/test/Templates.Mvc.Tests/BlazorTemplateTest.cs",
      "line": 209,
      "type": "hardcoded_secrets",
      "pattern": "password\\s*=\\s*[\"\\'][^\"\\']{8,}[\"\\']",
      "code": "Password = \"Account/ForgotPassword\"",
      "severity": "HIGH",
      "description": "Hardcoded secrets/credentials - potential for unauthorized access",
      "recommendation": "Use configuration files or Azure Key Vault"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/ProjectTemplates/test/Templates.Blazor.Tests/BlazorTemplateTest.cs",
      "line": 173,
      "type": "hardcoded_secrets",
      "pattern": "password\\s*=\\s*[\"\\'][^\"\\']{8,}[\"\\']",
      "code": "password = \"[PLACEHOLDER]-1a\"",
      "severity": "HIGH",
      "description": "Hardcoded secrets/credentials - potential for unauthorized access",
      "recommendation": "Use configuration files or Azure Key Vault"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/ProjectTemplates/Shared/PageUrls.cs",
      "line": 14,
      "type": "hardcoded_secrets",
      "pattern": "password\\s*=\\s*[\"\\'][^\"\\']{8,}[\"\\']",
      "code": "Password = \"/Identity/Account/ForgotPassword\"",
      "severity": "HIGH",
      "description": "Hardcoded secrets/credentials - potential for unauthorized access",
      "recommendation": "Use configuration files or Azure Key Vault"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/FileProviders/Embedded/src/Manifest/ManifestParser.cs",
      "line": 36,
      "type": "xxe",
      "pattern": "XDocument\\.Load",
      "code": "XDocument.Load",
      "severity": "HIGH",
      "description": "XML External Entity (XXE) vulnerability - potential for data disclosure",
      "recommendation": "Disable external entity processing in XML parsers"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Tools/dotnet-user-secrets/test/InitCommandTest.cs",
      "line": 96,
      "type": "xxe",
      "pattern": "XDocument\\.Load",
      "code": "XDocument.Load",
      "severity": "HIGH",
      "description": "XML External Entity (XXE) vulnerability - potential for data disclosure",
      "recommendation": "Disable external entity processing in XML parsers"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Tools/dotnet-user-secrets/test/InitCommandTest.cs",
      "line": 105,
      "type": "xxe",
      "pattern": "XDocument\\.Load",
      "code": "XDocument.Load",
      "severity": "HIGH",
      "description": "XML External Entity (XXE) vulnerability - potential for data disclosure",
      "recommendation": "Disable external entity processing in XML parsers"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Tools/dotnet-user-secrets/test/InitCommandTest.cs",
      "line": 110,
      "type": "xxe",
      "pattern": "XDocument\\.Load",
      "code": "XDocument.Load",
      "severity": "HIGH",
      "description": "XML External Entity (XXE) vulnerability - potential for data disclosure",
      "recommendation": "Disable external entity processing in XML parsers"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Tools/Shared/SecretsHelpers/UserSecretsCreator.cs",
      "line": 18,
      "type": "xxe",
      "pattern": "XDocument\\.Load",
      "code": "XDocument.Load",
      "severity": "HIGH",
      "description": "XML External Entity (XXE) vulnerability - potential for data disclosure",
      "recommendation": "Disable external entity processing in XML parsers"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Tools/GetDocumentInsider/src/Commands/GetDocumentCommand.cs",
      "line": 127,
      "type": "dangerous_api",
      "pattern": "Assembly.LoadFile",
      "code": "return Assembly.LoadFile(assemblyPath);",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Assembly.LoadFile",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/DefaultBuilder/test/Microsoft.AspNetCore.TrimmingTests/X509Utilities.cs",
      "line": 21,
      "type": "dangerous_api",
      "pattern": "Type.GetType",
      "code": "return Type.GetType($\"{typeName}, {assemblyName}\");",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Type.GetType",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Identity/UI/src/Areas/Identity/Pages/V5/Account/Register.cshtml.cs",
      "line": 174,
      "type": "dangerous_api",
      "pattern": "Activator.CreateInstance",
      "code": "return Activator.CreateInstance<TUser>();",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Activator.CreateInstance",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Identity/UI/src/Areas/Identity/Pages/V5/Account/ExternalLogin.cshtml.cs",
      "line": 235,
      "type": "dangerous_api",
      "pattern": "Activator.CreateInstance",
      "code": "return Activator.CreateInstance<TUser>();",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Activator.CreateInstance",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Identity/UI/src/Areas/Identity/Pages/V4/Account/Register.cshtml.cs",
      "line": 174,
      "type": "dangerous_api",
      "pattern": "Activator.CreateInstance",
      "code": "return Activator.CreateInstance<TUser>();",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Activator.CreateInstance",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Identity/UI/src/Areas/Identity/Pages/V4/Account/ExternalLogin.cshtml.cs",
      "line": 235,
      "type": "dangerous_api",
      "pattern": "Activator.CreateInstance",
      "code": "return Activator.CreateInstance<TUser>();",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Activator.CreateInstance",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Identity/test/InMemory.Test/ControllerTest.cs",
      "line": 47,
      "type": "hardcoded_secrets",
      "pattern": "password\\s*=\\s*[\"\\'][^\"\\']{8,}[\"\\']",
      "code": "password = \"[PLACEHOLDER]-1a\"",
      "severity": "HIGH",
      "description": "Hardcoded secrets/credentials - potential for unauthorized access",
      "recommendation": "Use configuration files or Azure Key Vault"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Identity/test/InMemory.Test/FunctionalTest.cs",
      "line": 27,
      "type": "hardcoded_secrets",
      "pattern": "password\\s*=\\s*[\"\\'][^\"\\']{8,}[\"\\']",
      "code": "Password = \"[PLACEHOLDER]-1a\"",
      "severity": "HIGH",
      "description": "Hardcoded secrets/credentials - potential for unauthorized access",
      "recommendation": "Use configuration files or Azure Key Vault"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Identity/test/Identity.Test/PasswordHasherTest.cs",
      "line": 12,
      "type": "hardcoded_secrets",
      "pattern": "password\\s*=\\s*[\"\\'][^\"\\']{8,}[\"\\']",
      "code": "Password = \"my password\"",
      "severity": "HIGH",
      "description": "Hardcoded secrets/credentials - potential for unauthorized access",
      "recommendation": "Use configuration files or Azure Key Vault"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Identity/test/Identity.FunctionalTests/UserStories.cs",
      "line": 271,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Identity/test/Identity.FunctionalTests/ManagementTests.cs",
      "line": 126,
      "type": "hardcoded_secrets",
      "pattern": "password\\s*=\\s*[\"\\'][^\"\\']{8,}[\"\\']",
      "code": "password = \"[PLACEHOLDER]-1a\"",
      "severity": "HIGH",
      "description": "Hardcoded secrets/credentials - potential for unauthorized access",
      "recommendation": "Use configuration files or Azure Key Vault"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Identity/test/Identity.FunctionalTests/ManagementTests.cs",
      "line": 127,
      "type": "hardcoded_secrets",
      "pattern": "password\\s*=\\s*[\"\\'][^\"\\']{8,}[\"\\']",
      "code": "Password = \"[PLACEHOLDER]-1a-updated\"",
      "severity": "HIGH",
      "description": "Hardcoded secrets/credentials - potential for unauthorized access",
      "recommendation": "Use configuration files or Azure Key Vault"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Identity/EntityFrameworkCore/test/EF.Test/UserOnlyCustomContextTest.cs",
      "line": 96,
      "type": "hardcoded_secrets",
      "pattern": "password\\s*=\\s*[\"\\'][^\"\\']{8,}[\"\\']",
      "code": "password = \"[PLACEHOLDER]-1a\"",
      "severity": "HIGH",
      "description": "Hardcoded secrets/credentials - potential for unauthorized access",
      "recommendation": "Use configuration files or Azure Key Vault"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Identity/EntityFrameworkCore/test/EF.Test/UserOnlyTest.cs",
      "line": 57,
      "type": "hardcoded_secrets",
      "pattern": "password\\s*=\\s*[\"\\'][^\"\\']{8,}[\"\\']",
      "code": "password = \"[PLACEHOLDER]-1a\"",
      "severity": "HIGH",
      "description": "Hardcoded secrets/credentials - potential for unauthorized access",
      "recommendation": "Use configuration files or Azure Key Vault"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Identity/EntityFrameworkCore/test/EF.Test/UserOnlyTest.cs",
      "line": 74,
      "type": "hardcoded_secrets",
      "pattern": "password\\s*=\\s*[\"\\'][^\"\\']{8,}[\"\\']",
      "code": "password = \"[PLACEHOLDER]-1a\"",
      "severity": "HIGH",
      "description": "Hardcoded secrets/credentials - potential for unauthorized access",
      "recommendation": "Use configuration files or Azure Key Vault"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Identity/EntityFrameworkCore/test/EF.Test/DefaultPocoTest.cs",
      "line": 51,
      "type": "hardcoded_secrets",
      "pattern": "password\\s*=\\s*[\"\\'][^\"\\']{8,}[\"\\']",
      "code": "password = \"[PLACEHOLDER]-1a\"",
      "severity": "HIGH",
      "description": "Hardcoded secrets/credentials - potential for unauthorized access",
      "recommendation": "Use configuration files or Azure Key Vault"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Identity/Specification.Tests/src/UserManagerSpecificationTests.cs",
      "line": 503,
      "type": "hardcoded_secrets",
      "pattern": "password\\s*=\\s*[\"\\'][^\"\\']{8,}[\"\\']",
      "code": "password = \"password\"",
      "severity": "HIGH",
      "description": "Hardcoded secrets/credentials - potential for unauthorized access",
      "recommendation": "Use configuration files or Azure Key Vault"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Identity/Specification.Tests/src/UserManagerSpecificationTests.cs",
      "line": 504,
      "type": "hardcoded_secrets",
      "pattern": "password\\s*=\\s*[\"\\'][^\"\\']{8,}[\"\\']",
      "code": "Password = \"newpassword\"",
      "severity": "HIGH",
      "description": "Hardcoded secrets/credentials - potential for unauthorized access",
      "recommendation": "Use configuration files or Azure Key Vault"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Identity/Specification.Tests/src/UserManagerSpecificationTests.cs",
      "line": 668,
      "type": "hardcoded_secrets",
      "pattern": "password\\s*=\\s*[\"\\'][^\"\\']{8,}[\"\\']",
      "code": "password = \"password\"",
      "severity": "HIGH",
      "description": "Hardcoded secrets/credentials - potential for unauthorized access",
      "recommendation": "Use configuration files or Azure Key Vault"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Identity/Specification.Tests/src/UserManagerSpecificationTests.cs",
      "line": 688,
      "type": "hardcoded_secrets",
      "pattern": "password\\s*=\\s*[\"\\'][^\"\\']{8,}[\"\\']",
      "code": "password = \"password\"",
      "severity": "HIGH",
      "description": "Hardcoded secrets/credentials - potential for unauthorized access",
      "recommendation": "Use configuration files or Azure Key Vault"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Identity/Specification.Tests/src/UserManagerSpecificationTests.cs",
      "line": 689,
      "type": "hardcoded_secrets",
      "pattern": "password\\s*=\\s*[\"\\'][^\"\\']{8,}[\"\\']",
      "code": "Password = \"newpassword\"",
      "severity": "HIGH",
      "description": "Hardcoded secrets/credentials - potential for unauthorized access",
      "recommendation": "Use configuration files or Azure Key Vault"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Identity/Specification.Tests/src/UserManagerSpecificationTests.cs",
      "line": 993,
      "type": "hardcoded_secrets",
      "pattern": "password\\s*=\\s*[\"\\'][^\"\\']{8,}[\"\\']",
      "code": "password = \"password\"",
      "severity": "HIGH",
      "description": "Hardcoded secrets/credentials - potential for unauthorized access",
      "recommendation": "Use configuration files or Azure Key Vault"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Identity/Specification.Tests/src/UserManagerSpecificationTests.cs",
      "line": 994,
      "type": "hardcoded_secrets",
      "pattern": "password\\s*=\\s*[\"\\'][^\"\\']{8,}[\"\\']",
      "code": "Password = \"newpassword\"",
      "severity": "HIGH",
      "description": "Hardcoded secrets/credentials - potential for unauthorized access",
      "recommendation": "Use configuration files or Azure Key Vault"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Identity/Specification.Tests/src/UserManagerSpecificationTests.cs",
      "line": 1018,
      "type": "hardcoded_secrets",
      "pattern": "password\\s*=\\s*[\"\\'][^\"\\']{8,}[\"\\']",
      "code": "password = \"password\"",
      "severity": "HIGH",
      "description": "Hardcoded secrets/credentials - potential for unauthorized access",
      "recommendation": "Use configuration files or Azure Key Vault"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Identity/Specification.Tests/src/UserManagerSpecificationTests.cs",
      "line": 1019,
      "type": "hardcoded_secrets",
      "pattern": "password\\s*=\\s*[\"\\'][^\"\\']{8,}[\"\\']",
      "code": "Password = \"newpassword\"",
      "severity": "HIGH",
      "description": "Hardcoded secrets/credentials - potential for unauthorized access",
      "recommendation": "Use configuration files or Azure Key Vault"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Identity/Specification.Tests/src/UserManagerSpecificationTests.cs",
      "line": 1044,
      "type": "hardcoded_secrets",
      "pattern": "password\\s*=\\s*[\"\\'][^\"\\']{8,}[\"\\']",
      "code": "password = \"password\"",
      "severity": "HIGH",
      "description": "Hardcoded secrets/credentials - potential for unauthorized access",
      "recommendation": "Use configuration files or Azure Key Vault"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Identity/Specification.Tests/src/UserManagerSpecificationTests.cs",
      "line": 1045,
      "type": "hardcoded_secrets",
      "pattern": "password\\s*=\\s*[\"\\'][^\"\\']{8,}[\"\\']",
      "code": "Password = \"newpassword\"",
      "severity": "HIGH",
      "description": "Hardcoded secrets/credentials - potential for unauthorized access",
      "recommendation": "Use configuration files or Azure Key Vault"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Identity/testassets/Identity.DefaultUI.WebSite/Pages/Contoso/Login.cshtml.cs",
      "line": 54,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Razor.RuntimeCompilation/test/AssemblyPartExtensionTest.cs",
      "line": 5,
      "type": "dangerous_api",
      "pattern": "System.Reflection.Emit",
      "code": "using System.Reflection.Emit;",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: System.Reflection.Emit",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.ApiExplorer/test/DefaultApiDescriptionProviderTest.cs",
      "line": 2349,
      "type": "dangerous_api",
      "pattern": "Type.GetType",
      "code": "action.ControllerTypeInfo = controllerType.GetTypeInfo();",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Type.GetType",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.IntegrationTests/AuthorizeFilterIntegrationTest.cs",
      "line": 167,
      "type": "dangerous_api",
      "pattern": "Type.GetType",
      "code": "var context = new ApplicationModelProviderContext(new[] { controllerType.GetTypeInfo() });",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Type.GetType",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/HtmlGenerationWebSite/Controllers/HtmlGeneration_HomeController.cs",
      "line": 241,
      "type": "csrf",
      "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
      "code": "[HttpPost]",
      "severity": "MEDIUM",
      "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
      "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/ControllersFromServicesClassLibrary/EmployeeRecords.cs",
      "line": 16,
      "type": "csrf",
      "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
      "code": "[HttpPost]",
      "severity": "MEDIUM",
      "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
      "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/RoutingWebSite/Areas/Admin/FallbackController.cs",
      "line": 16,
      "type": "csrf",
      "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
      "code": "[HttpPost]",
      "severity": "MEDIUM",
      "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
      "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/RoutingWebSite/Areas/Admin/DynamicController.cs",
      "line": 16,
      "type": "csrf",
      "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
      "code": "[HttpPost]",
      "severity": "MEDIUM",
      "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
      "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/RoutingWebSite/Areas/Travel/FlightController.cs",
      "line": 24,
      "type": "csrf",
      "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
      "code": "[HttpPost]",
      "severity": "MEDIUM",
      "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
      "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/RoutingWebSite/Controllers/OrderController.cs",
      "line": 24,
      "type": "csrf",
      "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
      "code": "[HttpPost]",
      "severity": "MEDIUM",
      "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
      "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/RoutingWebSite/Controllers/EndpointNameController.cs",
      "line": 20,
      "type": "csrf",
      "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
      "code": "[HttpPost]",
      "severity": "MEDIUM",
      "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
      "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/RoutingWebSite/Controllers/ConsumesAttributeController.cs",
      "line": 11,
      "type": "csrf",
      "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
      "code": "[HttpPost]",
      "severity": "MEDIUM",
      "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
      "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/RoutingWebSite/Controllers/BanksController.cs",
      "line": 45,
      "type": "csrf",
      "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
      "code": "[HttpPost]",
      "severity": "MEDIUM",
      "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
      "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/RazorBuildWebSite/Controllers/UpdateableViewsController.cs",
      "line": 12,
      "type": "csrf",
      "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
      "code": "[HttpPost]",
      "severity": "MEDIUM",
      "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
      "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/RazorBuildWebSite/Controllers/UpdateableViewsController.cs",
      "line": 19,
      "type": "csrf",
      "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
      "code": "[HttpPost]",
      "severity": "MEDIUM",
      "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
      "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/VersioningWebSite/Controllers/CustomersController.cs",
      "line": 40,
      "type": "csrf",
      "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
      "code": "[HttpPost]",
      "severity": "MEDIUM",
      "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
      "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/SecurityWebSite/Controllers/AntiforgeryController.cs",
      "line": 11,
      "type": "csrf",
      "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
      "code": "[HttpPost]",
      "severity": "MEDIUM",
      "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
      "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/SecurityWebSite/Controllers/HomeController.cs",
      "line": 18,
      "type": "csrf",
      "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
      "code": "[HttpPost]",
      "severity": "MEDIUM",
      "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
      "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/SecurityWebSite/Controllers/LoginController.cs",
      "line": 15,
      "type": "csrf",
      "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
      "code": "[HttpPost]",
      "severity": "MEDIUM",
      "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
      "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/SecurityWebSite/Controllers/LoginController.cs",
      "line": 23,
      "type": "csrf",
      "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
      "code": "[HttpPost]",
      "severity": "MEDIUM",
      "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
      "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/SecurityWebSite/Controllers/LoginController.cs",
      "line": 31,
      "type": "csrf",
      "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
      "code": "[HttpPost]",
      "severity": "MEDIUM",
      "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
      "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/TagHelpersWebSite/TagHelpers/CustomEncoderTagHelper.cs",
      "line": 19,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "// Note this is very unsafe. Should always post-process content that may not be fully HTML encoded before",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/TagHelpersWebSite/TagHelpers/CustomEncoderTagHelper.cs",
      "line": 63,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "public override unsafe int FindFirstCharacterToEncode(char* text, int textLength) => -1;",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/TagHelpersWebSite/TagHelpers/CustomEncoderTagHelper.cs",
      "line": 65,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "public override unsafe bool TryEncodeUnicodeScalar(",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/TagHelpersWebSite/TagHelpers/NullEncoderTagHelper.cs",
      "line": 17,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "// Note this is very unsafe. Should always post-process content that may not be fully HTML encoded before",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/TagHelpersWebSite/Controllers/EmployeeController.cs",
      "line": 24,
      "type": "csrf",
      "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
      "code": "[HttpPost]",
      "severity": "MEDIUM",
      "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
      "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/CorsWebSite/Controllers/CustomerController.cs",
      "line": 17,
      "type": "csrf",
      "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
      "code": "[HttpPost]",
      "severity": "MEDIUM",
      "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
      "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/ApiExplorerWebSite/Startup.cs",
      "line": 29,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/ApiExplorerWebSite/Controllers/ApiExplorerResponseTypeWithApiConventionController.cs",
      "line": 22,
      "type": "csrf",
      "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
      "code": "[HttpPost]",
      "severity": "MEDIUM",
      "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
      "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/ApiExplorerWebSite/Controllers/ApiExplorerResponseTypeWithApiConventionController.cs",
      "line": 28,
      "type": "csrf",
      "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
      "code": "[HttpPost]",
      "severity": "MEDIUM",
      "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
      "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/ApiExplorerWebSite/Controllers/ApiExplorerResponseTypeWithApiConventionController.cs",
      "line": 32,
      "type": "csrf",
      "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
      "code": "[HttpPost]",
      "severity": "MEDIUM",
      "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
      "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/ApiExplorerWebSite/Controllers/ApiExplorerResponseTypeWithApiConventionController.cs",
      "line": 41,
      "type": "csrf",
      "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
      "code": "[HttpPost]",
      "severity": "MEDIUM",
      "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
      "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/BasicWebSite/Startup.cs",
      "line": 16,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/BasicWebSite/StartupWithoutEndpointRouting.cs",
      "line": 36,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/BasicWebSite/Areas/Area1/Controllers/RemoteAttribute_HomeController.cs",
      "line": 21,
      "type": "csrf",
      "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
      "code": "[HttpPost]",
      "severity": "MEDIUM",
      "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
      "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/BasicWebSite/Controllers/RemoteAttribute_HomeController.cs",
      "line": 20,
      "type": "csrf",
      "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
      "code": "[HttpPost]",
      "severity": "MEDIUM",
      "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
      "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/BasicWebSite/Controllers/RequestSizeLimitController.cs",
      "line": 24,
      "type": "csrf",
      "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
      "code": "[HttpPost]",
      "severity": "MEDIUM",
      "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
      "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/BasicWebSite/Controllers/RequestFormLimitsController.cs",
      "line": 24,
      "type": "csrf",
      "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
      "code": "[HttpPost]",
      "severity": "MEDIUM",
      "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
      "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/BasicWebSite/Controllers/RequestFormLimitsController.cs",
      "line": 35,
      "type": "csrf",
      "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
      "code": "[HttpPost]",
      "severity": "MEDIUM",
      "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
      "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/BasicWebSite/Controllers/ContactApiController.cs",
      "line": 33,
      "type": "csrf",
      "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
      "code": "[HttpPost]",
      "severity": "MEDIUM",
      "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
      "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/BasicWebSite/Controllers/NonNullableController.cs",
      "line": 16,
      "type": "csrf",
      "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
      "code": "[HttpPost]",
      "severity": "MEDIUM",
      "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
      "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/BasicWebSite/Controllers/HomeController.cs",
      "line": 116,
      "type": "csrf",
      "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
      "code": "[HttpPost]",
      "severity": "MEDIUM",
      "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
      "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/BasicWebSite/Controllers/FiltersController.cs",
      "line": 12,
      "type": "csrf",
      "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
      "code": "[HttpPost]",
      "severity": "MEDIUM",
      "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
      "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/BasicWebSite/Controllers/TempDataPropertyController.cs",
      "line": 17,
      "type": "csrf",
      "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
      "code": "[HttpPost]",
      "severity": "MEDIUM",
      "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
      "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/BasicWebSite/Controllers/TempDataPropertyController.cs",
      "line": 25,
      "type": "csrf",
      "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
      "code": "[HttpPost]",
      "severity": "MEDIUM",
      "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
      "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/BasicWebSite/Controllers/ReadFromThrowingRequestBodyController .cs",
      "line": 11,
      "type": "csrf",
      "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
      "code": "[HttpPost]",
      "severity": "MEDIUM",
      "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
      "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/BasicWebSite/Controllers/ReadFromThrowingRequestBodyController .cs",
      "line": 14,
      "type": "csrf",
      "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
      "code": "[HttpPost]",
      "severity": "MEDIUM",
      "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
      "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/BasicWebSite/Services/WeatherForecastService.cs",
      "line": 24,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/FormatterWebSite/Startup.cs",
      "line": 20,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/FormatterWebSite/StartupWithJsonInputFormatter.cs",
      "line": 17,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/FormatterWebSite/Controllers/ValidationController.cs",
      "line": 11,
      "type": "csrf",
      "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
      "code": "[HttpPost]",
      "severity": "MEDIUM",
      "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
      "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/FormatterWebSite/Controllers/ValidationController.cs",
      "line": 25,
      "type": "csrf",
      "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
      "code": "[HttpPost]",
      "severity": "MEDIUM",
      "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
      "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/FormatterWebSite/Controllers/ValidationController.cs",
      "line": 44,
      "type": "csrf",
      "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
      "code": "[HttpPost]",
      "severity": "MEDIUM",
      "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
      "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/FormatterWebSite/Controllers/ValidationController.cs",
      "line": 71,
      "type": "csrf",
      "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
      "code": "[HttpPost]",
      "severity": "MEDIUM",
      "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
      "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/FormatterWebSite/Controllers/ValidationController.cs",
      "line": 82,
      "type": "csrf",
      "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
      "code": "[HttpPost]",
      "severity": "MEDIUM",
      "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
      "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/FormatterWebSite/Controllers/ValidationController.cs",
      "line": 88,
      "type": "csrf",
      "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
      "code": "[HttpPost]",
      "severity": "MEDIUM",
      "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
      "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/FormatterWebSite/Controllers/XmlSerializerController.cs",
      "line": 23,
      "type": "csrf",
      "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
      "code": "[HttpPost]",
      "severity": "MEDIUM",
      "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
      "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/FormatterWebSite/Controllers/XmlSerializerController.cs",
      "line": 29,
      "type": "csrf",
      "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
      "code": "[HttpPost]",
      "severity": "MEDIUM",
      "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
      "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/FormatterWebSite/Controllers/XmlSerializerController.cs",
      "line": 39,
      "type": "csrf",
      "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
      "code": "[HttpPost]",
      "severity": "MEDIUM",
      "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
      "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/FormatterWebSite/Controllers/XmlSerializerController.cs",
      "line": 48,
      "type": "csrf",
      "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
      "code": "[HttpPost]",
      "severity": "MEDIUM",
      "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
      "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/FormatterWebSite/Controllers/XmlSerializerController.cs",
      "line": 54,
      "type": "csrf",
      "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
      "code": "[HttpPost]",
      "severity": "MEDIUM",
      "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
      "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/FormatterWebSite/Controllers/PolymorphicPropertyBindingController.cs",
      "line": 14,
      "type": "csrf",
      "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
      "code": "[HttpPost]",
      "severity": "MEDIUM",
      "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
      "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/FormatterWebSite/Controllers/DoNotRespectBrowserAcceptHeaderController.cs",
      "line": 31,
      "type": "csrf",
      "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
      "code": "[HttpPost]",
      "severity": "MEDIUM",
      "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
      "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/FormatterWebSite/Controllers/SerializableErrorController.cs",
      "line": 10,
      "type": "csrf",
      "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
      "code": "[HttpPost]",
      "severity": "MEDIUM",
      "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
      "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/FormatterWebSite/Controllers/DataContractSerializerController.cs",
      "line": 11,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/FormatterWebSite/Controllers/DataContractSerializerController.cs",
      "line": 13,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/FormatterWebSite/Controllers/DataContractSerializerController.cs",
      "line": 21,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/FormatterWebSite/Controllers/DataContractSerializerController.cs",
      "line": 31,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/FormatterWebSite/Controllers/DataContractSerializerController.cs",
      "line": 39,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/FormatterWebSite/Controllers/DataContractSerializerController.cs",
      "line": 47,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/FormatterWebSite/Controllers/DataContractSerializerController.cs",
      "line": 27,
      "type": "csrf",
      "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
      "code": "[HttpPost]",
      "severity": "MEDIUM",
      "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
      "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/FormatterWebSite/Controllers/DataContractSerializerController.cs",
      "line": 35,
      "type": "csrf",
      "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
      "code": "[HttpPost]",
      "severity": "MEDIUM",
      "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
      "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/FormatterWebSite/Controllers/DataContractSerializerController.cs",
      "line": 43,
      "type": "csrf",
      "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
      "code": "[HttpPost]",
      "severity": "MEDIUM",
      "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
      "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/FormatterWebSite/Controllers/TestApiController.cs",
      "line": 13,
      "type": "csrf",
      "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
      "code": "[HttpPost]",
      "severity": "MEDIUM",
      "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
      "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/FormatterWebSite/Controllers/JsonInputFormatterController.cs",
      "line": 12,
      "type": "csrf",
      "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
      "code": "[HttpPost]",
      "severity": "MEDIUM",
      "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
      "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/FormatterWebSite/Controllers/HomeController.cs",
      "line": 13,
      "type": "csrf",
      "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
      "code": "[HttpPost]",
      "severity": "MEDIUM",
      "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
      "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/FormatterWebSite/Controllers/HomeController.cs",
      "line": 19,
      "type": "csrf",
      "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
      "code": "[HttpPost]",
      "severity": "MEDIUM",
      "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
      "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/FormatterWebSite/Controllers/HomeController.cs",
      "line": 25,
      "type": "csrf",
      "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
      "code": "[HttpPost]",
      "severity": "MEDIUM",
      "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
      "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/FormatterWebSite/Controllers/HomeController.cs",
      "line": 31,
      "type": "csrf",
      "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
      "code": "[HttpPost]",
      "severity": "MEDIUM",
      "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
      "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/FormatterWebSite/Controllers/HomeController.cs",
      "line": 41,
      "type": "csrf",
      "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
      "code": "[HttpPost]",
      "severity": "MEDIUM",
      "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
      "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/FormatterWebSite/Controllers/HomeController.cs",
      "line": 45,
      "type": "csrf",
      "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
      "code": "[HttpPost]",
      "severity": "MEDIUM",
      "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
      "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/FormatterWebSite/Controllers/HomeController.cs",
      "line": 49,
      "type": "csrf",
      "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
      "code": "[HttpPost]",
      "severity": "MEDIUM",
      "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
      "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/FormatterWebSite/Controllers/HomeController.cs",
      "line": 54,
      "type": "csrf",
      "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
      "code": "[HttpPost]",
      "severity": "MEDIUM",
      "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
      "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/FormatterWebSite/Controllers/HomeController.cs",
      "line": 58,
      "type": "csrf",
      "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
      "code": "[HttpPost]",
      "severity": "MEDIUM",
      "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
      "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/FormatterWebSite/Controllers/PolymorphicBindingController.cs",
      "line": 21,
      "type": "csrf",
      "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
      "code": "[HttpPost]",
      "severity": "MEDIUM",
      "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
      "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/FormatterWebSite/Controllers/JsonFormatterController.cs",
      "line": 48,
      "type": "csrf",
      "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
      "code": "[HttpPost]",
      "severity": "MEDIUM",
      "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
      "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/FormatterWebSite/Controllers/JsonFormatterController.cs",
      "line": 60,
      "type": "csrf",
      "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
      "code": "[HttpPost]",
      "severity": "MEDIUM",
      "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
      "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/FormatterWebSite/Controllers/JsonFormatterController.cs",
      "line": 71,
      "type": "csrf",
      "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
      "code": "[HttpPost]",
      "severity": "MEDIUM",
      "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
      "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/FormatterWebSite/Controllers/JsonFormatterController.cs",
      "line": 82,
      "type": "csrf",
      "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
      "code": "[HttpPost]",
      "severity": "MEDIUM",
      "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
      "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/FormatterWebSite/Controllers/JsonFormatterController.cs",
      "line": 88,
      "type": "csrf",
      "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
      "code": "[HttpPost]",
      "severity": "MEDIUM",
      "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
      "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/FormatterWebSite/Controllers/JsonFormatterController.cs",
      "line": 113,
      "type": "csrf",
      "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
      "code": "[HttpPost]",
      "severity": "MEDIUM",
      "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
      "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/XmlFormattersWebSite/Startup.cs",
      "line": 18,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/XmlFormattersWebSite/Startup.cs",
      "line": 23,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/XmlFormattersWebSite/Startup.cs",
      "line": 31,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/XmlFormattersWebSite/Startup.cs",
      "line": 32,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/XmlFormattersWebSite/Startup.cs",
      "line": 42,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/XmlFormattersWebSite/Startup.cs",
      "line": 60,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/XmlFormattersWebSite/Controllers/XmlDataContractApiController.cs",
      "line": 27,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/XmlFormattersWebSite/Controllers/SerializableErrorController.cs",
      "line": 31,
      "type": "csrf",
      "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
      "code": "[HttpPost]",
      "severity": "MEDIUM",
      "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
      "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/XmlFormattersWebSite/Controllers/SerializableErrorController.cs",
      "line": 37,
      "type": "csrf",
      "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
      "code": "[HttpPost]",
      "severity": "MEDIUM",
      "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
      "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/XmlFormattersWebSite/Controllers/HomeController.cs",
      "line": 12,
      "type": "csrf",
      "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
      "code": "[HttpPost]",
      "severity": "MEDIUM",
      "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
      "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/ApiBehaviorTest.cs",
      "line": 63,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/ApiBehaviorTest.cs",
      "line": 130,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/ApiBehaviorTest.cs",
      "line": 157,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/ApiBehaviorTest.cs",
      "line": 178,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/ApiBehaviorTest.cs",
      "line": 194,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/ApiBehaviorTest.cs",
      "line": 211,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/ApiBehaviorTest.cs",
      "line": 300,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/ApiBehaviorTest.cs",
      "line": 360,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/ApiBehaviorTest.cs",
      "line": 453,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/ConsumesAttributeTestsBase.cs",
      "line": 106,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/ConsumesAttributeTestsBase.cs",
      "line": 128,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/ConsumesAttributeTestsBase.cs",
      "line": 153,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/ConsumesAttributeTestsBase.cs",
      "line": 172,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/ConsumesAttributeTestsBase.cs",
      "line": 195,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/RequestServicesEndpointRoutingTest.cs",
      "line": 21,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/JsonOutputFormatterTestBase.cs",
      "line": 64,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/XmlOutputFormatterTests.cs",
      "line": 37,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/XmlOutputFormatterTests.cs",
      "line": 82,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/XmlOutputFormatterTests.cs",
      "line": 87,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/XmlOutputFormatterTests.cs",
      "line": 126,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/XmlOutputFormatterTests.cs",
      "line": 210,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/XmlOutputFormatterTests.cs",
      "line": 231,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/JsonPatchInputFormatterTest.cs",
      "line": 46,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/JsonPatchInputFormatterTest.cs",
      "line": 66,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/JsonPatchInputFormatterTest.cs",
      "line": 86,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/JsonPatchInputFormatterTest.cs",
      "line": 107,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/JsonPatchInputFormatterTest.cs",
      "line": 128,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/VersioningTests.cs",
      "line": 21,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/RoutingTests.cs",
      "line": 23,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/RoutingTests.cs",
      "line": 52,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/RoutingTests.cs",
      "line": 74,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/InputParentValidationTests.cs",
      "line": 57,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/InputParentValidationTests.cs",
      "line": 76,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/VersioningEndpointRoutingTests.cs",
      "line": 22,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/VersioningEndpointRoutingTests.cs",
      "line": 41,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/VersioningEndpointRoutingTests.cs",
      "line": 62,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/RoutingWithoutRazorPagesTestsBase.cs",
      "line": 46,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/RoutingWithoutRazorPagesTestsBase.cs",
      "line": 67,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/RoutingEndpointRoutingTest.cs",
      "line": 22,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/RoutingEndpointRoutingTest.cs",
      "line": 43,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/RoutingEndpointRoutingTest.cs",
      "line": 69,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/RoutingEndpointRoutingTest.cs",
      "line": 85,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/RoutingEndpointRoutingTest.cs",
      "line": 101,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/RoutingEndpointRoutingTest.cs",
      "line": 129,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/RoutingEndpointRoutingTest.cs",
      "line": 149,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/RoutingEndpointRoutingTest.cs",
      "line": 169,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/RoutingEndpointRoutingTest.cs",
      "line": 189,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/RoutingEndpointRoutingTest.cs",
      "line": 207,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/RoutingEndpointRoutingTest.cs",
      "line": 222,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/RoutingEndpointRoutingTest.cs",
      "line": 239,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/RoutingEndpointRoutingTest.cs",
      "line": 266,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/RoutingEndpointRoutingTest.cs",
      "line": 291,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/RoutingEndpointRoutingTest.cs",
      "line": 306,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/RoutingEndpointRoutingTest.cs",
      "line": 326,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/RoutingEndpointRoutingTest.cs",
      "line": 345,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/RoutingEndpointRoutingTest.cs",
      "line": 364,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/RoutingTestsBase.cs",
      "line": 50,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/RoutingTestsBase.cs",
      "line": 68,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/RoutingTestsBase.cs",
      "line": 94,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/RoutingTestsBase.cs",
      "line": 116,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/RoutingTestsBase.cs",
      "line": 136,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/RoutingTestsBase.cs",
      "line": 165,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/RoutingTestsBase.cs",
      "line": 176,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/RoutingTestsBase.cs",
      "line": 197,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/RoutingTestsBase.cs",
      "line": 209,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/RoutingTestsBase.cs",
      "line": 267,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/RoutingTestsBase.cs",
      "line": 291,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/RoutingTestsBase.cs",
      "line": 325,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/RoutingTestsBase.cs",
      "line": 362,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/RoutingTestsBase.cs",
      "line": 377,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/RoutingTestsBase.cs",
      "line": 410,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/RoutingTestsBase.cs",
      "line": 475,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/RoutingTestsBase.cs",
      "line": 502,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/RoutingTestsBase.cs",
      "line": 544,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/RoutingTestsBase.cs",
      "line": 572,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/RoutingTestsBase.cs",
      "line": 638,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/RoutingTestsBase.cs",
      "line": 655,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/RoutingTestsBase.cs",
      "line": 685,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/RoutingTestsBase.cs",
      "line": 712,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/RoutingTestsBase.cs",
      "line": 737,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/RoutingTestsBase.cs",
      "line": 757,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/RoutingTestsBase.cs",
      "line": 780,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/RoutingTestsBase.cs",
      "line": 802,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/RoutingTestsBase.cs",
      "line": 827,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/RoutingTestsBase.cs",
      "line": 847,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/RoutingTestsBase.cs",
      "line": 870,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/RoutingTestsBase.cs",
      "line": 891,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/RoutingTestsBase.cs",
      "line": 912,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/RoutingTestsBase.cs",
      "line": 933,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/RoutingTestsBase.cs",
      "line": 972,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/RoutingTestsBase.cs",
      "line": 988,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/RoutingTestsBase.cs",
      "line": 1008,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/RoutingTestsBase.cs",
      "line": 1028,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/RoutingTestsBase.cs",
      "line": 1048,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/RoutingTestsBase.cs",
      "line": 1072,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/RoutingTestsBase.cs",
      "line": 1090,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/RoutingTestsBase.cs",
      "line": 1112,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/RoutingTestsBase.cs",
      "line": 1130,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/RoutingTestsBase.cs",
      "line": 1152,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/RoutingTestsBase.cs",
      "line": 1173,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/RoutingTestsBase.cs",
      "line": 1194,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/RoutingTestsBase.cs",
      "line": 1216,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/RoutingTestsBase.cs",
      "line": 1238,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/RoutingTestsBase.cs",
      "line": 1260,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/RoutingTestsBase.cs",
      "line": 1282,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/RoutingTestsBase.cs",
      "line": 1302,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/RoutingTestsBase.cs",
      "line": 1323,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/RoutingTestsBase.cs",
      "line": 1344,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/RoutingTestsBase.cs",
      "line": 1364,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/RoutingTestsBase.cs",
      "line": 1385,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/RoutingTestsBase.cs",
      "line": 1406,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/RoutingTestsBase.cs",
      "line": 1427,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/RoutingTestsBase.cs",
      "line": 1448,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/RoutingTestsBase.cs",
      "line": 1469,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/RoutingTestsBase.cs",
      "line": 1495,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/RoutingTestsBase.cs",
      "line": 1547,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/InputFormatterTests.cs",
      "line": 95,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/InputFormatterTests.cs",
      "line": 127,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/InputFormatterTests.cs",
      "line": 159,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/XmlDataContractSerializerInputFormatterTest.cs",
      "line": 16,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/XmlDataContractSerializerInputFormatterTest.cs",
      "line": 66,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/XmlDataContractSerializerInputFormatterTest.cs",
      "line": 97,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/ConsumesAttributeTests.cs",
      "line": 21,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/ContentNegotiationTest.cs",
      "line": 498,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/ContentNegotiationTest.cs",
      "line": 516,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/ConsumesAttributeEndpointRoutingTests.cs",
      "line": 21,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/RequestServicesTest.cs",
      "line": 21,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/InputValidationTests.cs",
      "line": 87,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/ApiExplorerTest.cs",
      "line": 47,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/ApiExplorerTest.cs",
      "line": 60,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/ApiExplorerTest.cs",
      "line": 73,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/ApiExplorerTest.cs",
      "line": 86,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/ApiExplorerTest.cs",
      "line": 99,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/ApiExplorerTest.cs",
      "line": 113,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/ApiExplorerTest.cs",
      "line": 127,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/ApiExplorerTest.cs",
      "line": 141,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/ApiExplorerTest.cs",
      "line": 155,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/ApiExplorerTest.cs",
      "line": 169,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/ApiExplorerTest.cs",
      "line": 183,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/ApiExplorerTest.cs",
      "line": 206,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/ApiExplorerTest.cs",
      "line": 229,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/ApiExplorerTest.cs",
      "line": 251,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/ApiExplorerTest.cs",
      "line": 280,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/ApiExplorerTest.cs",
      "line": 316,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/ApiExplorerTest.cs",
      "line": 351,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/ApiExplorerTest.cs",
      "line": 375,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/ApiExplorerTest.cs",
      "line": 393,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/ApiExplorerTest.cs",
      "line": 407,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/ApiExplorerTest.cs",
      "line": 428,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/ApiExplorerTest.cs",
      "line": 451,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/ApiExplorerTest.cs",
      "line": 470,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/ApiExplorerTest.cs",
      "line": 490,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/ApiExplorerTest.cs",
      "line": 514,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/ApiExplorerTest.cs",
      "line": 534,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/ApiExplorerTest.cs",
      "line": 557,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/ApiExplorerTest.cs",
      "line": 579,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/ApiExplorerTest.cs",
      "line": 600,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/ApiExplorerTest.cs",
      "line": 624,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/ApiExplorerTest.cs",
      "line": 656,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/ApiExplorerTest.cs",
      "line": 688,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/ApiExplorerTest.cs",
      "line": 720,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/ApiExplorerTest.cs",
      "line": 750,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/ApiExplorerTest.cs",
      "line": 787,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/ApiExplorerTest.cs",
      "line": 822,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/ApiExplorerTest.cs",
      "line": 852,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/ApiExplorerTest.cs",
      "line": 878,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/ApiExplorerTest.cs",
      "line": 902,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/ApiExplorerTest.cs",
      "line": 931,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/ApiExplorerTest.cs",
      "line": 957,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/ApiExplorerTest.cs",
      "line": 975,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/ApiExplorerTest.cs",
      "line": 1000,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/ApiExplorerTest.cs",
      "line": 1024,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/ApiExplorerTest.cs",
      "line": 1048,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/ApiExplorerTest.cs",
      "line": 1072,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/ApiExplorerTest.cs",
      "line": 1116,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/ApiExplorerTest.cs",
      "line": 1148,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/ApiExplorerTest.cs",
      "line": 1183,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/ApiExplorerTest.cs",
      "line": 1204,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/ApiExplorerTest.cs",
      "line": 1217,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/ApiExplorerTest.cs",
      "line": 1230,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/ApiExplorerTest.cs",
      "line": 1246,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/ApiExplorerTest.cs",
      "line": 1274,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/ApiExplorerTest.cs",
      "line": 1308,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/ApiExplorerTest.cs",
      "line": 1335,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/ApiExplorerTest.cs",
      "line": 1366,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/ApiExplorerTest.cs",
      "line": 1401,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/ApiExplorerTest.cs",
      "line": 1436,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/ApiExplorerTest.cs",
      "line": 1476,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/ApiExplorerTest.cs",
      "line": 1517,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/ApiExplorerTest.cs",
      "line": 1546,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/ApiExplorerTest.cs",
      "line": 861,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/ApiExplorerTest.cs",
      "line": 863,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/ApiExplorerTest.cs",
      "line": 945,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/VersioningTestsBase.cs",
      "line": 54,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/VersioningTestsBase.cs",
      "line": 78,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/VersioningTestsBase.cs",
      "line": 98,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/VersioningTestsBase.cs",
      "line": 119,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/VersioningTestsBase.cs",
      "line": 138,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/VersioningTestsBase.cs",
      "line": 157,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/VersioningTestsBase.cs",
      "line": 184,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/VersioningTestsBase.cs",
      "line": 233,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/VersioningTestsBase.cs",
      "line": 278,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/VersioningTestsBase.cs",
      "line": 300,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/VersioningTestsBase.cs",
      "line": 321,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/VersioningTestsBase.cs",
      "line": 342,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/VersioningTestsBase.cs",
      "line": 364,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/VersioningTestsBase.cs",
      "line": 385,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/VersioningTestsBase.cs",
      "line": 404,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/VersioningTestsBase.cs",
      "line": 426,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/VersioningTestsBase.cs",
      "line": 447,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/VersioningTestsBase.cs",
      "line": 468,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/VersioningTestsBase.cs",
      "line": 492,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/VersioningTestsBase.cs",
      "line": 511,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/VersioningTestsBase.cs",
      "line": 530,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/VersioningTestsBase.cs",
      "line": 552,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/AntiforgeryMiddlewareTest.cs",
      "line": 206,
      "type": "csrf",
      "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
      "code": "[HttpPost]",
      "severity": "MEDIUM",
      "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
      "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/AntiforgeryMiddlewareTest.cs",
      "line": 211,
      "type": "csrf",
      "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
      "code": "[HttpPost]",
      "severity": "MEDIUM",
      "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
      "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/AntiforgeryMiddlewareTest.cs",
      "line": 217,
      "type": "csrf",
      "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
      "code": "[HttpPost]",
      "severity": "MEDIUM",
      "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
      "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/AntiforgeryMiddlewareTest.cs",
      "line": 240,
      "type": "csrf",
      "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
      "code": "[HttpPost]",
      "severity": "MEDIUM",
      "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
      "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/XmlDataContractSerializerFormattersWrappingTest.cs",
      "line": 18,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/InputObjectValidationTests.cs",
      "line": 147,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/InputObjectValidationTests.cs",
      "line": 175,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/InputObjectValidationTests.cs",
      "line": 300,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/InputObjectValidationTests.cs",
      "line": 329,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/Mvc.FunctionalTests/InputObjectValidationTests.cs",
      "line": 361,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc/test/MvcOptionsSetupTest.cs",
      "line": 163,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.ViewFeatures/test/ViewDataDictionaryTest.cs",
      "line": 492,
      "type": "xss",
      "pattern": "eval\\(",
      "code": "Eval(",
      "severity": "HIGH",
      "description": "Cross-Site Scripting (XSS) vulnerability - potential for client-side code injection",
      "recommendation": "Encode output, use AntiXSS library, implement CSP"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.ViewFeatures/test/ViewDataDictionaryTest.cs",
      "line": 506,
      "type": "xss",
      "pattern": "eval\\(",
      "code": "Eval(",
      "severity": "HIGH",
      "description": "Cross-Site Scripting (XSS) vulnerability - potential for client-side code injection",
      "recommendation": "Encode output, use AntiXSS library, implement CSP"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.ViewFeatures/test/ViewDataDictionaryTest.cs",
      "line": 521,
      "type": "xss",
      "pattern": "eval\\(",
      "code": "Eval(",
      "severity": "HIGH",
      "description": "Cross-Site Scripting (XSS) vulnerability - potential for client-side code injection",
      "recommendation": "Encode output, use AntiXSS library, implement CSP"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.ViewFeatures/test/ViewDataDictionaryTest.cs",
      "line": 535,
      "type": "xss",
      "pattern": "eval\\(",
      "code": "Eval(",
      "severity": "HIGH",
      "description": "Cross-Site Scripting (XSS) vulnerability - potential for client-side code injection",
      "recommendation": "Encode output, use AntiXSS library, implement CSP"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.ViewFeatures/test/ViewDataDictionaryTest.cs",
      "line": 549,
      "type": "xss",
      "pattern": "eval\\(",
      "code": "Eval(",
      "severity": "HIGH",
      "description": "Cross-Site Scripting (XSS) vulnerability - potential for client-side code injection",
      "recommendation": "Encode output, use AntiXSS library, implement CSP"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.ViewFeatures/test/ViewDataDictionaryTest.cs",
      "line": 563,
      "type": "xss",
      "pattern": "eval\\(",
      "code": "Eval(",
      "severity": "HIGH",
      "description": "Cross-Site Scripting (XSS) vulnerability - potential for client-side code injection",
      "recommendation": "Encode output, use AntiXSS library, implement CSP"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.ViewFeatures/test/ViewDataDictionaryTest.cs",
      "line": 570,
      "type": "xss",
      "pattern": "eval\\(",
      "code": "Eval(",
      "severity": "HIGH",
      "description": "Cross-Site Scripting (XSS) vulnerability - potential for client-side code injection",
      "recommendation": "Encode output, use AntiXSS library, implement CSP"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.ViewFeatures/test/ViewDataDictionaryTest.cs",
      "line": 577,
      "type": "xss",
      "pattern": "eval\\(",
      "code": "Eval(",
      "severity": "HIGH",
      "description": "Cross-Site Scripting (XSS) vulnerability - potential for client-side code injection",
      "recommendation": "Encode output, use AntiXSS library, implement CSP"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.ViewFeatures/test/ViewDataDictionaryTest.cs",
      "line": 591,
      "type": "xss",
      "pattern": "eval\\(",
      "code": "Eval(",
      "severity": "HIGH",
      "description": "Cross-Site Scripting (XSS) vulnerability - potential for client-side code injection",
      "recommendation": "Encode output, use AntiXSS library, implement CSP"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.ViewFeatures/test/ViewDataDictionaryTest.cs",
      "line": 609,
      "type": "xss",
      "pattern": "eval\\(",
      "code": "Eval(",
      "severity": "HIGH",
      "description": "Cross-Site Scripting (XSS) vulnerability - potential for client-side code injection",
      "recommendation": "Encode output, use AntiXSS library, implement CSP"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.ViewFeatures/test/ViewDataDictionaryTest.cs",
      "line": 627,
      "type": "xss",
      "pattern": "eval\\(",
      "code": "Eval(",
      "severity": "HIGH",
      "description": "Cross-Site Scripting (XSS) vulnerability - potential for client-side code injection",
      "recommendation": "Encode output, use AntiXSS library, implement CSP"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.ViewFeatures/test/ViewDataDictionaryTest.cs",
      "line": 645,
      "type": "xss",
      "pattern": "eval\\(",
      "code": "Eval(",
      "severity": "HIGH",
      "description": "Cross-Site Scripting (XSS) vulnerability - potential for client-side code injection",
      "recommendation": "Encode output, use AntiXSS library, implement CSP"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.ViewFeatures/test/ViewDataDictionaryTest.cs",
      "line": 662,
      "type": "xss",
      "pattern": "eval\\(",
      "code": "Eval(",
      "severity": "HIGH",
      "description": "Cross-Site Scripting (XSS) vulnerability - potential for client-side code injection",
      "recommendation": "Encode output, use AntiXSS library, implement CSP"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.ViewFeatures/test/ViewDataDictionaryTest.cs",
      "line": 676,
      "type": "xss",
      "pattern": "eval\\(",
      "code": "Eval(",
      "severity": "HIGH",
      "description": "Cross-Site Scripting (XSS) vulnerability - potential for client-side code injection",
      "recommendation": "Encode output, use AntiXSS library, implement CSP"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.ViewFeatures/test/ViewDataDictionaryTest.cs",
      "line": 690,
      "type": "xss",
      "pattern": "eval\\(",
      "code": "Eval(",
      "severity": "HIGH",
      "description": "Cross-Site Scripting (XSS) vulnerability - potential for client-side code injection",
      "recommendation": "Encode output, use AntiXSS library, implement CSP"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.ViewFeatures/test/ViewDataDictionaryTest.cs",
      "line": 711,
      "type": "xss",
      "pattern": "eval\\(",
      "code": "Eval(",
      "severity": "HIGH",
      "description": "Cross-Site Scripting (XSS) vulnerability - potential for client-side code injection",
      "recommendation": "Encode output, use AntiXSS library, implement CSP"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.ViewFeatures/test/ViewDataDictionaryTest.cs",
      "line": 724,
      "type": "xss",
      "pattern": "eval\\(",
      "code": "Eval(",
      "severity": "HIGH",
      "description": "Cross-Site Scripting (XSS) vulnerability - potential for client-side code injection",
      "recommendation": "Encode output, use AntiXSS library, implement CSP"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.ViewFeatures/test/ViewDataDictionaryTest.cs",
      "line": 738,
      "type": "xss",
      "pattern": "eval\\(",
      "code": "Eval(",
      "severity": "HIGH",
      "description": "Cross-Site Scripting (XSS) vulnerability - potential for client-side code injection",
      "recommendation": "Encode output, use AntiXSS library, implement CSP"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.ViewFeatures/test/ViewDataDictionaryTest.cs",
      "line": 752,
      "type": "xss",
      "pattern": "eval\\(",
      "code": "Eval(",
      "severity": "HIGH",
      "description": "Cross-Site Scripting (XSS) vulnerability - potential for client-side code injection",
      "recommendation": "Encode output, use AntiXSS library, implement CSP"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.ViewFeatures/test/ViewDataDictionaryTest.cs",
      "line": 773,
      "type": "xss",
      "pattern": "eval\\(",
      "code": "Eval(",
      "severity": "HIGH",
      "description": "Cross-Site Scripting (XSS) vulnerability - potential for client-side code injection",
      "recommendation": "Encode output, use AntiXSS library, implement CSP"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.ViewFeatures/test/ViewDataDictionaryTest.cs",
      "line": 794,
      "type": "xss",
      "pattern": "eval\\(",
      "code": "Eval(",
      "severity": "HIGH",
      "description": "Cross-Site Scripting (XSS) vulnerability - potential for client-side code injection",
      "recommendation": "Encode output, use AntiXSS library, implement CSP"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.ViewFeatures/test/Filters/AntiforgeryApplicationModelProviderTest.cs",
      "line": 192,
      "type": "csrf",
      "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
      "code": "[HttpPost]",
      "severity": "MEDIUM",
      "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
      "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.ViewFeatures/test/Filters/AntiforgeryApplicationModelProviderTest.cs",
      "line": 203,
      "type": "csrf",
      "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
      "code": "[HttpPost]",
      "severity": "MEDIUM",
      "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
      "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.ViewFeatures/test/Filters/AntiforgeryApplicationModelProviderTest.cs",
      "line": 215,
      "type": "csrf",
      "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
      "code": "[HttpPost]",
      "severity": "MEDIUM",
      "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
      "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.ViewFeatures/test/Filters/AntiforgeryApplicationModelProviderTest.cs",
      "line": 225,
      "type": "csrf",
      "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
      "code": "[HttpPost]",
      "severity": "MEDIUM",
      "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
      "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.ViewFeatures/test/Filters/AntiforgeryApplicationModelProviderTest.cs",
      "line": 234,
      "type": "csrf",
      "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
      "code": "[HttpPost]",
      "severity": "MEDIUM",
      "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
      "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.ViewFeatures/test/Filters/AntiforgeryApplicationModelProviderTest.cs",
      "line": 237,
      "type": "csrf",
      "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
      "code": "[HttpPost]",
      "severity": "MEDIUM",
      "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
      "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.ViewFeatures/test/Filters/AntiforgeryApplicationModelProviderTest.cs",
      "line": 150,
      "type": "dangerous_api",
      "pattern": "Type.GetType",
      "code": "controllerType.GetTypeInfo()",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Type.GetType",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.ViewFeatures/test/Rendering/TagBuilderTest.cs",
      "line": 190,
      "type": "xss",
      "pattern": "innerHTML\\s*=",
      "code": "innerHtml =",
      "severity": "HIGH",
      "description": "Cross-Site Scripting (XSS) vulnerability - potential for client-side code injection",
      "recommendation": "Encode output, use AntiXSS library, implement CSP"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.ViewFeatures/test/ViewComponents/DefaultViewComponentActivatorTests.cs",
      "line": 87,
      "type": "dangerous_api",
      "pattern": "Type.GetType",
      "code": "TypeInfo = componentType.GetTypeInfo()",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Type.GetType",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.ViewFeatures/src/AutoValidateAntiforgeryTokenAttribute.cs",
      "line": 13,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "/// An attribute that causes validation of antiforgery tokens for all unsafe HTTP methods. An antiforgery",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.ViewFeatures/src/DefaultHtmlGenerator.cs",
      "line": 918,
      "type": "xss",
      "pattern": "eval\\(",
      "code": "Eval(",
      "severity": "HIGH",
      "description": "Cross-Site Scripting (XSS) vulnerability - potential for client-side code injection",
      "recommendation": "Encode output, use AntiXSS library, implement CSP"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.ViewFeatures/src/DefaultHtmlGenerator.cs",
      "line": 1030,
      "type": "xss",
      "pattern": "eval\\(",
      "code": "Eval(",
      "severity": "HIGH",
      "description": "Cross-Site Scripting (XSS) vulnerability - potential for client-side code injection",
      "recommendation": "Encode output, use AntiXSS library, implement CSP"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.ViewFeatures/src/DefaultHtmlGenerator.cs",
      "line": 1410,
      "type": "xss",
      "pattern": "eval\\(",
      "code": "Eval(",
      "severity": "HIGH",
      "description": "Cross-Site Scripting (XSS) vulnerability - potential for client-side code injection",
      "recommendation": "Encode output, use AntiXSS library, implement CSP"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.ViewFeatures/src/DefaultHtmlGenerator.cs",
      "line": 1415,
      "type": "xss",
      "pattern": "eval\\(",
      "code": "Eval(",
      "severity": "HIGH",
      "description": "Cross-Site Scripting (XSS) vulnerability - potential for client-side code injection",
      "recommendation": "Encode output, use AntiXSS library, implement CSP"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.ViewFeatures/src/DefaultHtmlGenerator.cs",
      "line": 1494,
      "type": "xss",
      "pattern": "eval\\(",
      "code": "Eval(",
      "severity": "HIGH",
      "description": "Cross-Site Scripting (XSS) vulnerability - potential for client-side code injection",
      "recommendation": "Encode output, use AntiXSS library, implement CSP"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.ViewFeatures/src/DefaultHtmlGenerator.cs",
      "line": 1504,
      "type": "xss",
      "pattern": "eval\\(",
      "code": "Eval(",
      "severity": "HIGH",
      "description": "Cross-Site Scripting (XSS) vulnerability - potential for client-side code injection",
      "recommendation": "Encode output, use AntiXSS library, implement CSP"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.ViewFeatures/src/DefaultEditorTemplates.cs",
      "line": 526,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "public override unsafe int FindFirstCharacterToEncode(char* text, int textLength)",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.ViewFeatures/src/DefaultEditorTemplates.cs",
      "line": 531,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "public override unsafe bool TryEncodeUnicodeScalar(",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.ViewFeatures/src/ViewDataEvaluator.cs",
      "line": 25,
      "type": "xss",
      "pattern": "eval\\(",
      "code": "Eval(",
      "severity": "HIGH",
      "description": "Cross-Site Scripting (XSS) vulnerability - potential for client-side code injection",
      "recommendation": "Encode output, use AntiXSS library, implement CSP"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.ViewFeatures/src/ViewDataEvaluator.cs",
      "line": 76,
      "type": "xss",
      "pattern": "eval\\(",
      "code": "Eval(",
      "severity": "HIGH",
      "description": "Cross-Site Scripting (XSS) vulnerability - potential for client-side code injection",
      "recommendation": "Encode output, use AntiXSS library, implement CSP"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.ViewFeatures/src/ViewDataEvaluator.cs",
      "line": 78,
      "type": "xss",
      "pattern": "eval\\(",
      "code": "Eval(",
      "severity": "HIGH",
      "description": "Cross-Site Scripting (XSS) vulnerability - potential for client-side code injection",
      "recommendation": "Encode output, use AntiXSS library, implement CSP"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.ViewFeatures/src/ViewDataEvaluator.cs",
      "line": 137,
      "type": "xss",
      "pattern": "eval\\(",
      "code": "Eval(",
      "severity": "HIGH",
      "description": "Cross-Site Scripting (XSS) vulnerability - potential for client-side code injection",
      "recommendation": "Encode output, use AntiXSS library, implement CSP"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.ViewFeatures/src/ViewDataDictionary.cs",
      "line": 359,
      "type": "xss",
      "pattern": "eval\\(",
      "code": "Eval(",
      "severity": "HIGH",
      "description": "Cross-Site Scripting (XSS) vulnerability - potential for client-side code injection",
      "recommendation": "Encode output, use AntiXSS library, implement CSP"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.ViewFeatures/src/ViewDataDictionary.cs",
      "line": 381,
      "type": "xss",
      "pattern": "eval\\(",
      "code": "Eval(",
      "severity": "HIGH",
      "description": "Cross-Site Scripting (XSS) vulnerability - potential for client-side code injection",
      "recommendation": "Encode output, use AntiXSS library, implement CSP"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.ViewFeatures/src/ViewDataDictionary.cs",
      "line": 383,
      "type": "xss",
      "pattern": "eval\\(",
      "code": "Eval(",
      "severity": "HIGH",
      "description": "Cross-Site Scripting (XSS) vulnerability - potential for client-side code injection",
      "recommendation": "Encode output, use AntiXSS library, implement CSP"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.ViewFeatures/src/ViewDataDictionary.cs",
      "line": 430,
      "type": "xss",
      "pattern": "eval\\(",
      "code": "Eval(",
      "severity": "HIGH",
      "description": "Cross-Site Scripting (XSS) vulnerability - potential for client-side code injection",
      "recommendation": "Encode output, use AntiXSS library, implement CSP"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.ViewFeatures/src/ExpressionMetadataProvider.cs",
      "line": 143,
      "type": "xss",
      "pattern": "eval\\(",
      "code": "Eval(",
      "severity": "HIGH",
      "description": "Cross-Site Scripting (XSS) vulnerability - potential for client-side code injection",
      "recommendation": "Encode output, use AntiXSS library, implement CSP"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.ViewFeatures/src/IHtmlGenerator.cs",
      "line": 566,
      "type": "xss",
      "pattern": "eval\\(",
      "code": "Eval(",
      "severity": "HIGH",
      "description": "Cross-Site Scripting (XSS) vulnerability - potential for client-side code injection",
      "recommendation": "Encode output, use AntiXSS library, implement CSP"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.ViewFeatures/src/Rendering/MultiSelectList.cs",
      "line": 163,
      "type": "xss",
      "pattern": "eval\\(",
      "code": "Eval(",
      "severity": "HIGH",
      "description": "Cross-Site Scripting (XSS) vulnerability - potential for client-side code injection",
      "recommendation": "Encode output, use AntiXSS library, implement CSP"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.ViewFeatures/src/Rendering/MultiSelectList.cs",
      "line": 168,
      "type": "xss",
      "pattern": "eval\\(",
      "code": "Eval(",
      "severity": "HIGH",
      "description": "Cross-Site Scripting (XSS) vulnerability - potential for client-side code injection",
      "recommendation": "Encode output, use AntiXSS library, implement CSP"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.ViewFeatures/src/Rendering/MultiSelectList.cs",
      "line": 192,
      "type": "xss",
      "pattern": "eval\\(",
      "code": "Eval(",
      "severity": "HIGH",
      "description": "Cross-Site Scripting (XSS) vulnerability - potential for client-side code injection",
      "recommendation": "Encode output, use AntiXSS library, implement CSP"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.ViewFeatures/src/Rendering/MultiSelectList.cs",
      "line": 202,
      "type": "xss",
      "pattern": "eval\\(",
      "code": "Eval(",
      "severity": "HIGH",
      "description": "Cross-Site Scripting (XSS) vulnerability - potential for client-side code injection",
      "recommendation": "Encode output, use AntiXSS library, implement CSP"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.ViewFeatures/src/Rendering/MultiSelectList.cs",
      "line": 207,
      "type": "xss",
      "pattern": "eval\\(",
      "code": "Eval(",
      "severity": "HIGH",
      "description": "Cross-Site Scripting (XSS) vulnerability - potential for client-side code injection",
      "recommendation": "Encode output, use AntiXSS library, implement CSP"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.ViewFeatures/src/Rendering/MultiSelectList.cs",
      "line": 221,
      "type": "xss",
      "pattern": "eval\\(",
      "code": "Eval(",
      "severity": "HIGH",
      "description": "Cross-Site Scripting (XSS) vulnerability - potential for client-side code injection",
      "recommendation": "Encode output, use AntiXSS library, implement CSP"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.ViewFeatures/src/Rendering/TagBuilder.cs",
      "line": 94,
      "type": "xss",
      "pattern": "innerHTML\\s*=",
      "code": "innerHtml =",
      "severity": "HIGH",
      "description": "Cross-Site Scripting (XSS) vulnerability - potential for client-side code injection",
      "recommendation": "Encode output, use AntiXSS library, implement CSP"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.ViewFeatures/src/Rendering/TagBuilder.cs",
      "line": 96,
      "type": "xss",
      "pattern": "innerHTML\\s*=",
      "code": "innerHtml =",
      "severity": "HIGH",
      "description": "Cross-Site Scripting (XSS) vulnerability - potential for client-side code injection",
      "recommendation": "Encode output, use AntiXSS library, implement CSP"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.ViewFeatures/src/Rendering/TagBuilder.cs",
      "line": 106,
      "type": "xss",
      "pattern": "innerHTML\\s*=",
      "code": "InnerHtml =",
      "severity": "HIGH",
      "description": "Cross-Site Scripting (XSS) vulnerability - potential for client-side code injection",
      "recommendation": "Encode output, use AntiXSS library, implement CSP"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.ViewFeatures/src/ViewComponents/DefaultViewComponentHelper.cs",
      "line": 99,
      "type": "dangerous_api",
      "pattern": "Type.GetType",
      "code": "if (descriptor.TypeInfo == componentType.GetTypeInfo())",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Type.GetType",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/ValidationProblemDetailsWrapperTest.cs",
      "line": 29,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/ValidationProblemDetailsWrapperTest.cs",
      "line": 85,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/ValidationProblemDetailsWrapperTest.cs",
      "line": 123,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/ValidationProblemDetailsWrapperTest.cs",
      "line": 175,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "dataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/ValidationProblemDetailsWrapperTest.cs",
      "line": 175,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/ValidationProblemDetailsWrapperTest.cs",
      "line": 176,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "dataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/ValidationProblemDetailsWrapperTest.cs",
      "line": 213,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "dataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/ValidationProblemDetailsWrapperTest.cs",
      "line": 213,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/ValidationProblemDetailsWrapperTest.cs",
      "line": 214,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "dataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/XmlDataContractSerializerInputFormatterTest.cs",
      "line": 16,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/XmlDataContractSerializerInputFormatterTest.cs",
      "line": 70,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/XmlDataContractSerializerInputFormatterTest.cs",
      "line": 92,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/XmlDataContractSerializerInputFormatterTest.cs",
      "line": 97,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/XmlDataContractSerializerInputFormatterTest.cs",
      "line": 113,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/XmlDataContractSerializerInputFormatterTest.cs",
      "line": 126,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/XmlDataContractSerializerInputFormatterTest.cs",
      "line": 144,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/XmlDataContractSerializerInputFormatterTest.cs",
      "line": 176,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/XmlDataContractSerializerInputFormatterTest.cs",
      "line": 208,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/XmlDataContractSerializerInputFormatterTest.cs",
      "line": 243,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/XmlDataContractSerializerInputFormatterTest.cs",
      "line": 275,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/XmlDataContractSerializerInputFormatterTest.cs",
      "line": 307,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/XmlDataContractSerializerInputFormatterTest.cs",
      "line": 335,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/XmlDataContractSerializerInputFormatterTest.cs",
      "line": 373,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/XmlDataContractSerializerInputFormatterTest.cs",
      "line": 398,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/XmlDataContractSerializerInputFormatterTest.cs",
      "line": 420,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/XmlDataContractSerializerInputFormatterTest.cs",
      "line": 436,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/XmlDataContractSerializerInputFormatterTest.cs",
      "line": 449,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/XmlDataContractSerializerInputFormatterTest.cs",
      "line": 461,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/XmlDataContractSerializerInputFormatterTest.cs",
      "line": 490,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/XmlDataContractSerializerInputFormatterTest.cs",
      "line": 508,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/XmlDataContractSerializerInputFormatterTest.cs",
      "line": 545,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/XmlDataContractSerializerInputFormatterTest.cs",
      "line": 571,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/XmlDataContractSerializerInputFormatterTest.cs",
      "line": 610,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/XmlDataContractSerializerInputFormatterTest.cs",
      "line": 634,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/XmlDataContractSerializerInputFormatterTest.cs",
      "line": 639,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/XmlDataContractSerializerInputFormatterTest.cs",
      "line": 669,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/XmlDataContractSerializerInputFormatterTest.cs",
      "line": 694,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/XmlDataContractSerializerInputFormatterTest.cs",
      "line": 698,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/XmlDataContractSerializerInputFormatterTest.cs",
      "line": 753,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/XmlDataContractSerializerInputFormatterTest.cs",
      "line": 753,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/XmlDataContractSerializerInputFormatterTest.cs",
      "line": 757,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/XmlDataContractSerializerInputFormatterTest.cs",
      "line": 762,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/SerializableErrorWrapperTests.cs",
      "line": 63,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/SerializableErrorWrapperTests.cs",
      "line": 116,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "dataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/SerializableErrorWrapperTests.cs",
      "line": 116,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/SerializableErrorWrapperTests.cs",
      "line": 117,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "dataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/XmlDataContractSerializerOutputFormatterTest.cs",
      "line": 20,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/XmlDataContractSerializerOutputFormatterTest.cs",
      "line": 101,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/XmlDataContractSerializerOutputFormatterTest.cs",
      "line": 118,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/XmlDataContractSerializerOutputFormatterTest.cs",
      "line": 122,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/XmlDataContractSerializerOutputFormatterTest.cs",
      "line": 141,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/XmlDataContractSerializerOutputFormatterTest.cs",
      "line": 161,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/XmlDataContractSerializerOutputFormatterTest.cs",
      "line": 190,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/XmlDataContractSerializerOutputFormatterTest.cs",
      "line": 225,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/XmlDataContractSerializerOutputFormatterTest.cs",
      "line": 252,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/XmlDataContractSerializerOutputFormatterTest.cs",
      "line": 284,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/XmlDataContractSerializerOutputFormatterTest.cs",
      "line": 311,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/XmlDataContractSerializerOutputFormatterTest.cs",
      "line": 333,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/XmlDataContractSerializerOutputFormatterTest.cs",
      "line": 351,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/XmlDataContractSerializerOutputFormatterTest.cs",
      "line": 382,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/XmlDataContractSerializerOutputFormatterTest.cs",
      "line": 415,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/XmlDataContractSerializerOutputFormatterTest.cs",
      "line": 446,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/XmlDataContractSerializerOutputFormatterTest.cs",
      "line": 469,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/XmlDataContractSerializerOutputFormatterTest.cs",
      "line": 486,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/XmlDataContractSerializerOutputFormatterTest.cs",
      "line": 515,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/XmlDataContractSerializerOutputFormatterTest.cs",
      "line": 520,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/XmlDataContractSerializerOutputFormatterTest.cs",
      "line": 563,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/XmlDataContractSerializerOutputFormatterTest.cs",
      "line": 567,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/XmlDataContractSerializerOutputFormatterTest.cs",
      "line": 610,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/XmlDataContractSerializerOutputFormatterTest.cs",
      "line": 614,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/XmlDataContractSerializerOutputFormatterTest.cs",
      "line": 631,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/XmlDataContractSerializerOutputFormatterTest.cs",
      "line": 636,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/XmlDataContractSerializerOutputFormatterTest.cs",
      "line": 639,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/XmlDataContractSerializerOutputFormatterTest.cs",
      "line": 643,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/XmlDataContractSerializerOutputFormatterTest.cs",
      "line": 654,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/XmlDataContractSerializerOutputFormatterTest.cs",
      "line": 667,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/XmlDataContractSerializerOutputFormatterTest.cs",
      "line": 675,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/XmlDataContractSerializerOutputFormatterTest.cs",
      "line": 706,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/XmlDataContractSerializerOutputFormatterTest.cs",
      "line": 725,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/XmlDataContractSerializerOutputFormatterTest.cs",
      "line": 765,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/XmlDataContractSerializerOutputFormatterTest.cs",
      "line": 813,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/XmlDataContractSerializerOutputFormatterTest.cs",
      "line": 813,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/XmlDataContractSerializerOutputFormatterTest.cs",
      "line": 817,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/XmlDataContractSerializerOutputFormatterTest.cs",
      "line": 824,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/XmlDataContractSerializerOutputFormatterTest.cs",
      "line": 824,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/ProblemDetailsWrapperTest.cs",
      "line": 25,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/ProblemDetailsWrapperTest.cs",
      "line": 86,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "dataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/ProblemDetailsWrapperTest.cs",
      "line": 86,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/ProblemDetailsWrapperTest.cs",
      "line": 87,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "dataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/DependencyInjection/XmlDataContractSerializerMvcOptionsSetupTest.cs",
      "line": 10,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/DependencyInjection/XmlDataContractSerializerMvcOptionsSetupTest.cs",
      "line": 16,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/DependencyInjection/XmlDataContractSerializerMvcOptionsSetupTest.cs",
      "line": 31,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/DependencyInjection/XmlDataContractSerializerMvcOptionsSetupTest.cs",
      "line": 47,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/DependencyInjection/XmlDataContractSerializerMvcOptionsSetupTest.cs",
      "line": 54,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/DependencyInjection/XmlDataContractSerializerMvcOptionsSetupTest.cs",
      "line": 61,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/test/DependencyInjection/XmlDataContractSerializerMvcOptionsSetupTest.cs",
      "line": 68,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/src/XmlDataContractSerializerInputFormatter.cs",
      "line": 16,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/src/XmlDataContractSerializerInputFormatter.cs",
      "line": 18,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/src/XmlDataContractSerializerInputFormatter.cs",
      "line": 24,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/src/XmlDataContractSerializerInputFormatter.cs",
      "line": 27,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/src/XmlDataContractSerializerInputFormatter.cs",
      "line": 30,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/src/XmlDataContractSerializerInputFormatter.cs",
      "line": 41,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/src/XmlDataContractSerializerInputFormatter.cs",
      "line": 71,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/src/XmlDataContractSerializerInputFormatter.cs",
      "line": 72,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/src/XmlDataContractSerializerInputFormatter.cs",
      "line": 74,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/src/XmlDataContractSerializerInputFormatter.cs",
      "line": 90,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/src/XmlDataContractSerializerInputFormatter.cs",
      "line": 120,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/src/XmlDataContractSerializerInputFormatter.cs",
      "line": 210,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/src/XmlDataContractSerializerInputFormatter.cs",
      "line": 213,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/src/XmlDataContractSerializerInputFormatter.cs",
      "line": 214,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/src/XmlDataContractSerializerInputFormatter.cs",
      "line": 221,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/src/XmlDataContractSerializerInputFormatter.cs",
      "line": 234,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/src/XmlDataContractSerializerInputFormatter.cs",
      "line": 235,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/src/XmlDataContractSerializerInputFormatter.cs",
      "line": 248,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/src/DelegatingEnumerable.cs",
      "line": 25,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/src/XmlDataContractSerializerOutputFormatter.cs",
      "line": 21,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/src/XmlDataContractSerializerOutputFormatter.cs",
      "line": 23,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/src/XmlDataContractSerializerOutputFormatter.cs",
      "line": 27,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/src/XmlDataContractSerializerOutputFormatter.cs",
      "line": 32,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/src/XmlDataContractSerializerOutputFormatter.cs",
      "line": 35,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/src/XmlDataContractSerializerOutputFormatter.cs",
      "line": 41,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/src/XmlDataContractSerializerOutputFormatter.cs",
      "line": 45,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/src/XmlDataContractSerializerOutputFormatter.cs",
      "line": 51,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/src/XmlDataContractSerializerOutputFormatter.cs",
      "line": 53,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/src/XmlDataContractSerializerOutputFormatter.cs",
      "line": 54,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/src/XmlDataContractSerializerOutputFormatter.cs",
      "line": 60,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/src/XmlDataContractSerializerOutputFormatter.cs",
      "line": 62,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/src/XmlDataContractSerializerOutputFormatter.cs",
      "line": 64,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/src/XmlDataContractSerializerOutputFormatter.cs",
      "line": 77,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/src/XmlDataContractSerializerOutputFormatter.cs",
      "line": 100,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/src/XmlDataContractSerializerOutputFormatter.cs",
      "line": 101,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/src/XmlDataContractSerializerOutputFormatter.cs",
      "line": 103,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/src/XmlDataContractSerializerOutputFormatter.cs",
      "line": 142,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/src/XmlDataContractSerializerOutputFormatter.cs",
      "line": 145,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/src/XmlDataContractSerializerOutputFormatter.cs",
      "line": 146,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/src/XmlDataContractSerializerOutputFormatter.cs",
      "line": 156,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/src/XmlDataContractSerializerOutputFormatter.cs",
      "line": 160,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/src/XmlDataContractSerializerOutputFormatter.cs",
      "line": 256,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "dataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/src/XmlDataContractSerializerOutputFormatter.cs",
      "line": 271,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "dataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/src/XmlDataContractSerializerOutputFormatter.cs",
      "line": 292,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/src/XmlDataContractSerializerOutputFormatter.cs",
      "line": 293,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/src/XmlDataContractSerializerOutputFormatter.cs",
      "line": 304,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/src/XmlDataContractSerializerOutputFormatter.cs",
      "line": 320,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/src/XmlDataContractSerializerOutputFormatter.cs",
      "line": 320,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/src/XmlDataContractSerializerOutputFormatter.cs",
      "line": 321,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/src/DependencyInjection/XmlDataContractSerializerMvcOptionsSetup.cs",
      "line": 18,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/src/DependencyInjection/XmlDataContractSerializerMvcOptionsSetup.cs",
      "line": 23,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/src/DependencyInjection/XmlDataContractSerializerMvcOptionsSetup.cs",
      "line": 26,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/src/DependencyInjection/XmlDataContractSerializerMvcOptionsSetup.cs",
      "line": 39,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/src/DependencyInjection/XmlDataContractSerializerMvcOptionsSetup.cs",
      "line": 43,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/src/DependencyInjection/MvcXmlMvcCoreBuilderExtensions.cs",
      "line": 34,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/src/DependencyInjection/MvcXmlMvcCoreBuilderExtensions.cs",
      "line": 38,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/src/DependencyInjection/MvcXmlMvcCoreBuilderExtensions.cs",
      "line": 42,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/src/DependencyInjection/MvcXmlMvcCoreBuilderExtensions.cs",
      "line": 47,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/src/DependencyInjection/MvcXmlMvcCoreBuilderExtensions.cs",
      "line": 52,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/src/DependencyInjection/MvcXmlMvcCoreBuilderExtensions.cs",
      "line": 59,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/src/DependencyInjection/MvcXmlMvcCoreBuilderExtensions.cs",
      "line": 95,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/src/DependencyInjection/MvcXmlMvcCoreBuilderExtensions.cs",
      "line": 98,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/src/DependencyInjection/MvcXmlMvcBuilderExtensions.cs",
      "line": 33,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/src/DependencyInjection/MvcXmlMvcBuilderExtensions.cs",
      "line": 37,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/src/DependencyInjection/MvcXmlMvcBuilderExtensions.cs",
      "line": 41,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/src/DependencyInjection/MvcXmlMvcBuilderExtensions.cs",
      "line": 46,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/src/DependencyInjection/MvcXmlMvcBuilderExtensions.cs",
      "line": 51,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/src/DependencyInjection/MvcXmlMvcBuilderExtensions.cs",
      "line": 58,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/src/DependencyInjection/MvcXmlMvcBuilderExtensions.cs",
      "line": 94,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Formatters.Xml/src/DependencyInjection/MvcXmlMvcBuilderExtensions.cs",
      "line": 97,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.NewtonsoftJson/src/JsonSerializerSettingsProvider.cs",
      "line": 39,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "// Setting this to None prevents Json.NET from loading malicious, unsafe, or security-sensitive types",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Cors/test/CorsApplicationModelProviderTest.cs",
      "line": 263,
      "type": "csrf",
      "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
      "code": "[HttpPost]",
      "severity": "MEDIUM",
      "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
      "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Cors/test/CorsApplicationModelProviderTest.cs",
      "line": 273,
      "type": "csrf",
      "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
      "code": "[HttpPost]",
      "severity": "MEDIUM",
      "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
      "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Cors/test/CorsApplicationModelProviderTest.cs",
      "line": 282,
      "type": "csrf",
      "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
      "code": "[HttpPost]",
      "severity": "MEDIUM",
      "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
      "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Cors/test/CorsApplicationModelProviderTest.cs",
      "line": 213,
      "type": "dangerous_api",
      "pattern": "Type.GetType",
      "code": "var context = new ApplicationModelProviderContext(new[] { controllerType.GetTypeInfo() });",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Type.GetType",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.TagHelpers/test/ScriptTagHelperTest.cs",
      "line": 915,
      "type": "xss",
      "pattern": "document\\.write\\(",
      "code": "document.write(",
      "severity": "HIGH",
      "description": "Cross-Site Scripting (XSS) vulnerability - potential for client-side code injection",
      "recommendation": "Encode output, use AntiXSS library, implement CSP"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.TagHelpers/test/ScriptTagHelperTest.cs",
      "line": 947,
      "type": "xss",
      "pattern": "document\\.write\\(",
      "code": "document.write(",
      "severity": "HIGH",
      "description": "Cross-Site Scripting (XSS) vulnerability - potential for client-side code injection",
      "recommendation": "Encode output, use AntiXSS library, implement CSP"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.TagHelpers/test/ScriptTagHelperTest.cs",
      "line": 961,
      "type": "xss",
      "pattern": "document\\.write\\(",
      "code": "document.write(",
      "severity": "HIGH",
      "description": "Cross-Site Scripting (XSS) vulnerability - potential for client-side code injection",
      "recommendation": "Encode output, use AntiXSS library, implement CSP"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.TagHelpers/src/ScriptTagHelper.cs",
      "line": 375,
      "type": "xss",
      "pattern": "document\\.write\\(",
      "code": "document.write(",
      "severity": "HIGH",
      "description": "Cross-Site Scripting (XSS) vulnerability - potential for client-side code injection",
      "recommendation": "Encode output, use AntiXSS library, implement CSP"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Analyzers/test/TopLevelParameterNameAnalyzerTest.cs",
      "line": 25,
      "type": "csrf",
      "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
      "code": "[HttpPost]",
      "severity": "MEDIUM",
      "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
      "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Analyzers/test/TopLevelParameterNameAnalyzerTest.cs",
      "line": 48,
      "type": "csrf",
      "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
      "code": "[HttpPost]",
      "severity": "MEDIUM",
      "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
      "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Analyzers/test/TopLevelParameterNameAnalyzerTest.cs",
      "line": 75,
      "type": "csrf",
      "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
      "code": "[HttpPost]",
      "severity": "MEDIUM",
      "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
      "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Analyzers/test/TopLevelParameterNameAnalyzerTest.cs",
      "line": 102,
      "type": "csrf",
      "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
      "code": "[HttpPost]",
      "severity": "MEDIUM",
      "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
      "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Analyzers/test/TopLevelParameterNameAnalyzerTest.cs",
      "line": 122,
      "type": "csrf",
      "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
      "code": "[HttpPost]",
      "severity": "MEDIUM",
      "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
      "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Analyzers/test/TopLevelParameterNameAnalyzerTest.cs",
      "line": 410,
      "type": "dangerous_api",
      "pattern": "Assembly.GetType",
      "code": "var modelType = compilation.Assembly.GetTypeByMetadataName(\"Microsoft.AspNetCore.Mvc.Analyzers.TopLevelParameterNameAnalyzerTestFiles.TestController\");",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Assembly.GetType",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/samples/MvcFormSample/Controllers/HomeController.cs",
      "line": 38,
      "type": "csrf",
      "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
      "code": "[HttpPost]",
      "severity": "MEDIUM",
      "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
      "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/perf/benchmarkapps/BasicApi/Controllers/PetController.cs",
      "line": 123,
      "type": "csrf",
      "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
      "code": "[HttpPost]",
      "severity": "MEDIUM",
      "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
      "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/perf/benchmarkapps/BasicViews/Controllers/HomeController.cs",
      "line": 43,
      "type": "csrf",
      "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
      "code": "[HttpPost]",
      "severity": "MEDIUM",
      "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
      "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/perf/Microbenchmarks/Microsoft.AspNetCore.Mvc/ActionSelectorBenchmark.cs",
      "line": 166,
      "type": "insecure_random",
      "pattern": "Random\\(.*\\)",
      "code": "Random(Seed)",
      "severity": "MEDIUM",
      "description": "Insecure random number generation - potential for predictable values",
      "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.RazorPages/test/ApplicationModels/ViewDataAttributePageApplicationModelProviderTest.cs",
      "line": 51,
      "type": "dangerous_api",
      "pattern": "Type.GetType",
      "code": "PageApplicationModel = new PageApplicationModel(descriptor, handlerType.GetTypeInfo(), Array.Empty<object>()),",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Type.GetType",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.RazorPages/test/ApplicationModels/DefaultPageApplicationModelProviderTest.cs",
      "line": 146,
      "type": "dangerous_api",
      "pattern": "Type.GetType",
      "code": ".Where(p => p.PropertyInfo.DeclaringType.GetTypeInfo() == typeInfo);",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Type.GetType",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.RazorPages/test/ApplicationModels/DefaultPageApplicationModelProviderTest.cs",
      "line": 630,
      "type": "dangerous_api",
      "pattern": "Type.GetType",
      "code": ".Where(p => p.PropertyInfo.DeclaringType.GetTypeInfo() == typeInfo);",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Type.GetType",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.RazorPages/test/ApplicationModels/DefaultPageApplicationModelProviderTest.cs",
      "line": 686,
      "type": "dangerous_api",
      "pattern": "Type.GetType",
      "code": "Assert.Equal(typeInfo, handler.MethodInfo.DeclaringType.GetTypeInfo());",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Type.GetType",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.RazorPages/test/ApplicationModels/DefaultPageApplicationModelProviderTest.cs",
      "line": 953,
      "type": "dangerous_api",
      "pattern": "Type.GetType",
      "code": "Assert.Equal(typeof(HidesAProperty).GetTypeInfo(), p.PropertyInfo.DeclaringType.GetTypeInfo());",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Type.GetType",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.RazorPages/test/ApplicationModels/TempDataFilterPageApplicationModelProviderTest.cs",
      "line": 125,
      "type": "dangerous_api",
      "pattern": "Type.GetType",
      "code": "PageApplicationModel = new PageApplicationModel(descriptor, handlerType.GetTypeInfo(), Array.Empty<object>()),",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Type.GetType",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.RazorPages/test/Infrastructure/PageActionInvokerTest.cs",
      "line": 1523,
      "type": "dangerous_api",
      "pattern": "Activator.CreateInstance",
      "code": "var instance = (Page)Activator.CreateInstance(actionDescriptor.PageTypeInfo.AsType());",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Activator.CreateInstance",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.RazorPages/test/Infrastructure/PageActionInvokerTest.cs",
      "line": 1542,
      "type": "dangerous_api",
      "pattern": "Activator.CreateInstance",
      "code": "modelFactory = _ => Activator.CreateInstance(actionDescriptor.ModelTypeInfo.AsType());",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Activator.CreateInstance",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.RazorPages/test/Infrastructure/PageActionInvokerProviderTest.cs",
      "line": 469,
      "type": "dangerous_api",
      "pattern": "Type.GetType",
      "code": "var pageTypeInfo = pageType.GetTypeInfo();",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Type.GetType",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.RazorPages/test/Infrastructure/PageActionInvokerProviderTest.cs",
      "line": 475,
      "type": "dangerous_api",
      "pattern": "Type.GetType",
      "code": "declaredModelTypeInfo = pageTypeInfo.GetProperty(\"Model\")?.PropertyType.GetTypeInfo();",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Type.GetType",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.RazorPages/test/Infrastructure/DefaultPageModelFactoryProviderTest.cs",
      "line": 135,
      "type": "dangerous_api",
      "pattern": "Activator.CreateInstance",
      "code": "return (context) => Activator.CreateInstance(descriptor.ModelTypeInfo.AsType());",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Activator.CreateInstance",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.RazorPages/test/Infrastructure/ExecutorFactoryTest.cs",
      "line": 196,
      "type": "dangerous_api",
      "pattern": "Type.GetType",
      "code": "else if (methodParameter.ParameterType.GetTypeInfo().IsValueType)",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Type.GetType",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.RazorPages/test/Infrastructure/ExecutorFactoryTest.cs",
      "line": 198,
      "type": "dangerous_api",
      "pattern": "Activator.CreateInstance",
      "code": "defaultValue = Activator.CreateInstance(methodParameter.ParameterType);",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Activator.CreateInstance",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.RazorPages/test/Infrastructure/DefaultPageModelActivatorProviderTest.cs",
      "line": 100,
      "type": "dangerous_api",
      "pattern": "Type.GetType",
      "code": "PageTypeInfo = pageType.GetTypeInfo(),",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Type.GetType",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.RazorPages/test/Infrastructure/DefaultPageModelActivatorProviderTest.cs",
      "line": 120,
      "type": "dangerous_api",
      "pattern": "Type.GetType",
      "code": "PageTypeInfo = pageType.GetTypeInfo(),",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Type.GetType",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.RazorPages/test/Infrastructure/ServiceBasedPageModelActivatorProviderTest.cs",
      "line": 131,
      "type": "dangerous_api",
      "pattern": "Type.GetType",
      "code": "PageTypeInfo = pageType.GetTypeInfo(),",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Type.GetType",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.RazorPages/test/Infrastructure/DefaultPageActivatorProviderTest.cs",
      "line": 79,
      "type": "dangerous_api",
      "pattern": "Type.GetType",
      "code": "PageTypeInfo = pageType.GetTypeInfo()",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Type.GetType",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.RazorPages/test/Infrastructure/DefaultPageActivatorProviderTest.cs",
      "line": 99,
      "type": "dangerous_api",
      "pattern": "Type.GetType",
      "code": "PageTypeInfo = pageType.GetTypeInfo()",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Type.GetType",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.RazorPages/test/Infrastructure/DefaultPageFactoryProviderTest.cs",
      "line": 391,
      "type": "dangerous_api",
      "pattern": "Activator.CreateInstance",
      "code": "return (context, viewContext) => Activator.CreateInstance(descriptor.PageTypeInfo.AsType());",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Activator.CreateInstance",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.RazorPages/src/ApplicationModels/DefaultPageApplicationModelProvider.cs",
      "line": 84,
      "type": "dangerous_api",
      "pattern": "Type.GetType",
      "code": "var modelTypeInfo = modelProperty.PropertyType.GetTypeInfo();",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Type.GetType",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.RazorPages/src/Infrastructure/PageActionInvoker.cs",
      "line": 241,
      "type": "dangerous_api",
      "pattern": "Activator.CreateInstance",
      "code": "value = Activator.CreateInstance(parameter.ParameterInfo.ParameterType);",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Activator.CreateInstance",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Core/test/ValidationProblemDetailsTest.cs",
      "line": 57,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "modelStateDictionary.AddModelError(\"unsafeError\",",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Core/test/ValidationProblemDetailsTest.cs",
      "line": 70,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "Assert.Equal(\"unsafeError\", item.Key);",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Core/test/Formatters/StreamOutputFormatterTest.cs",
      "line": 69,
      "type": "dangerous_api",
      "pattern": "Activator.CreateInstance",
      "code": "var @object = type != null ? Activator.CreateInstance(type) : null;",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Activator.CreateInstance",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Core/test/ApplicationParts/RelatedAssemblyPartTest.cs",
      "line": 5,
      "type": "dangerous_api",
      "pattern": "System.Reflection.Emit",
      "code": "using System.Reflection.Emit;",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: System.Reflection.Emit",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Core/test/ModelBinding/Binders/BodyModelBinderTests.cs",
      "line": 289,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Core/test/ModelBinding/Binders/BodyModelBinderTests.cs",
      "line": 361,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Core/test/ModelBinding/Binders/BodyModelBinderTests.cs",
      "line": 434,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Core/test/ModelBinding/Binders/BodyModelBinderTests.cs",
      "line": 469,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Core/test/ModelBinding/Binders/BodyModelBinderTests.cs",
      "line": 815,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Core/test/ModelBinding/Binders/BodyModelBinderTests.cs",
      "line": 815,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Core/test/ModelBinding/Binders/BodyModelBinderTests.cs",
      "line": 819,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Core/test/ModelBinding/Binders/BodyModelBinderTests.cs",
      "line": 885,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Core/test/ModelBinding/Binders/BodyModelBinderTests.cs",
      "line": 885,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Core/test/ModelBinding/Binders/BodyModelBinderTests.cs",
      "line": 889,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Core/test/ModelBinding/Validation/DefaultObjectValidatorTests.cs",
      "line": 724,
      "type": "hardcoded_secrets",
      "pattern": "password\\s*=\\s*[\"\\'][^\"\\']{8,}[\"\\']",
      "code": "Password = \"password-val\"",
      "severity": "HIGH",
      "description": "Hardcoded secrets/credentials - potential for unauthorized access",
      "recommendation": "Use configuration files or Azure Key Vault"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Core/test/ModelBinding/Validation/DefaultObjectValidatorTests.cs",
      "line": 725,
      "type": "hardcoded_secrets",
      "pattern": "password\\s*=\\s*[\"\\'][^\"\\']{8,}[\"\\']",
      "code": "Password = \"not-password-val\"",
      "severity": "HIGH",
      "description": "Hardcoded secrets/credentials - potential for unauthorized access",
      "recommendation": "Use configuration files or Azure Key Vault"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Core/test/ModelBinding/Validation/DefaultObjectValidatorTests.cs",
      "line": 1135,
      "type": "hardcoded_secrets",
      "pattern": "password\\s*=\\s*[\"\\'][^\"\\']{8,}[\"\\']",
      "code": "Password = \"password-val\"",
      "severity": "HIGH",
      "description": "Hardcoded secrets/credentials - potential for unauthorized access",
      "recommendation": "Use configuration files or Azure Key Vault"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Core/test/ModelBinding/Validation/DefaultObjectValidatorTests.cs",
      "line": 1136,
      "type": "hardcoded_secrets",
      "pattern": "password\\s*=\\s*[\"\\'][^\"\\']{8,}[\"\\']",
      "code": "Password = \"not-password-val\"",
      "severity": "HIGH",
      "description": "Hardcoded secrets/credentials - potential for unauthorized access",
      "recommendation": "Use configuration files or Azure Key Vault"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Core/test/ApplicationModels/ControllerActionDescriptorProviderTests.cs",
      "line": 1441,
      "type": "csrf",
      "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
      "code": "[HttpPost]",
      "severity": "MEDIUM",
      "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
      "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Core/test/ApplicationModels/ControllerActionDescriptorProviderTests.cs",
      "line": 1573,
      "type": "csrf",
      "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
      "code": "[HttpPost]",
      "severity": "MEDIUM",
      "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
      "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Core/test/ApplicationModels/ControllerActionDescriptorProviderTests.cs",
      "line": 1601,
      "type": "csrf",
      "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
      "code": "[HttpPost]",
      "severity": "MEDIUM",
      "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
      "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Core/test/ApplicationModels/ControllerActionDescriptorProviderTests.cs",
      "line": 1614,
      "type": "csrf",
      "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
      "code": "[HttpPost]",
      "severity": "MEDIUM",
      "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
      "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Core/test/ApplicationModels/ControllerActionDescriptorProviderTests.cs",
      "line": 1676,
      "type": "csrf",
      "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
      "code": "[HttpPost]",
      "severity": "MEDIUM",
      "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
      "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Core/test/ApplicationModels/ControllerActionDescriptorProviderTests.cs",
      "line": 984,
      "type": "dangerous_api",
      "pattern": "Type.GetType",
      "code": "var provider = GetProvider(controllerType.GetTypeInfo());",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Type.GetType",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Core/test/ApplicationModels/PropertyModelTest.cs",
      "line": 52,
      "type": "dangerous_api",
      "pattern": "Type.GetType",
      "code": "else if (property.PropertyType.GetTypeInfo().IsValueType ||",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Type.GetType",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Core/test/ApplicationModels/PropertyModelTest.cs",
      "line": 58,
      "type": "dangerous_api",
      "pattern": "Activator.CreateInstance",
      "code": "Assert.NotEqual(value1, Activator.CreateInstance(property.PropertyType));",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Activator.CreateInstance",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Core/test/ApplicationModels/ControllerModelTest.cs",
      "line": 128,
      "type": "dangerous_api",
      "pattern": "Activator.CreateInstance",
      "code": "Assert.NotEqual(value1, Activator.CreateInstance(property.PropertyType));",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Activator.CreateInstance",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Core/test/ApplicationModels/ParameterModelTest.cs",
      "line": 56,
      "type": "dangerous_api",
      "pattern": "Type.GetType",
      "code": "else if (property.PropertyType.GetTypeInfo().IsValueType ||",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Type.GetType",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Core/test/ApplicationModels/ParameterModelTest.cs",
      "line": 62,
      "type": "dangerous_api",
      "pattern": "Activator.CreateInstance",
      "code": "Assert.NotEqual(value1, Activator.CreateInstance(property.PropertyType));",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Activator.CreateInstance",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Core/test/ApplicationModels/InferParameterBindingInfoConventionTest.cs",
      "line": 988,
      "type": "csrf",
      "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
      "code": "[HttpPost]",
      "severity": "MEDIUM",
      "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
      "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Core/test/ApplicationModels/InferParameterBindingInfoConventionTest.cs",
      "line": 991,
      "type": "csrf",
      "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
      "code": "[HttpPost]",
      "severity": "MEDIUM",
      "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
      "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Core/test/ApplicationModels/AuthorizationApplicationModelProviderTest.cs",
      "line": 212,
      "type": "dangerous_api",
      "pattern": "Type.GetType",
      "code": "var context = new ApplicationModelProviderContext(new[] { controllerType.GetTypeInfo() });",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Type.GetType",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Core/test/ApplicationModels/AttributeRouteModelTests.cs",
      "line": 44,
      "type": "dangerous_api",
      "pattern": "Activator.CreateInstance",
      "code": "Assert.NotEqual(value1, Activator.CreateInstance(property.PropertyType));",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Activator.CreateInstance",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Core/test/ApplicationModels/ConsumesConstraintForFormFileParameterConventionTest.cs",
      "line": 87,
      "type": "csrf",
      "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
      "code": "[HttpPost]",
      "severity": "MEDIUM",
      "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
      "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Core/test/ApplicationModels/ConsumesConstraintForFormFileParameterConventionTest.cs",
      "line": 90,
      "type": "csrf",
      "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
      "code": "[HttpPost]",
      "severity": "MEDIUM",
      "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
      "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Core/test/ApplicationModels/DefaultApplicationModelProviderTest.cs",
      "line": 1686,
      "type": "csrf",
      "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
      "code": "[HttpPost]",
      "severity": "MEDIUM",
      "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
      "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Core/test/ApplicationModels/DefaultApplicationModelProviderTest.cs",
      "line": 1744,
      "type": "csrf",
      "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
      "code": "[HttpPost]",
      "severity": "MEDIUM",
      "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
      "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Core/test/ApplicationModels/DefaultApplicationModelProviderTest.cs",
      "line": 1319,
      "type": "dangerous_api",
      "pattern": "Type.GetType",
      "code": "Assert.Equal(typeInfo, action.ActionMethod.DeclaringType.GetTypeInfo());",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Type.GetType",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Core/test/ApplicationModels/ActionModelTest.cs",
      "line": 126,
      "type": "dangerous_api",
      "pattern": "Activator.CreateInstance",
      "code": "Assert.NotEqual(value1, Activator.CreateInstance(property.PropertyType));",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Activator.CreateInstance",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Core/test/Infrastructure/ActionSelectorTest.cs",
      "line": 1234,
      "type": "csrf",
      "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
      "code": "[HttpPost]",
      "severity": "MEDIUM",
      "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
      "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Core/test/DependencyInjection/MvcCoreBuilderExtensionsTest.cs",
      "line": 5,
      "type": "dangerous_api",
      "pattern": "System.Reflection.Emit",
      "code": "using System.Reflection.Emit;",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: System.Reflection.Emit",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Core/test/DependencyInjection/MvcBuilderExtensionsTest.cs",
      "line": 5,
      "type": "dangerous_api",
      "pattern": "System.Reflection.Emit",
      "code": "using System.Reflection.Emit;",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: System.Reflection.Emit",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Core/test/DependencyInjection/ApplicationModelConventionExtensionsTest.cs",
      "line": 18,
      "type": "dangerous_api",
      "pattern": "Type.GetType",
      "code": "var controllerModel = new ControllerModel(controllerType.GetTypeInfo(), Array.Empty<object>());",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Type.GetType",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Core/src/ControllerBase.cs",
      "line": 453,
      "type": "csrf",
      "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
      "code": "[HttpPost]",
      "severity": "MEDIUM",
      "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
      "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Core/src/Filters/MiddlewareFilterConfigurationProvider.cs",
      "line": 28,
      "type": "dangerous_api",
      "pattern": "Activator.CreateInstance",
      "code": "var instance = Activator.CreateInstance(configurationType)!;",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Activator.CreateInstance",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Core/src/Formatters/InputFormatter.cs",
      "line": 32,
      "type": "dangerous_api",
      "pattern": "Activator.CreateInstance",
      "code": "return Activator.CreateInstance(modelType);",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Activator.CreateInstance",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Core/src/ApplicationParts/ApplicationPartFactory.cs",
      "line": 54,
      "type": "dangerous_api",
      "pattern": "Activator.CreateInstance",
      "code": "return (ApplicationPartFactory)Activator.CreateInstance(type)!;",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Activator.CreateInstance",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Core/src/ApplicationParts/ProvideApplicationPartFactoryAttribute.cs",
      "line": 42,
      "type": "dangerous_api",
      "pattern": "Type.GetType",
      "code": "Type.GetType(_applicationPartFactoryTypeName!, throwOnError: true)!;",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Type.GetType",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Core/src/ModelBinding/ModelBindingHelper.cs",
      "line": 578,
      "type": "dangerous_api",
      "pattern": "Activator.CreateInstance",
      "code": "return (ICollection<T>)Activator.CreateInstance(modelType)!;",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Activator.CreateInstance",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Core/src/ModelBinding/ModelBindingHelper.cs",
      "line": 618,
      "type": "dangerous_api",
      "pattern": "Activator.CreateInstance",
      "code": "return type.IsValueType ? Activator.CreateInstance(type) : null;",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Activator.CreateInstance",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Core/src/ModelBinding/Binders/ArrayModelBinderProvider.cs",
      "line": 30,
      "type": "dangerous_api",
      "pattern": "Activator.CreateInstance",
      "code": "return (IModelBinder)Activator.CreateInstance(",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Activator.CreateInstance",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Core/src/ModelBinding/Binders/CollectionModelBinderProvider.cs",
      "line": 62,
      "type": "dangerous_api",
      "pattern": "Activator.CreateInstance",
      "code": "var binder = (IModelBinder)Activator.CreateInstance(",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Activator.CreateInstance",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Core/src/ModelBinding/Binders/DictionaryModelBinderProvider.cs",
      "line": 37,
      "type": "dangerous_api",
      "pattern": "Activator.CreateInstance",
      "code": "return (IModelBinder)Activator.CreateInstance(",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Activator.CreateInstance",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Core/src/ModelBinding/Binders/KeyValuePairModelBinderProvider.cs",
      "line": 35,
      "type": "dangerous_api",
      "pattern": "Activator.CreateInstance",
      "code": "return (IModelBinder)Activator.CreateInstance(binderType, keyBinder, valueBinder, loggerFactory)!;",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Activator.CreateInstance",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Core/src/ModelBinding/Metadata/DefaultModelMetadataProvider.cs",
      "line": 283,
      "type": "dangerous_api",
      "pattern": "Activator.CreateInstance",
      "code": "defaultValue = Activator.CreateInstance(parameterType);",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Activator.CreateInstance",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Core/src/Routing/ActionEndpointFactory.cs",
      "line": 377,
      "type": "csrf",
      "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
      "code": "[HttpPost]",
      "severity": "MEDIUM",
      "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
      "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Core/src/ApplicationModels/DefaultApplicationModelProvider.cs",
      "line": 527,
      "type": "csrf",
      "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
      "code": "[HttpPost]",
      "severity": "MEDIUM",
      "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
      "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.Core/src/Infrastructure/ParameterDefaultValues.cs",
      "line": 32,
      "type": "dangerous_api",
      "pattern": "Activator.CreateInstance",
      "code": "defaultValue = Activator.CreateInstance(parameterInfo.ParameterType);",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Activator.CreateInstance",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Grpc/Interop/test/testassets/InteropClient/InteropClient.cs",
      "line": 206,
      "type": "dangerous_api",
      "pattern": "Activator.CreateInstance",
      "code": "return (TClient)Activator.CreateInstance(typeof(TClient), channel.Channel)!;",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Activator.CreateInstance",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Grpc/JsonTranscoding/test/Microsoft.AspNetCore.Grpc.Swagger.Tests/XmlComments/XmlCommentsDocumentFilterTests.cs",
      "line": 69,
      "type": "xxe",
      "pattern": "XPathDocument",
      "code": "XPathDocument",
      "severity": "HIGH",
      "description": "XML External Entity (XXE) vulnerability - potential for data disclosure",
      "recommendation": "Disable external entity processing in XML parsers"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Grpc/JsonTranscoding/test/testassets/Sandbox/Controllers/ValuesController.cs",
      "line": 27,
      "type": "csrf",
      "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
      "code": "[HttpPost]",
      "severity": "MEDIUM",
      "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
      "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Grpc/JsonTranscoding/test/Microsoft.AspNetCore.Grpc.JsonTranscoding.IntegrationTests/Infrastructure/TestHelpers.cs",
      "line": 37,
      "type": "dangerous_api",
      "pattern": "Activator.CreateInstance",
      "code": "return new GrpcActivatorHandle<Interceptor>(Activator.CreateInstance<T>(), created: true, state: null);",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Activator.CreateInstance",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Grpc/JsonTranscoding/test/Microsoft.AspNetCore.Grpc.JsonTranscoding.Tests/UnaryServerCallHandlerTests.cs",
      "line": 1128,
      "type": "xxe",
      "pattern": "XDocument\\.Load",
      "code": "XDocument.Load",
      "severity": "HIGH",
      "description": "XML External Entity (XXE) vulnerability - potential for data disclosure",
      "recommendation": "Disable external entity processing in XML parsers"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Grpc/JsonTranscoding/test/Microsoft.AspNetCore.Grpc.JsonTranscoding.Tests/UnaryServerCallHandlerTests.cs",
      "line": 1368,
      "type": "xxe",
      "pattern": "XDocument\\.Load",
      "code": "XDocument.Load",
      "severity": "HIGH",
      "description": "XML External Entity (XXE) vulnerability - potential for data disclosure",
      "recommendation": "Disable external entity processing in XML parsers"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Grpc/JsonTranscoding/test/Microsoft.AspNetCore.Grpc.JsonTranscoding.Tests/Infrastructure/TestHelpers.cs",
      "line": 61,
      "type": "dangerous_api",
      "pattern": "Activator.CreateInstance",
      "code": "return new GrpcActivatorHandle<Interceptor>(Activator.CreateInstance<T>(), created: true, state: null);",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Activator.CreateInstance",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Grpc/JsonTranscoding/test/Microsoft.AspNetCore.Grpc.JsonTranscoding.Tests/TestObjects/ProtobutMessages/WrappersMessage.cs",
      "line": 65,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[global::System.CodeDom.Compiler.GeneratedCode(\"protoc\", null)]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Grpc/JsonTranscoding/test/Microsoft.AspNetCore.Grpc.JsonTranscoding.Tests/TestObjects/ProtobutMessages/WrappersMessage.cs",
      "line": 69,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[global::System.CodeDom.Compiler.GeneratedCode(\"protoc\", null)]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Grpc/JsonTranscoding/test/Microsoft.AspNetCore.Grpc.JsonTranscoding.Tests/TestObjects/ProtobutMessages/WrappersMessage.cs",
      "line": 76,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[global::System.CodeDom.Compiler.GeneratedCode(\"protoc\", null)]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Grpc/JsonTranscoding/test/Microsoft.AspNetCore.Grpc.JsonTranscoding.Tests/TestObjects/ProtobutMessages/WrappersMessage.cs",
      "line": 83,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[global::System.CodeDom.Compiler.GeneratedCode(\"protoc\", null)]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Grpc/JsonTranscoding/test/Microsoft.AspNetCore.Grpc.JsonTranscoding.Tests/TestObjects/ProtobutMessages/WrappersMessage.cs",
      "line": 92,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[global::System.CodeDom.Compiler.GeneratedCode(\"protoc\", null)]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Grpc/JsonTranscoding/test/Microsoft.AspNetCore.Grpc.JsonTranscoding.Tests/TestObjects/ProtobutMessages/WrappersMessage.cs",
      "line": 108,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[global::System.CodeDom.Compiler.GeneratedCode(\"protoc\", null)]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Grpc/JsonTranscoding/test/Microsoft.AspNetCore.Grpc.JsonTranscoding.Tests/TestObjects/ProtobutMessages/WrappersMessage.cs",
      "line": 118,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[global::System.CodeDom.Compiler.GeneratedCode(\"protoc\", null)]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Grpc/JsonTranscoding/test/Microsoft.AspNetCore.Grpc.JsonTranscoding.Tests/TestObjects/ProtobutMessages/WrappersMessage.cs",
      "line": 132,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[global::System.CodeDom.Compiler.GeneratedCode(\"protoc\", null)]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Grpc/JsonTranscoding/test/Microsoft.AspNetCore.Grpc.JsonTranscoding.Tests/TestObjects/ProtobutMessages/WrappersMessage.cs",
      "line": 146,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[global::System.CodeDom.Compiler.GeneratedCode(\"protoc\", null)]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Grpc/JsonTranscoding/test/Microsoft.AspNetCore.Grpc.JsonTranscoding.Tests/TestObjects/ProtobutMessages/WrappersMessage.cs",
      "line": 160,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[global::System.CodeDom.Compiler.GeneratedCode(\"protoc\", null)]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Grpc/JsonTranscoding/test/Microsoft.AspNetCore.Grpc.JsonTranscoding.Tests/TestObjects/ProtobutMessages/WrappersMessage.cs",
      "line": 174,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[global::System.CodeDom.Compiler.GeneratedCode(\"protoc\", null)]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Grpc/JsonTranscoding/test/Microsoft.AspNetCore.Grpc.JsonTranscoding.Tests/TestObjects/ProtobutMessages/WrappersMessage.cs",
      "line": 188,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[global::System.CodeDom.Compiler.GeneratedCode(\"protoc\", null)]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Grpc/JsonTranscoding/test/Microsoft.AspNetCore.Grpc.JsonTranscoding.Tests/TestObjects/ProtobutMessages/WrappersMessage.cs",
      "line": 202,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[global::System.CodeDom.Compiler.GeneratedCode(\"protoc\", null)]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Grpc/JsonTranscoding/test/Microsoft.AspNetCore.Grpc.JsonTranscoding.Tests/TestObjects/ProtobutMessages/WrappersMessage.cs",
      "line": 216,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[global::System.CodeDom.Compiler.GeneratedCode(\"protoc\", null)]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Grpc/JsonTranscoding/test/Microsoft.AspNetCore.Grpc.JsonTranscoding.Tests/TestObjects/ProtobutMessages/WrappersMessage.cs",
      "line": 230,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[global::System.CodeDom.Compiler.GeneratedCode(\"protoc\", null)]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Grpc/JsonTranscoding/test/Microsoft.AspNetCore.Grpc.JsonTranscoding.Tests/TestObjects/ProtobutMessages/WrappersMessage.cs",
      "line": 241,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[global::System.CodeDom.Compiler.GeneratedCode(\"protoc\", null)]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Grpc/JsonTranscoding/test/Microsoft.AspNetCore.Grpc.JsonTranscoding.Tests/TestObjects/ProtobutMessages/WrappersMessage.cs",
      "line": 248,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[global::System.CodeDom.Compiler.GeneratedCode(\"protoc\", null)]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Grpc/JsonTranscoding/test/Microsoft.AspNetCore.Grpc.JsonTranscoding.Tests/TestObjects/ProtobutMessages/WrappersMessage.cs",
      "line": 272,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[global::System.CodeDom.Compiler.GeneratedCode(\"protoc\", null)]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Grpc/JsonTranscoding/test/Microsoft.AspNetCore.Grpc.JsonTranscoding.Tests/TestObjects/ProtobutMessages/WrappersMessage.cs",
      "line": 293,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[global::System.CodeDom.Compiler.GeneratedCode(\"protoc\", null)]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Grpc/JsonTranscoding/test/Microsoft.AspNetCore.Grpc.JsonTranscoding.Tests/TestObjects/ProtobutMessages/WrappersMessage.cs",
      "line": 300,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[global::System.CodeDom.Compiler.GeneratedCode(\"protoc\", null)]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Grpc/JsonTranscoding/test/Microsoft.AspNetCore.Grpc.JsonTranscoding.Tests/TestObjects/ProtobutMessages/WrappersMessage.cs",
      "line": 350,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[global::System.CodeDom.Compiler.GeneratedCode(\"protoc\", null)]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Grpc/JsonTranscoding/test/Microsoft.AspNetCore.Grpc.JsonTranscoding.Tests/TestObjects/ProtobutMessages/WrappersMessage.cs",
      "line": 406,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[global::System.CodeDom.Compiler.GeneratedCode(\"protoc\", null)]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Grpc/JsonTranscoding/test/Microsoft.AspNetCore.Grpc.JsonTranscoding.Tests/TestObjects/ProtobutMessages/WrappersMessage.cs",
      "line": 454,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[global::System.CodeDom.Compiler.GeneratedCode(\"protoc\", null)]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Grpc/JsonTranscoding/test/Microsoft.AspNetCore.Grpc.JsonTranscoding.Tests/TestObjects/ProtobutMessages/WrappersMessage.cs",
      "line": 537,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[global::System.CodeDom.Compiler.GeneratedCode(\"protoc\", null)]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Grpc/JsonTranscoding/test/Microsoft.AspNetCore.Grpc.JsonTranscoding.Tests/TestObjects/ProtobutMessages/WrappersMessage.cs",
      "line": 623,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[global::System.CodeDom.Compiler.GeneratedCode(\"protoc\", null)]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Grpc/JsonTranscoding/src/Shared/ServiceDescriptorHelpers.cs",
      "line": 241,
      "type": "dangerous_api",
      "pattern": "Activator.CreateInstance",
      "code": "fieldMessage = (IMessage)Activator.CreateInstance(field.MessageType.ClrType)!;",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Activator.CreateInstance",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Grpc/JsonTranscoding/src/Microsoft.AspNetCore.Grpc.JsonTranscoding/Internal/JsonRequestHelpers.cs",
      "line": 215,
      "type": "dangerous_api",
      "pattern": "Activator.CreateInstance",
      "code": "requestMessage = (IMessage)Activator.CreateInstance<TRequest>();",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Activator.CreateInstance",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Grpc/JsonTranscoding/src/Microsoft.AspNetCore.Grpc.JsonTranscoding/Internal/JsonRequestHelpers.cs",
      "line": 259,
      "type": "dangerous_api",
      "pattern": "Activator.CreateInstance",
      "code": "requestMessage = (IMessage)Activator.CreateInstance<TRequest>();",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Activator.CreateInstance",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Grpc/JsonTranscoding/src/Microsoft.AspNetCore.Grpc.JsonTranscoding/Internal/JsonRequestHelpers.cs",
      "line": 277,
      "type": "dangerous_api",
      "pattern": "Activator.CreateInstance",
      "code": "requestMessage = (IMessage)Activator.CreateInstance<TRequest>();",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Activator.CreateInstance",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Grpc/JsonTranscoding/src/Microsoft.AspNetCore.Grpc.JsonTranscoding/Internal/JsonRequestHelpers.cs",
      "line": 320,
      "type": "dangerous_api",
      "pattern": "Activator.CreateInstance",
      "code": "var httpBody = (IMessage)Activator.CreateInstance(serverCallContext.DescriptorInfo.BodyDescriptor!.ClrType)!;",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Activator.CreateInstance",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Grpc/JsonTranscoding/src/Microsoft.AspNetCore.Grpc.JsonTranscoding/Internal/Json/JsonConverterFactoryForWellKnownTypes.cs",
      "line": 43,
      "type": "dangerous_api",
      "pattern": "Activator.CreateInstance",
      "code": "var converter = (JsonConverter)Activator.CreateInstance(",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Activator.CreateInstance",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Grpc/JsonTranscoding/src/Microsoft.AspNetCore.Grpc.JsonTranscoding/Internal/Json/MessageTypeInfoResolver.cs",
      "line": 33,
      "type": "dangerous_api",
      "pattern": "Activator.CreateInstance",
      "code": "typeInfo.CreateObject = () => Activator.CreateInstance(type)!;",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Activator.CreateInstance",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Grpc/JsonTranscoding/src/Microsoft.AspNetCore.Grpc.JsonTranscoding/Internal/Json/MessageTypeInfoResolver.cs",
      "line": 176,
      "type": "dangerous_api",
      "pattern": "Activator.CreateInstance",
      "code": "var wrapper = (IMessage)Activator.CreateInstance(field.MessageType.ClrType)!;",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Activator.CreateInstance",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Grpc/JsonTranscoding/src/Microsoft.AspNetCore.Grpc.JsonTranscoding/Internal/Json/JsonConverterFactoryForEnum.cs",
      "line": 28,
      "type": "dangerous_api",
      "pattern": "Activator.CreateInstance",
      "code": "var converter = (JsonConverter)Activator.CreateInstance(",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Activator.CreateInstance",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Grpc/JsonTranscoding/src/Microsoft.AspNetCore.Grpc.JsonTranscoding/Internal/Json/EnumNameHelpers.cs",
      "line": 59,
      "type": "dangerous_api",
      "pattern": "Type.GetType",
      "code": "var nameMappings = enumType.GetTypeInfo().DeclaredFields",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Type.GetType",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Grpc/JsonTranscoding/src/Microsoft.AspNetCore.Grpc.JsonTranscoding/Internal/Json/JsonConverterFactoryForWrappers.cs",
      "line": 41,
      "type": "dangerous_api",
      "pattern": "Activator.CreateInstance",
      "code": "var converter = (JsonConverter)Activator.CreateInstance(",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Activator.CreateInstance",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Grpc/JsonTranscoding/src/Microsoft.AspNetCore.Grpc.Swagger/GrpcSwaggerGenOptionsExtensions.cs",
      "line": 19,
      "type": "xxe",
      "pattern": "XPathDocument",
      "code": "XPathDocument",
      "severity": "HIGH",
      "description": "XML External Entity (XXE) vulnerability - potential for data disclosure",
      "recommendation": "Disable external entity processing in XML parsers"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Grpc/JsonTranscoding/src/Microsoft.AspNetCore.Grpc.Swagger/GrpcSwaggerGenOptionsExtensions.cs",
      "line": 22,
      "type": "xxe",
      "pattern": "XPathDocument",
      "code": "XPathDocument",
      "severity": "HIGH",
      "description": "XML External Entity (XXE) vulnerability - potential for data disclosure",
      "recommendation": "Disable external entity processing in XML parsers"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Grpc/JsonTranscoding/src/Microsoft.AspNetCore.Grpc.Swagger/GrpcSwaggerGenOptionsExtensions.cs",
      "line": 31,
      "type": "xxe",
      "pattern": "XPathDocument",
      "code": "XPathDocument",
      "severity": "HIGH",
      "description": "XML External Entity (XXE) vulnerability - potential for data disclosure",
      "recommendation": "Disable external entity processing in XML parsers"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Grpc/JsonTranscoding/src/Microsoft.AspNetCore.Grpc.Swagger/GrpcSwaggerGenOptionsExtensions.cs",
      "line": 38,
      "type": "xxe",
      "pattern": "XPathDocument",
      "code": "XPathDocument",
      "severity": "HIGH",
      "description": "XML External Entity (XXE) vulnerability - potential for data disclosure",
      "recommendation": "Disable external entity processing in XML parsers"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Grpc/JsonTranscoding/src/Microsoft.AspNetCore.Grpc.Swagger/GrpcSwaggerGenOptionsExtensions.cs",
      "line": 59,
      "type": "xxe",
      "pattern": "XPathDocument",
      "code": "XPathDocument",
      "severity": "HIGH",
      "description": "XML External Entity (XXE) vulnerability - potential for data disclosure",
      "recommendation": "Disable external entity processing in XML parsers"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Grpc/JsonTranscoding/src/Microsoft.AspNetCore.Grpc.Swagger/GrpcSwaggerGenOptionsExtensions.cs",
      "line": 76,
      "type": "xxe",
      "pattern": "XPathDocument",
      "code": "XPathDocument",
      "severity": "HIGH",
      "description": "XML External Entity (XXE) vulnerability - potential for data disclosure",
      "recommendation": "Disable external entity processing in XML parsers"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Grpc/JsonTranscoding/src/Microsoft.AspNetCore.Grpc.Swagger/Internal/XmlComments/GrpcXmlCommentsOperationFilter.cs",
      "line": 17,
      "type": "xxe",
      "pattern": "XPathDocument",
      "code": "XPathDocument",
      "severity": "HIGH",
      "description": "XML External Entity (XXE) vulnerability - potential for data disclosure",
      "recommendation": "Disable external entity processing in XML parsers"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Grpc/JsonTranscoding/src/Microsoft.AspNetCore.Grpc.Swagger/Internal/XmlComments/GrpcXmlCommentsDocumentFilter.cs",
      "line": 21,
      "type": "xxe",
      "pattern": "XPathDocument",
      "code": "XPathDocument",
      "severity": "HIGH",
      "description": "XML External Entity (XXE) vulnerability - potential for data disclosure",
      "recommendation": "Disable external entity processing in XML parsers"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Framework/test/SharedFxTests.cs",
      "line": 327,
      "type": "path_traversal",
      "pattern": "Directory\\.GetFiles\\(.*\\+",
      "code": "Directory.GetFiles(packageFolder, \"Microsoft.AspNetCore.App.Runtime.*-*.\" + TestData.GetSharedFxVersion() +",
      "severity": "HIGH",
      "description": "Path Traversal vulnerability - potential for accessing unauthorized files",
      "recommendation": "Validate file paths, use Path.GetFullPath() for validation"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Framework/test/SharedFxTests.cs",
      "line": 268,
      "type": "xxe",
      "pattern": "XDocument\\.Load",
      "code": "XDocument.Load",
      "severity": "HIGH",
      "description": "XML External Entity (XXE) vulnerability - potential for data disclosure",
      "recommendation": "Disable external entity processing in XML parsers"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Framework/test/SharedFxTests.cs",
      "line": 321,
      "type": "xxe",
      "pattern": "XDocument\\.Load",
      "code": "XDocument.Load",
      "severity": "HIGH",
      "description": "XML External Entity (XXE) vulnerability - potential for data disclosure",
      "recommendation": "Disable external entity processing in XML parsers"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Framework/test/TargetingPackTests.cs",
      "line": 316,
      "type": "xxe",
      "pattern": "XDocument\\.Load",
      "code": "XDocument.Load",
      "severity": "HIGH",
      "description": "XML External Entity (XXE) vulnerability - potential for data disclosure",
      "recommendation": "Disable external entity processing in XML parsers"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Framework/test/TargetingPackTests.cs",
      "line": 379,
      "type": "xxe",
      "pattern": "XDocument\\.Load",
      "code": "XDocument.Load",
      "severity": "HIGH",
      "description": "XML External Entity (XXE) vulnerability - potential for data disclosure",
      "recommendation": "Disable external entity processing in XML parsers"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Framework/test/TargetingPackTests.cs",
      "line": 421,
      "type": "xxe",
      "pattern": "XDocument\\.Load",
      "code": "XDocument.Load",
      "severity": "HIGH",
      "description": "XML External Entity (XXE) vulnerability - potential for data disclosure",
      "recommendation": "Disable external entity processing in XML parsers"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Framework/AspNetCoreAnalyzers/test/Mvc/DetectAmbiguousActionRoutesTest.cs",
      "line": 896,
      "type": "csrf",
      "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
      "code": "[HttpPost]",
      "severity": "MEDIUM",
      "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
      "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Framework/AspNetCoreAnalyzers/src/Analyzers/Mvc/DetectOverriddenAuthorizeAttribute.cs",
      "line": 64,
      "type": "dangerous_api",
      "pattern": "Type.GetType",
      "code": "foreach (var currentClass in actionSymbol.ContainingType.GetTypeHierarchy())",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Type.GetType",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Framework/AspNetCoreAnalyzers/src/Analyzers/Mvc/MvcAnalyzer.cs",
      "line": 94,
      "type": "csrf",
      "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
      "code": "[HttpPost]",
      "severity": "MEDIUM",
      "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
      "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Framework/AspNetCoreAnalyzers/src/Analyzers/Infrastructure/VirtualChars/System.Text/Rune.cs",
      "line": 851,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "// off the end of the string using unsafe code. Since strings are null-terminated,",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Security/samples/ClaimsTransformation/Controllers/AccountController.cs",
      "line": 28,
      "type": "csrf",
      "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
      "code": "[HttpPost]",
      "severity": "MEDIUM",
      "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
      "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Security/samples/StaticFilesAuth/Controllers/AccountController.cs",
      "line": 27,
      "type": "csrf",
      "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
      "code": "[HttpPost]",
      "severity": "MEDIUM",
      "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
      "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Security/samples/PathSchemeSelection/Controllers/AccountController.cs",
      "line": 28,
      "type": "csrf",
      "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
      "code": "[HttpPost]",
      "severity": "MEDIUM",
      "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
      "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Security/samples/DynamicSchemes/Controllers/AuthController.cs",
      "line": 30,
      "type": "csrf",
      "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
      "code": "[HttpPost]",
      "severity": "MEDIUM",
      "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
      "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Security/samples/CustomPolicyProvider/Controllers/AccountController.cs",
      "line": 20,
      "type": "csrf",
      "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
      "code": "[HttpPost]",
      "severity": "MEDIUM",
      "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
      "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Security/samples/Cookies/Controllers/AccountController.cs",
      "line": 27,
      "type": "csrf",
      "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
      "code": "[HttpPost]",
      "severity": "MEDIUM",
      "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
      "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Security/Authentication/test/TwitterTests.cs",
      "line": 57,
      "type": "hardcoded_secrets",
      "pattern": "secret\\s*=\\s*[\"\\'][^\"\\']{16,}[\"\\']",
      "code": "Secret = \"Test Consumer Secret\"",
      "severity": "HIGH",
      "description": "Hardcoded secrets/credentials - potential for unauthorized access",
      "recommendation": "Use configuration files or Azure Key Vault"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Security/Authentication/test/TwitterTests.cs",
      "line": 92,
      "type": "hardcoded_secrets",
      "pattern": "secret\\s*=\\s*[\"\\'][^\"\\']{16,}[\"\\']",
      "code": "Secret = \"Test Consumer Secret\"",
      "severity": "HIGH",
      "description": "Hardcoded secrets/credentials - potential for unauthorized access",
      "recommendation": "Use configuration files or Azure Key Vault"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Security/Authentication/test/TwitterTests.cs",
      "line": 121,
      "type": "hardcoded_secrets",
      "pattern": "secret\\s*=\\s*[\"\\'][^\"\\']{16,}[\"\\']",
      "code": "Secret = \"Test Consumer Secret\"",
      "severity": "HIGH",
      "description": "Hardcoded secrets/credentials - potential for unauthorized access",
      "recommendation": "Use configuration files or Azure Key Vault"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Security/Authentication/test/TwitterTests.cs",
      "line": 136,
      "type": "hardcoded_secrets",
      "pattern": "secret\\s*=\\s*[\"\\'][^\"\\']{16,}[\"\\']",
      "code": "Secret = \"Test Consumer Secret\"",
      "severity": "HIGH",
      "description": "Hardcoded secrets/credentials - potential for unauthorized access",
      "recommendation": "Use configuration files or Azure Key Vault"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Security/Authentication/test/TwitterTests.cs",
      "line": 149,
      "type": "hardcoded_secrets",
      "pattern": "secret\\s*=\\s*[\"\\'][^\"\\']{16,}[\"\\']",
      "code": "Secret = \"Test Consumer Secret\"",
      "severity": "HIGH",
      "description": "Hardcoded secrets/credentials - potential for unauthorized access",
      "recommendation": "Use configuration files or Azure Key Vault"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Security/Authentication/test/TwitterTests.cs",
      "line": 162,
      "type": "hardcoded_secrets",
      "pattern": "secret\\s*=\\s*[\"\\'][^\"\\']{16,}[\"\\']",
      "code": "Secret = \"Test Consumer Secret\"",
      "severity": "HIGH",
      "description": "Hardcoded secrets/credentials - potential for unauthorized access",
      "recommendation": "Use configuration files or Azure Key Vault"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Security/Authentication/test/TwitterTests.cs",
      "line": 175,
      "type": "hardcoded_secrets",
      "pattern": "secret\\s*=\\s*[\"\\'][^\"\\']{16,}[\"\\']",
      "code": "Secret = \"Test Consumer Secret\"",
      "severity": "HIGH",
      "description": "Hardcoded secrets/credentials - potential for unauthorized access",
      "recommendation": "Use configuration files or Azure Key Vault"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Security/Authentication/test/TwitterTests.cs",
      "line": 199,
      "type": "hardcoded_secrets",
      "pattern": "secret\\s*=\\s*[\"\\'][^\"\\']{16,}[\"\\']",
      "code": "Secret = \"Test Consumer Secret\"",
      "severity": "HIGH",
      "description": "Hardcoded secrets/credentials - potential for unauthorized access",
      "recommendation": "Use configuration files or Azure Key Vault"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Security/Authentication/test/TwitterTests.cs",
      "line": 240,
      "type": "hardcoded_secrets",
      "pattern": "secret\\s*=\\s*[\"\\'][^\"\\']{16,}[\"\\']",
      "code": "Secret = \"Test Consumer Secret\"",
      "severity": "HIGH",
      "description": "Hardcoded secrets/credentials - potential for unauthorized access",
      "recommendation": "Use configuration files or Azure Key Vault"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Security/Authentication/test/TwitterTests.cs",
      "line": 289,
      "type": "hardcoded_secrets",
      "pattern": "secret\\s*=\\s*[\"\\'][^\"\\']{16,}[\"\\']",
      "code": "Secret = \"Test Consumer Secret\"",
      "severity": "HIGH",
      "description": "Hardcoded secrets/credentials - potential for unauthorized access",
      "recommendation": "Use configuration files or Azure Key Vault"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Security/Authentication/test/TwitterTests.cs",
      "line": 319,
      "type": "hardcoded_secrets",
      "pattern": "secret\\s*=\\s*[\"\\'][^\"\\']{16,}[\"\\']",
      "code": "Secret = \"Test Consumer Secret\"",
      "severity": "HIGH",
      "description": "Hardcoded secrets/credentials - potential for unauthorized access",
      "recommendation": "Use configuration files or Azure Key Vault"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Security/Authentication/test/TwitterTests.cs",
      "line": 344,
      "type": "hardcoded_secrets",
      "pattern": "secret\\s*=\\s*[\"\\'][^\"\\']{16,}[\"\\']",
      "code": "Secret = \"Test Consumer Secret\"",
      "severity": "HIGH",
      "description": "Hardcoded secrets/credentials - potential for unauthorized access",
      "recommendation": "Use configuration files or Azure Key Vault"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Security/Authentication/test/GoogleTests.cs",
      "line": 1032,
      "type": "hardcoded_secrets",
      "pattern": "secret\\s*=\\s*[\"\\'][^\"\\']{16,}[\"\\']",
      "code": "Secret = \"Test Client Secret\"",
      "severity": "HIGH",
      "description": "Hardcoded secrets/credentials - potential for unauthorized access",
      "recommendation": "Use configuration files or Azure Key Vault"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Security/Authentication/test/JwtBearerTests_Handler.cs",
      "line": 1116,
      "type": "dangerous_api",
      "pattern": "Type.GetType",
      "code": "var constructor = ExceptionType.GetTypeInfo().GetConstructor(new[] { typeof(string) });",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Type.GetType",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Security/Authentication/test/MicrosoftAccountTests.cs",
      "line": 59,
      "type": "hardcoded_secrets",
      "pattern": "secret\\s*=\\s*[\"\\'][^\"\\']{16,}[\"\\']",
      "code": "Secret = \"Test Client Secret\"",
      "severity": "HIGH",
      "description": "Hardcoded secrets/credentials - potential for unauthorized access",
      "recommendation": "Use configuration files or Azure Key Vault"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Security/Authentication/test/MicrosoftAccountTests.cs",
      "line": 199,
      "type": "hardcoded_secrets",
      "pattern": "secret\\s*=\\s*[\"\\'][^\"\\']{16,}[\"\\']",
      "code": "Secret = \"Test Client Secret\"",
      "severity": "HIGH",
      "description": "Hardcoded secrets/credentials - potential for unauthorized access",
      "recommendation": "Use configuration files or Azure Key Vault"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Security/Authentication/test/MicrosoftAccountTests.cs",
      "line": 299,
      "type": "hardcoded_secrets",
      "pattern": "secret\\s*=\\s*[\"\\'][^\"\\']{16,}[\"\\']",
      "code": "Secret = \"Test Client Secret\"",
      "severity": "HIGH",
      "description": "Hardcoded secrets/credentials - potential for unauthorized access",
      "recommendation": "Use configuration files or Azure Key Vault"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Security/Authentication/test/JwtBearerTests.cs",
      "line": 1037,
      "type": "dangerous_api",
      "pattern": "Type.GetType",
      "code": "var constructor = ExceptionType.GetTypeInfo().GetConstructor(new[] { typeof(string) });",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Type.GetType",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Security/Authentication/test/WsFederation/CustomStateDataFormat.cs",
      "line": 14,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Security/Authentication/test/WsFederation/CustomStateDataFormat.cs",
      "line": 14,
      "type": "deserialize_vuln",
      "pattern": "DataContractSerializer",
      "code": "DataContractSerializer",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Security/Authentication/test/OpenIdConnect/OpenIdConnectTests.cs",
      "line": 564,
      "type": "hardcoded_secrets",
      "pattern": "secret\\s*=\\s*[\"\\'][^\"\\']{16,}[\"\\']",
      "code": "Secret = \"overwritten-client-secret\"",
      "severity": "HIGH",
      "description": "Hardcoded secrets/credentials - potential for unauthorized access",
      "recommendation": "Use configuration files or Azure Key Vault"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Security/Authentication/Negotiate/test/Negotiate.Test/LdapSettingsValidationTests.cs",
      "line": 25,
      "type": "hardcoded_secrets",
      "pattern": "password\\s*=\\s*[\"\\'][^\"\\']{8,}[\"\\']",
      "code": "Password = \"Passw0rd\"",
      "severity": "HIGH",
      "description": "Hardcoded secrets/credentials - potential for unauthorized access",
      "recommendation": "Use configuration files or Azure Key Vault"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Security/Authentication/Negotiate/samples/NegotiateAuthSample/Startup.cs",
      "line": 30,
      "type": "hardcoded_secrets",
      "pattern": "password\\s*=\\s*[\"\\'][^\"\\']{8,}[\"\\']",
      "code": "Password = \"PassW0rd\"",
      "severity": "HIGH",
      "description": "Hardcoded secrets/credentials - potential for unauthorized access",
      "recommendation": "Use configuration files or Azure Key Vault"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/SignalR/server/Core/src/Internal/DefaultHubDispatcher.cs",
      "line": 767,
      "type": "dangerous_api",
      "pattern": "Type.GetType",
      "code": "var hubTypeInfo = hubType.GetTypeInfo();",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Type.GetType",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/SignalR/server/Core/src/Internal/TypedClientBuilder.cs",
      "line": 7,
      "type": "dangerous_api",
      "pattern": "System.Reflection.Emit",
      "code": "using System.Reflection.Emit;",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: System.Reflection.Emit",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/SignalR/server/StackExchangeRedis/test/TestConnectionMultiplexer.cs",
      "line": 425,
      "type": "dangerous_api",
      "pattern": "Assembly.GetType",
      "code": "var redisSubscriberType = typeof(RedisChannel).Assembly.GetType(\"StackExchange.Redis.RedisSubscriber\");",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Assembly.GetType",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/SignalR/samples/SocialWeather/Protobuf/WeatherReport.cs",
      "line": 52,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[global::System.CodeDom.Compiler.GeneratedCode(\"protoc\", null)]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/SignalR/samples/SocialWeather/Protobuf/WeatherReport.cs",
      "line": 56,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[global::System.CodeDom.Compiler.GeneratedCode(\"protoc\", null)]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/SignalR/samples/SocialWeather/Protobuf/WeatherReport.cs",
      "line": 62,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[global::System.CodeDom.Compiler.GeneratedCode(\"protoc\", null)]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/SignalR/samples/SocialWeather/Protobuf/WeatherReport.cs",
      "line": 68,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[global::System.CodeDom.Compiler.GeneratedCode(\"protoc\", null)]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/SignalR/samples/SocialWeather/Protobuf/WeatherReport.cs",
      "line": 76,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[global::System.CodeDom.Compiler.GeneratedCode(\"protoc\", null)]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/SignalR/samples/SocialWeather/Protobuf/WeatherReport.cs",
      "line": 86,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[global::System.CodeDom.Compiler.GeneratedCode(\"protoc\", null)]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/SignalR/samples/SocialWeather/Protobuf/WeatherReport.cs",
      "line": 95,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[global::System.CodeDom.Compiler.GeneratedCode(\"protoc\", null)]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/SignalR/samples/SocialWeather/Protobuf/WeatherReport.cs",
      "line": 107,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[global::System.CodeDom.Compiler.GeneratedCode(\"protoc\", null)]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/SignalR/samples/SocialWeather/Protobuf/WeatherReport.cs",
      "line": 119,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[global::System.CodeDom.Compiler.GeneratedCode(\"protoc\", null)]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/SignalR/samples/SocialWeather/Protobuf/WeatherReport.cs",
      "line": 131,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[global::System.CodeDom.Compiler.GeneratedCode(\"protoc\", null)]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/SignalR/samples/SocialWeather/Protobuf/WeatherReport.cs",
      "line": 140,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[global::System.CodeDom.Compiler.GeneratedCode(\"protoc\", null)]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/SignalR/samples/SocialWeather/Protobuf/WeatherReport.cs",
      "line": 146,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[global::System.CodeDom.Compiler.GeneratedCode(\"protoc\", null)]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/SignalR/samples/SocialWeather/Protobuf/WeatherReport.cs",
      "line": 162,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[global::System.CodeDom.Compiler.GeneratedCode(\"protoc\", null)]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/SignalR/samples/SocialWeather/Protobuf/WeatherReport.cs",
      "line": 176,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[global::System.CodeDom.Compiler.GeneratedCode(\"protoc\", null)]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/SignalR/samples/SocialWeather/Protobuf/WeatherReport.cs",
      "line": 182,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[global::System.CodeDom.Compiler.GeneratedCode(\"protoc\", null)]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/SignalR/samples/SocialWeather/Protobuf/WeatherReport.cs",
      "line": 211,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[global::System.CodeDom.Compiler.GeneratedCode(\"protoc\", null)]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/SignalR/samples/SocialWeather/Protobuf/WeatherReport.cs",
      "line": 236,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[global::System.CodeDom.Compiler.GeneratedCode(\"protoc\", null)]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/SignalR/samples/SocialWeather/Protobuf/WeatherReport.cs",
      "line": 258,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[global::System.CodeDom.Compiler.GeneratedCode(\"protoc\", null)]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/SignalR/samples/SocialWeather/Protobuf/WeatherReport.cs",
      "line": 279,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[global::System.CodeDom.Compiler.GeneratedCode(\"protoc\", null)]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/SignalR/samples/SocialWeather/Protobuf/WeatherReport.cs",
      "line": 313,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[global::System.CodeDom.Compiler.GeneratedCode(\"protoc\", null)]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/SignalR/samples/SocialWeather/Protobuf/WeatherReport.cs",
      "line": 345,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[global::System.CodeDom.Compiler.GeneratedCode(\"protoc\", null)]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/SignalR/common/Shared/Utf8BufferTextWriter.cs",
      "line": 115,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "private unsafe void WriteMultiByteChar(char value)",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/SignalR/common/Shared/Utf8BufferTextWriter.cs",
      "line": 185,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "unsafe",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/SignalR/common/Shared/Utf8BufferTextReader.cs",
      "line": 79,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "unsafe",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/SignalR/common/Http.Connections/test/HttpConnectionDispatcherTests.cs",
      "line": 70,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/SignalR/common/Http.Connections/test/HttpConnectionDispatcherTests.cs",
      "line": 95,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/SignalR/common/Http.Connections/test/HttpConnectionDispatcherTests.cs",
      "line": 122,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/SignalR/common/Http.Connections/test/HttpConnectionDispatcherTests.cs",
      "line": 159,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/SignalR/common/Http.Connections/test/HttpConnectionDispatcherTests.cs",
      "line": 187,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/SignalR/common/Http.Connections/test/HttpConnectionDispatcherTests.cs",
      "line": 274,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/SignalR/common/Http.Connections/test/HttpConnectionDispatcherTests.cs",
      "line": 2276,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/SignalR/common/Http.Connections/test/HttpConnectionDispatcherTests.cs",
      "line": 2302,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/SignalR/common/Http.Connections/test/HttpConnectionDispatcherTests.cs",
      "line": 2331,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/SignalR/common/Http.Connections/test/HttpConnectionDispatcherTests.cs",
      "line": 2360,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/SignalR/common/Http.Connections/src/Internal/HttpConnectionDispatcher.cs",
      "line": 512,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "// and it's unsafe to complete outside of the lock",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/SignalR/perf/benchmarkapps/Crankier/WorkerReceiver.cs",
      "line": 41,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/SignalR/perf/benchmarkapps/Crankier/AgentReceiver.cs",
      "line": 32,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/JSInterop/Microsoft.JSInterop/src/Infrastructure/TaskGenericsUtil.cs",
      "line": 33,
      "type": "dangerous_api",
      "pattern": "Activator.CreateInstance",
      "code": ": (ITaskResultGetter)Activator.CreateInstance(",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Activator.CreateInstance",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/JSInterop/Microsoft.JSInterop/src/Infrastructure/TaskGenericsUtil.cs",
      "line": 111,
      "type": "dangerous_api",
      "pattern": "Activator.CreateInstance",
      "code": "return (ITcsResultSetter)Activator.CreateInstance(",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Activator.CreateInstance",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/JSInterop/Microsoft.JSInterop/src/Infrastructure/DotNetObjectReferenceJsonConverterFactory.cs",
      "line": 31,
      "type": "dangerous_api",
      "pattern": "Activator.CreateInstance",
      "code": "return (JsonConverter)Activator.CreateInstance(converterType, JSRuntime)!;",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Activator.CreateInstance",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Features/JsonPatch.SystemTextJson/src/Internal/PocoAdapter.cs",
      "line": 96,
      "type": "dangerous_api",
      "pattern": "Activator.CreateInstance",
      "code": "value = Activator.CreateInstance(jsonProperty.PropertyType);",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Activator.CreateInstance",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Features/JsonPatch.SystemTextJson/src/Converters/JsonPatchDocumentConverterFactory.cs",
      "line": 25,
      "type": "dangerous_api",
      "pattern": "Activator.CreateInstance",
      "code": "return (JsonConverter)Activator.CreateInstance(typeof(JsonConverterForJsonPatchDocumentOfT<>).MakeGenericType(typeToConvert.GenericTypeArguments[0]));",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Activator.CreateInstance",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Features/JsonPatch.SystemTextJson/src/Adapters/AdapterFactory.cs",
      "line": 28,
      "type": "dangerous_api",
      "pattern": "Activator.CreateInstance",
      "code": "return (IAdapter)Activator.CreateInstance(typeof(DictionaryAdapter<,>).MakeGenericType(typeToConvert.GenericTypeArguments[0], typeToConvert.GenericTypeArguments[1]));",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Activator.CreateInstance",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Features/JsonPatch/test/JsonPatchDocumentTest.cs",
      "line": 62,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Features/JsonPatch/test/JsonPatchDocumentTest.cs",
      "line": 89,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Features/JsonPatch/test/JsonPatchDocumentTest.cs",
      "line": 122,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Features/JsonPatch/test/JsonPatchDocumentTest.cs",
      "line": 138,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Features/JsonPatch/test/JsonPatchDocumentTest.cs",
      "line": 155,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Features/JsonPatch/test/IntegrationTests/NestedObjectIntegrationTest.cs",
      "line": 50,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Features/JsonPatch/src/Internal/DynamicObjectAdapter.cs",
      "line": 71,
      "type": "dangerous_api",
      "pattern": "Activator.CreateInstance",
      "code": "value = Activator.CreateInstance(property.GetType());",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Activator.CreateInstance",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Features/JsonPatch/src/Internal/ConversionResultProvider.cs",
      "line": 38,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Features/JsonPatch/src/Internal/ConversionResultProvider.cs",
      "line": 47,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Features/JsonPatch/src/Internal/ConversionResultProvider.cs",
      "line": 72,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Features/JsonPatch/src/Internal/PocoAdapter.cs",
      "line": 99,
      "type": "dangerous_api",
      "pattern": "Activator.CreateInstance",
      "code": "value = Activator.CreateInstance(jsonProperty.PropertyType);",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Activator.CreateInstance",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Features/JsonPatch/src/Converters/TypedJsonPatchDocumentConverter.cs",
      "line": 39,
      "type": "dangerous_api",
      "pattern": "Activator.CreateInstance",
      "code": "var targetOperations = Activator.CreateInstance(concreteList);",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Activator.CreateInstance",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Features/JsonPatch/src/Converters/TypedJsonPatchDocumentConverter.cs",
      "line": 52,
      "type": "dangerous_api",
      "pattern": "Activator.CreateInstance",
      "code": "var container = Activator.CreateInstance(objectType, targetOperations, JsonPatchDocumentConverter.DefaultContractResolver);",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Activator.CreateInstance",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Features/JsonPatch/src/Adapters/AdapterFactory.cs",
      "line": 41,
      "type": "dangerous_api",
      "pattern": "Activator.CreateInstance",
      "code": "return (IAdapter)Activator.CreateInstance(type);",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Activator.CreateInstance",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Shared/TrimmingAttributes.cs",
      "line": 14,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "/// This allows tools to understand which methods are unsafe to call when compiling ahead of time.",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Shared/TrimmingAttributes.cs",
      "line": 50,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "/// This allows tools to understand which methods are unsafe to call when removing unreferenced",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Shared/Buffers.MemoryPool/DiagnosticPoolBlock.cs",
      "line": 151,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "unsafe",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Shared/Buffers.MemoryPool/DiagnosticMemoryPool.cs",
      "line": 171,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "unsafe",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Shared/Buffers.MemoryPool/UnmanagedBufferAllocator.cs",
      "line": 12,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "internal unsafe struct UnmanagedBufferAllocator : IDisposable",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Shared/BenchmarkRunner/AspNetCoreBenchmarkAttribute.cs",
      "line": 56,
      "type": "dangerous_api",
      "pattern": "Activator.CreateInstance",
      "code": "return (IConfig)Activator.CreateInstance(configType, Array.Empty<object>());",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Activator.CreateInstance",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Shared/CertificateGeneration/MacOSCertificateManager.cs",
      "line": 104,
      "type": "command_injection",
      "pattern": "Process\\.Start\\(.*\\+",
      "code": "Process.Start(MacOSTrustCertificateCommandLine, MacOSTrustCertificateCommandLineArguments +",
      "severity": "CRITICAL",
      "description": "Command Injection vulnerability - potential for arbitrary command execution",
      "recommendation": "Validate and sanitize all user input, use ProcessStartInfo safely"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Shared/test/Shared.Tests/runtime/Http2/HuffmanDecodingTests.cs",
      "line": 133,
      "type": "insecure_random",
      "pattern": "Random\\(.*\\)",
      "code": "Random(42).NextBytes(data)",
      "severity": "MEDIUM",
      "description": "Insecure random number generation - potential for predictable values",
      "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Shared/RoslynUtils/CodeWriter.cs",
      "line": 4,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "using System.CodeDom.Compiler;",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Shared/ValueStringBuilder/ValueStringBuilder.cs",
      "line": 230,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "public unsafe void Append(char* value, int length)",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Shared/HttpSys/NativeInterop/CookedUrl.cs",
      "line": 19,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "internal unsafe string? GetFullUrl()",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Shared/HttpSys/NativeInterop/CookedUrl.cs",
      "line": 28,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "internal unsafe string? GetHost()",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Shared/HttpSys/NativeInterop/CookedUrl.cs",
      "line": 37,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "internal unsafe string? GetAbsPath()",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Shared/HttpSys/NativeInterop/CookedUrl.cs",
      "line": 46,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "internal unsafe string? GetQueryString()",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Shared/HttpSys/NativeInterop/SecPkgContext_CipherInfo.cs",
      "line": 10,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "internal unsafe struct SecPkgContext_CipherInfo",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Shared/HttpSys/NativeInterop/HttpApiTypes.cs",
      "line": 11,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "internal static unsafe class HttpApiTypes",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Shared/HttpSys/NativeInterop/SocketAddress.cs",
      "line": 16,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "internal static unsafe SocketAddress? CopyOutAddress(SOCKADDR* pSockaddr)",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Shared/HttpSys/RequestProcessing/NativeRequestContext.cs",
      "line": 821,
      "type": "dangerous_api",
      "pattern": "Marshal.Copy",
      "code": "Marshal.Copy((IntPtr)clientCert, certEncoded, 0, certEncoded.Length);",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Marshal.Copy",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Shared/HttpSys/RequestProcessing/NativeRequestContext.cs",
      "line": 25,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "internal unsafe class NativeRequestContext : IDisposable",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Shared/HttpSys/RequestProcessing/NativeRequestContext.cs",
      "line": 826,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "private sealed unsafe class PointerMemoryManager<T> : MemoryManager<T> where T : struct",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Shared/HttpSys/RequestProcessing/RequestHeaders.Generated.cs",
      "line": 6,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "using System.CodeDom.Compiler;",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Shared/HttpSys/RequestProcessing/HeaderEncoding.cs",
      "line": 11,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "internal static unsafe string GetString(byte* pBytes, int byteCount, bool useLatin1)",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Shared/ObjectMethodExecutor/AwaitableInfo.cs",
      "line": 85,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "MethodInfo? unsafeOnCompletedMethod = null;",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Shared/ObjectMethodExecutor/AwaitableInfo.cs",
      "line": 89,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "unsafeOnCompletedMethod = ICriticalNotifyCompletion_UnsafeOnCompleted;",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Shared/ObjectMethodExecutor/AwaitableInfo.cs",
      "line": 106,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "unsafeOnCompletedMethod,",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Shared/ObjectMethodExecutor/ObjectMethodExecutorAwaitable.cs",
      "line": 23,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "private readonly Action<object, Action> _unsafeOnCompletedMethod;",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Shared/ObjectMethodExecutor/ObjectMethodExecutorAwaitable.cs",
      "line": 49,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "Action<object, Action> unsafeOnCompletedMethod)",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Shared/ObjectMethodExecutor/ObjectMethodExecutorAwaitable.cs",
      "line": 56,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "_unsafeOnCompletedMethod = unsafeOnCompletedMethod;",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Shared/ObjectMethodExecutor/ObjectMethodExecutorAwaitable.cs",
      "line": 62,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "return new Awaiter(customAwaiter, _isCompletedMethod, _getResultMethod, _onCompletedMethod, _unsafeOnCompletedMethod);",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Shared/ObjectMethodExecutor/ObjectMethodExecutorAwaitable.cs",
      "line": 71,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "private readonly Action<object, Action> _unsafeOnCompletedMethod;",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Shared/ObjectMethodExecutor/ObjectMethodExecutorAwaitable.cs",
      "line": 78,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "Action<object, Action> unsafeOnCompletedMethod)",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Shared/ObjectMethodExecutor/ObjectMethodExecutorAwaitable.cs",
      "line": 84,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "_unsafeOnCompletedMethod = unsafeOnCompletedMethod;",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Shared/ObjectMethodExecutor/ObjectMethodExecutorAwaitable.cs",
      "line": 111,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "var underlyingMethodToUse = _unsafeOnCompletedMethod ?? _onCompletedMethod;",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Shared/ObjectMethodExecutor/ObjectMethodExecutor.cs",
      "line": 27,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "typeof(Action<object, Action>)  // unsafeOnCompletedMethod",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Shared/ObjectMethodExecutor/ObjectMethodExecutor.cs",
      "line": 343,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "Action<object, Action>? unsafeOnCompletedFunc = null;",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Shared/ObjectMethodExecutor/ObjectMethodExecutor.cs",
      "line": 346,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "// var unsafeOnCompletedFunc = (object awaiter, Action continuation) => {",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Shared/ObjectMethodExecutor/ObjectMethodExecutor.cs",
      "line": 349,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "var unsafeOnCompletedParam1 = Expression.Parameter(typeof(object), \"awaiter\");",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Shared/ObjectMethodExecutor/ObjectMethodExecutor.cs",
      "line": 350,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "var unsafeOnCompletedParam2 = Expression.Parameter(typeof(Action), \"continuation\");",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Shared/ObjectMethodExecutor/ObjectMethodExecutor.cs",
      "line": 351,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "unsafeOnCompletedFunc = Expression.Lambda<Action<object, Action>>(",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Shared/ObjectMethodExecutor/ObjectMethodExecutor.cs",
      "line": 353,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "Expression.Convert(unsafeOnCompletedParam1, awaitableInfo.AwaiterType),",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Shared/ObjectMethodExecutor/ObjectMethodExecutor.cs",
      "line": 355,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "unsafeOnCompletedParam2),",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Shared/ObjectMethodExecutor/ObjectMethodExecutor.cs",
      "line": 356,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "unsafeOnCompletedParam1,",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Shared/ObjectMethodExecutor/ObjectMethodExecutor.cs",
      "line": 357,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "unsafeOnCompletedParam2).Compile();",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Shared/ObjectMethodExecutor/ObjectMethodExecutor.cs",
      "line": 372,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "//     unsafeOnCompletedFunc);",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Shared/ObjectMethodExecutor/ObjectMethodExecutor.cs",
      "line": 380,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "Expression.Constant(unsafeOnCompletedFunc, typeof(Action<object, Action>)));",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Shared/E2ETesting/WaitAssert.cs",
      "line": 127,
      "type": "xss",
      "pattern": "innerHTML\\s*=",
      "code": "innerHtml =",
      "severity": "HIGH",
      "description": "Cross-Site Scripting (XSS) vulnerability - potential for client-side code injection",
      "recommendation": "Encode output, use AntiXSS library, implement CSP"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/WebEncoders/src/Testing/JavaScriptTestEncoder.cs",
      "line": 78,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "public override unsafe int FindFirstCharacterToEncode(char* text, int textLength)",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/WebEncoders/src/Testing/JavaScriptTestEncoder.cs",
      "line": 84,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "public override unsafe bool TryEncodeUnicodeScalar(",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/WebEncoders/src/Testing/HtmlTestEncoder.cs",
      "line": 78,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "public override unsafe int FindFirstCharacterToEncode(char* text, int textLength)",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/WebEncoders/src/Testing/HtmlTestEncoder.cs",
      "line": 84,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "public override unsafe bool TryEncodeUnicodeScalar(",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/WebEncoders/src/Testing/UrlTestEncoder.cs",
      "line": 78,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "public override unsafe int FindFirstCharacterToEncode(char* text, int textLength)",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/WebEncoders/src/Testing/UrlTestEncoder.cs",
      "line": 84,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "public override unsafe bool TryEncodeUnicodeScalar(",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.SourceGenerators.Tests/SnapshotTestHelper.cs",
      "line": 543,
      "type": "dangerous_api",
      "pattern": "Type.GetType",
      "code": "var publicHostAbortedExceptionType = Type.GetType(\"Microsoft.Extensions.Hosting.HostAbortedException, Microsoft.Extensions.Hosting.Abstractions\", throwOnError: false);",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Type.GetType",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.SourceGenerators.Tests/SnapshotTestHelper.cs",
      "line": 546,
      "type": "dangerous_api",
      "pattern": "Activator.CreateInstance",
      "code": "throw (Exception)Activator.CreateInstance(publicHostAbortedExceptionType)!;",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Activator.CreateInstance",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.SourceGenerators.Tests/SnapshotTestHelper.cs",
      "line": 191,
      "type": "dangerous_api",
      "pattern": "Assembly.GetType",
      "code": "var serviceType = targetAssembly.GetType(\"Microsoft.Extensions.ApiDescriptions.IDocumentProvider\", throwOnError: false);",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Assembly.GetType",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.SourceGenerators.Tests/OperationTests.Controllers.cs",
      "line": 69,
      "type": "csrf",
      "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
      "code": "[HttpPost]",
      "severity": "MEDIUM",
      "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
      "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.SourceGenerators.Tests/snapshots/SchemaTests.XmlCommentsOnPropertiesShouldApplyToSchemaReferences#OpenApiXmlCommentSupport.generated.verified.cs",
      "line": 17,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.AspNetCore.OpenApi.SourceGenerators, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.SourceGenerators.Tests/snapshots/SchemaTests.XmlCommentsOnPropertiesShouldApplyToSchemaReferences#OpenApiXmlCommentSupport.generated.verified.cs",
      "line": 46,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.AspNetCore.OpenApi.SourceGenerators, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.SourceGenerators.Tests/snapshots/SchemaTests.XmlCommentsOnPropertiesShouldApplyToSchemaReferences#OpenApiXmlCommentSupport.generated.verified.cs",
      "line": 58,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.AspNetCore.OpenApi.SourceGenerators, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.SourceGenerators.Tests/snapshots/SchemaTests.XmlCommentsOnPropertiesShouldApplyToSchemaReferences#OpenApiXmlCommentSupport.generated.verified.cs",
      "line": 61,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.AspNetCore.OpenApi.SourceGenerators, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.SourceGenerators.Tests/snapshots/SchemaTests.XmlCommentsOnPropertiesShouldApplyToSchemaReferences#OpenApiXmlCommentSupport.generated.verified.cs",
      "line": 64,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.AspNetCore.OpenApi.SourceGenerators, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.SourceGenerators.Tests/snapshots/SchemaTests.XmlCommentsOnPropertiesShouldApplyToSchemaReferences#OpenApiXmlCommentSupport.generated.verified.cs",
      "line": 88,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.AspNetCore.OpenApi.SourceGenerators, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.SourceGenerators.Tests/snapshots/SchemaTests.XmlCommentsOnPropertiesShouldApplyToSchemaReferences#OpenApiXmlCommentSupport.generated.verified.cs",
      "line": 351,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.AspNetCore.OpenApi.SourceGenerators, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.SourceGenerators.Tests/snapshots/SchemaTests.XmlCommentsOnPropertiesShouldApplyToSchemaReferences#OpenApiXmlCommentSupport.generated.verified.cs",
      "line": 516,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.AspNetCore.OpenApi.SourceGenerators, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.SourceGenerators.Tests/snapshots/SchemaTests.XmlCommentsOnPropertiesShouldApplyToSchemaReferences#OpenApiXmlCommentSupport.generated.verified.cs",
      "line": 574,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.AspNetCore.OpenApi.SourceGenerators, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.SourceGenerators.Tests/snapshots/SchemaTests.XmlCommentsOnPropertiesShouldApplyToSchemaReferences#OpenApiXmlCommentSupport.generated.verified.cs",
      "line": 603,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.AspNetCore.OpenApi.SourceGenerators, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.SourceGenerators.Tests/snapshots/OperationTests.SupportsXmlCommentsOnOperationsFromMinimalApis#OpenApiXmlCommentSupport.generated.verified.cs",
      "line": 17,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.AspNetCore.OpenApi.SourceGenerators, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.SourceGenerators.Tests/snapshots/OperationTests.SupportsXmlCommentsOnOperationsFromMinimalApis#OpenApiXmlCommentSupport.generated.verified.cs",
      "line": 46,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.AspNetCore.OpenApi.SourceGenerators, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.SourceGenerators.Tests/snapshots/OperationTests.SupportsXmlCommentsOnOperationsFromMinimalApis#OpenApiXmlCommentSupport.generated.verified.cs",
      "line": 58,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.AspNetCore.OpenApi.SourceGenerators, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.SourceGenerators.Tests/snapshots/OperationTests.SupportsXmlCommentsOnOperationsFromMinimalApis#OpenApiXmlCommentSupport.generated.verified.cs",
      "line": 61,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.AspNetCore.OpenApi.SourceGenerators, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.SourceGenerators.Tests/snapshots/OperationTests.SupportsXmlCommentsOnOperationsFromMinimalApis#OpenApiXmlCommentSupport.generated.verified.cs",
      "line": 64,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.AspNetCore.OpenApi.SourceGenerators, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.SourceGenerators.Tests/snapshots/OperationTests.SupportsXmlCommentsOnOperationsFromMinimalApis#OpenApiXmlCommentSupport.generated.verified.cs",
      "line": 127,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.AspNetCore.OpenApi.SourceGenerators, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.SourceGenerators.Tests/snapshots/OperationTests.SupportsXmlCommentsOnOperationsFromMinimalApis#OpenApiXmlCommentSupport.generated.verified.cs",
      "line": 390,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.AspNetCore.OpenApi.SourceGenerators, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.SourceGenerators.Tests/snapshots/OperationTests.SupportsXmlCommentsOnOperationsFromMinimalApis#OpenApiXmlCommentSupport.generated.verified.cs",
      "line": 555,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.AspNetCore.OpenApi.SourceGenerators, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.SourceGenerators.Tests/snapshots/OperationTests.SupportsXmlCommentsOnOperationsFromMinimalApis#OpenApiXmlCommentSupport.generated.verified.cs",
      "line": 613,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.AspNetCore.OpenApi.SourceGenerators, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.SourceGenerators.Tests/snapshots/OperationTests.SupportsXmlCommentsOnOperationsFromMinimalApis#OpenApiXmlCommentSupport.generated.verified.cs",
      "line": 642,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.AspNetCore.OpenApi.SourceGenerators, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.SourceGenerators.Tests/snapshots/AdditionalTextsTests.CanHandleXmlForSchemasInAdditionalTexts#OpenApiXmlCommentSupport.generated.verified.cs",
      "line": 17,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.AspNetCore.OpenApi.SourceGenerators, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.SourceGenerators.Tests/snapshots/AdditionalTextsTests.CanHandleXmlForSchemasInAdditionalTexts#OpenApiXmlCommentSupport.generated.verified.cs",
      "line": 46,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.AspNetCore.OpenApi.SourceGenerators, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.SourceGenerators.Tests/snapshots/AdditionalTextsTests.CanHandleXmlForSchemasInAdditionalTexts#OpenApiXmlCommentSupport.generated.verified.cs",
      "line": 58,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.AspNetCore.OpenApi.SourceGenerators, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.SourceGenerators.Tests/snapshots/AdditionalTextsTests.CanHandleXmlForSchemasInAdditionalTexts#OpenApiXmlCommentSupport.generated.verified.cs",
      "line": 61,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.AspNetCore.OpenApi.SourceGenerators, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.SourceGenerators.Tests/snapshots/AdditionalTextsTests.CanHandleXmlForSchemasInAdditionalTexts#OpenApiXmlCommentSupport.generated.verified.cs",
      "line": 64,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.AspNetCore.OpenApi.SourceGenerators, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.SourceGenerators.Tests/snapshots/AdditionalTextsTests.CanHandleXmlForSchemasInAdditionalTexts#OpenApiXmlCommentSupport.generated.verified.cs",
      "line": 108,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.AspNetCore.OpenApi.SourceGenerators, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.SourceGenerators.Tests/snapshots/AdditionalTextsTests.CanHandleXmlForSchemasInAdditionalTexts#OpenApiXmlCommentSupport.generated.verified.cs",
      "line": 371,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.AspNetCore.OpenApi.SourceGenerators, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.SourceGenerators.Tests/snapshots/AdditionalTextsTests.CanHandleXmlForSchemasInAdditionalTexts#OpenApiXmlCommentSupport.generated.verified.cs",
      "line": 536,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.AspNetCore.OpenApi.SourceGenerators, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.SourceGenerators.Tests/snapshots/AdditionalTextsTests.CanHandleXmlForSchemasInAdditionalTexts#OpenApiXmlCommentSupport.generated.verified.cs",
      "line": 594,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.AspNetCore.OpenApi.SourceGenerators, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.SourceGenerators.Tests/snapshots/AdditionalTextsTests.CanHandleXmlForSchemasInAdditionalTexts#OpenApiXmlCommentSupport.generated.verified.cs",
      "line": 623,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.AspNetCore.OpenApi.SourceGenerators, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.SourceGenerators.Tests/snapshots/AddOpenApiTests.CanInterceptAddOpenApi#OpenApiXmlCommentSupport.generated.verified.cs",
      "line": 17,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.AspNetCore.OpenApi.SourceGenerators, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.SourceGenerators.Tests/snapshots/AddOpenApiTests.CanInterceptAddOpenApi#OpenApiXmlCommentSupport.generated.verified.cs",
      "line": 46,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.AspNetCore.OpenApi.SourceGenerators, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.SourceGenerators.Tests/snapshots/AddOpenApiTests.CanInterceptAddOpenApi#OpenApiXmlCommentSupport.generated.verified.cs",
      "line": 58,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.AspNetCore.OpenApi.SourceGenerators, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.SourceGenerators.Tests/snapshots/AddOpenApiTests.CanInterceptAddOpenApi#OpenApiXmlCommentSupport.generated.verified.cs",
      "line": 61,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.AspNetCore.OpenApi.SourceGenerators, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.SourceGenerators.Tests/snapshots/AddOpenApiTests.CanInterceptAddOpenApi#OpenApiXmlCommentSupport.generated.verified.cs",
      "line": 64,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.AspNetCore.OpenApi.SourceGenerators, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.SourceGenerators.Tests/snapshots/AddOpenApiTests.CanInterceptAddOpenApi#OpenApiXmlCommentSupport.generated.verified.cs",
      "line": 79,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.AspNetCore.OpenApi.SourceGenerators, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.SourceGenerators.Tests/snapshots/AddOpenApiTests.CanInterceptAddOpenApi#OpenApiXmlCommentSupport.generated.verified.cs",
      "line": 342,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.AspNetCore.OpenApi.SourceGenerators, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.SourceGenerators.Tests/snapshots/AddOpenApiTests.CanInterceptAddOpenApi#OpenApiXmlCommentSupport.generated.verified.cs",
      "line": 507,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.AspNetCore.OpenApi.SourceGenerators, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.SourceGenerators.Tests/snapshots/AddOpenApiTests.CanInterceptAddOpenApi#OpenApiXmlCommentSupport.generated.verified.cs",
      "line": 565,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.AspNetCore.OpenApi.SourceGenerators, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.SourceGenerators.Tests/snapshots/AddOpenApiTests.CanInterceptAddOpenApi#OpenApiXmlCommentSupport.generated.verified.cs",
      "line": 594,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.AspNetCore.OpenApi.SourceGenerators, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.SourceGenerators.Tests/snapshots/CompletenessTests.SupportsAllXmlTagsOnSchemas#OpenApiXmlCommentSupport.generated.verified.cs",
      "line": 17,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.AspNetCore.OpenApi.SourceGenerators, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.SourceGenerators.Tests/snapshots/CompletenessTests.SupportsAllXmlTagsOnSchemas#OpenApiXmlCommentSupport.generated.verified.cs",
      "line": 46,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.AspNetCore.OpenApi.SourceGenerators, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.SourceGenerators.Tests/snapshots/CompletenessTests.SupportsAllXmlTagsOnSchemas#OpenApiXmlCommentSupport.generated.verified.cs",
      "line": 58,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.AspNetCore.OpenApi.SourceGenerators, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.SourceGenerators.Tests/snapshots/CompletenessTests.SupportsAllXmlTagsOnSchemas#OpenApiXmlCommentSupport.generated.verified.cs",
      "line": 61,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.AspNetCore.OpenApi.SourceGenerators, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.SourceGenerators.Tests/snapshots/CompletenessTests.SupportsAllXmlTagsOnSchemas#OpenApiXmlCommentSupport.generated.verified.cs",
      "line": 64,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.AspNetCore.OpenApi.SourceGenerators, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.SourceGenerators.Tests/snapshots/CompletenessTests.SupportsAllXmlTagsOnSchemas#OpenApiXmlCommentSupport.generated.verified.cs",
      "line": 206,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.AspNetCore.OpenApi.SourceGenerators, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.SourceGenerators.Tests/snapshots/CompletenessTests.SupportsAllXmlTagsOnSchemas#OpenApiXmlCommentSupport.generated.verified.cs",
      "line": 469,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.AspNetCore.OpenApi.SourceGenerators, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.SourceGenerators.Tests/snapshots/CompletenessTests.SupportsAllXmlTagsOnSchemas#OpenApiXmlCommentSupport.generated.verified.cs",
      "line": 634,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.AspNetCore.OpenApi.SourceGenerators, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.SourceGenerators.Tests/snapshots/CompletenessTests.SupportsAllXmlTagsOnSchemas#OpenApiXmlCommentSupport.generated.verified.cs",
      "line": 692,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.AspNetCore.OpenApi.SourceGenerators, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.SourceGenerators.Tests/snapshots/CompletenessTests.SupportsAllXmlTagsOnSchemas#OpenApiXmlCommentSupport.generated.verified.cs",
      "line": 721,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.AspNetCore.OpenApi.SourceGenerators, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.SourceGenerators.Tests/snapshots/OperationTests.SupportsXmlCommentsOnOperationsFromControllers#OpenApiXmlCommentSupport.generated.verified.cs",
      "line": 17,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.AspNetCore.OpenApi.SourceGenerators, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.SourceGenerators.Tests/snapshots/OperationTests.SupportsXmlCommentsOnOperationsFromControllers#OpenApiXmlCommentSupport.generated.verified.cs",
      "line": 46,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.AspNetCore.OpenApi.SourceGenerators, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.SourceGenerators.Tests/snapshots/OperationTests.SupportsXmlCommentsOnOperationsFromControllers#OpenApiXmlCommentSupport.generated.verified.cs",
      "line": 58,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.AspNetCore.OpenApi.SourceGenerators, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.SourceGenerators.Tests/snapshots/OperationTests.SupportsXmlCommentsOnOperationsFromControllers#OpenApiXmlCommentSupport.generated.verified.cs",
      "line": 61,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.AspNetCore.OpenApi.SourceGenerators, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.SourceGenerators.Tests/snapshots/OperationTests.SupportsXmlCommentsOnOperationsFromControllers#OpenApiXmlCommentSupport.generated.verified.cs",
      "line": 64,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.AspNetCore.OpenApi.SourceGenerators, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.SourceGenerators.Tests/snapshots/OperationTests.SupportsXmlCommentsOnOperationsFromControllers#OpenApiXmlCommentSupport.generated.verified.cs",
      "line": 83,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.AspNetCore.OpenApi.SourceGenerators, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.SourceGenerators.Tests/snapshots/OperationTests.SupportsXmlCommentsOnOperationsFromControllers#OpenApiXmlCommentSupport.generated.verified.cs",
      "line": 346,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.AspNetCore.OpenApi.SourceGenerators, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.SourceGenerators.Tests/snapshots/OperationTests.SupportsXmlCommentsOnOperationsFromControllers#OpenApiXmlCommentSupport.generated.verified.cs",
      "line": 511,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.AspNetCore.OpenApi.SourceGenerators, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.SourceGenerators.Tests/snapshots/OperationTests.SupportsXmlCommentsOnOperationsFromControllers#OpenApiXmlCommentSupport.generated.verified.cs",
      "line": 569,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.AspNetCore.OpenApi.SourceGenerators, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.SourceGenerators.Tests/snapshots/OperationTests.SupportsXmlCommentsOnOperationsFromControllers#OpenApiXmlCommentSupport.generated.verified.cs",
      "line": 598,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.AspNetCore.OpenApi.SourceGenerators, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.SourceGenerators.Tests/snapshots/XmlCommentDocumentationIdTests.CanMergeXmlCommentsWithDifferentDocumentationIdFormats#OpenApiXmlCommentSupport.generated.verified.cs",
      "line": 17,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.AspNetCore.OpenApi.SourceGenerators, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.SourceGenerators.Tests/snapshots/XmlCommentDocumentationIdTests.CanMergeXmlCommentsWithDifferentDocumentationIdFormats#OpenApiXmlCommentSupport.generated.verified.cs",
      "line": 46,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.AspNetCore.OpenApi.SourceGenerators, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.SourceGenerators.Tests/snapshots/XmlCommentDocumentationIdTests.CanMergeXmlCommentsWithDifferentDocumentationIdFormats#OpenApiXmlCommentSupport.generated.verified.cs",
      "line": 58,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.AspNetCore.OpenApi.SourceGenerators, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.SourceGenerators.Tests/snapshots/XmlCommentDocumentationIdTests.CanMergeXmlCommentsWithDifferentDocumentationIdFormats#OpenApiXmlCommentSupport.generated.verified.cs",
      "line": 61,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.AspNetCore.OpenApi.SourceGenerators, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.SourceGenerators.Tests/snapshots/XmlCommentDocumentationIdTests.CanMergeXmlCommentsWithDifferentDocumentationIdFormats#OpenApiXmlCommentSupport.generated.verified.cs",
      "line": 64,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.AspNetCore.OpenApi.SourceGenerators, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.SourceGenerators.Tests/snapshots/XmlCommentDocumentationIdTests.CanMergeXmlCommentsWithDifferentDocumentationIdFormats#OpenApiXmlCommentSupport.generated.verified.cs",
      "line": 80,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.AspNetCore.OpenApi.SourceGenerators, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.SourceGenerators.Tests/snapshots/XmlCommentDocumentationIdTests.CanMergeXmlCommentsWithDifferentDocumentationIdFormats#OpenApiXmlCommentSupport.generated.verified.cs",
      "line": 343,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.AspNetCore.OpenApi.SourceGenerators, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.SourceGenerators.Tests/snapshots/XmlCommentDocumentationIdTests.CanMergeXmlCommentsWithDifferentDocumentationIdFormats#OpenApiXmlCommentSupport.generated.verified.cs",
      "line": 508,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.AspNetCore.OpenApi.SourceGenerators, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.SourceGenerators.Tests/snapshots/XmlCommentDocumentationIdTests.CanMergeXmlCommentsWithDifferentDocumentationIdFormats#OpenApiXmlCommentSupport.generated.verified.cs",
      "line": 566,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.AspNetCore.OpenApi.SourceGenerators, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.SourceGenerators.Tests/snapshots/XmlCommentDocumentationIdTests.CanMergeXmlCommentsWithDifferentDocumentationIdFormats#OpenApiXmlCommentSupport.generated.verified.cs",
      "line": 595,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.AspNetCore.OpenApi.SourceGenerators, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.SourceGenerators.Tests/snapshots/SchemaTests.SupportsXmlCommentsOnSchemas#OpenApiXmlCommentSupport.generated.verified.cs",
      "line": 17,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.AspNetCore.OpenApi.SourceGenerators, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.SourceGenerators.Tests/snapshots/SchemaTests.SupportsXmlCommentsOnSchemas#OpenApiXmlCommentSupport.generated.verified.cs",
      "line": 46,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.AspNetCore.OpenApi.SourceGenerators, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.SourceGenerators.Tests/snapshots/SchemaTests.SupportsXmlCommentsOnSchemas#OpenApiXmlCommentSupport.generated.verified.cs",
      "line": 58,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.AspNetCore.OpenApi.SourceGenerators, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.SourceGenerators.Tests/snapshots/SchemaTests.SupportsXmlCommentsOnSchemas#OpenApiXmlCommentSupport.generated.verified.cs",
      "line": 61,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.AspNetCore.OpenApi.SourceGenerators, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.SourceGenerators.Tests/snapshots/SchemaTests.SupportsXmlCommentsOnSchemas#OpenApiXmlCommentSupport.generated.verified.cs",
      "line": 64,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.AspNetCore.OpenApi.SourceGenerators, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.SourceGenerators.Tests/snapshots/SchemaTests.SupportsXmlCommentsOnSchemas#OpenApiXmlCommentSupport.generated.verified.cs",
      "line": 109,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.AspNetCore.OpenApi.SourceGenerators, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.SourceGenerators.Tests/snapshots/SchemaTests.SupportsXmlCommentsOnSchemas#OpenApiXmlCommentSupport.generated.verified.cs",
      "line": 372,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.AspNetCore.OpenApi.SourceGenerators, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.SourceGenerators.Tests/snapshots/SchemaTests.SupportsXmlCommentsOnSchemas#OpenApiXmlCommentSupport.generated.verified.cs",
      "line": 537,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.AspNetCore.OpenApi.SourceGenerators, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.SourceGenerators.Tests/snapshots/SchemaTests.SupportsXmlCommentsOnSchemas#OpenApiXmlCommentSupport.generated.verified.cs",
      "line": 595,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.AspNetCore.OpenApi.SourceGenerators, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.SourceGenerators.Tests/snapshots/SchemaTests.SupportsXmlCommentsOnSchemas#OpenApiXmlCommentSupport.generated.verified.cs",
      "line": 624,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.AspNetCore.OpenApi.SourceGenerators, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.Tests/Services/OpenApiDocumentServiceTestsBase.cs",
      "line": 206,
      "type": "dangerous_api",
      "pattern": "Type.GetType",
      "code": "action.ControllerTypeInfo = controllerType.GetTypeInfo();",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Type.GetType",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/OpenApi/test/Microsoft.AspNetCore.OpenApi.Tests/Services/OpenApiSchemaService/OpenApiSchemaService.RequestBodySchemas.cs",
      "line": 996,
      "type": "csrf",
      "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
      "code": "[HttpPost]",
      "severity": "MEDIUM",
      "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
      "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/OpenApi/gen/XmlCommentGenerator.Emitter.cs",
      "line": 16,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "public static string GeneratedCodeConstructor => $@\"System.CodeDom.Compiler.GeneratedCodeAttribute(\"\"{typeof(XmlCommentGenerator).Assembly.FullName}\"\", \"\"{typeof(XmlCommentGenerator).Assembly.GetName().Version}\"\")\";",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/OpenApi/gen/Helpers/ISymbolExtensions.cs",
      "line": 80,
      "type": "dangerous_api",
      "pattern": "Type.GetType",
      "code": "results.AddRange(containingType.GetTypeArguments());",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Type.GetType",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/OpenApi/sample/Controllers/TestController.cs",
      "line": 29,
      "type": "csrf",
      "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
      "code": "[HttpPost]",
      "severity": "MEDIUM",
      "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
      "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/OpenApi/sample/Controllers/XmlController.cs",
      "line": 32,
      "type": "csrf",
      "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
      "code": "[HttpPost]",
      "severity": "MEDIUM",
      "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
      "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Testing/test/QuarantinedTestAttributeTest.cs",
      "line": 27,
      "type": "insecure_random",
      "pattern": "Random\\(\\)",
      "code": "Random()",
      "severity": "MEDIUM",
      "description": "Insecure random number generation - potential for predictable values",
      "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Testing/test/QuarantinedTestAttributeTest.cs",
      "line": 27,
      "type": "insecure_random",
      "pattern": "Random\\(.*\\)",
      "code": "Random().Next(100) <= 80)",
      "severity": "MEDIUM",
      "description": "Insecure random number generation - potential for predictable values",
      "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Testing/test/HttpClientSlimTest.cs",
      "line": 74,
      "type": "insecure_random",
      "pattern": "Random\\(\\)",
      "code": "Random()",
      "severity": "MEDIUM",
      "description": "Insecure random number generation - potential for predictable values",
      "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Testing/test/HttpClientSlimTest.cs",
      "line": 74,
      "type": "insecure_random",
      "pattern": "Random\\(.*\\)",
      "code": "Random()",
      "severity": "MEDIUM",
      "description": "Insecure random number generation - potential for predictable values",
      "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Testing/test/TestableAssembly.cs",
      "line": 7,
      "type": "dangerous_api",
      "pattern": "System.Reflection.Emit",
      "code": "using System.Reflection.Emit;",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: System.Reflection.Emit",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Testing/src/TestPlatformHelper.cs",
      "line": 12,
      "type": "dangerous_api",
      "pattern": "Type.GetType",
      "code": "Type.GetType(\"Mono.Runtime\") != null;",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Type.GetType",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Testing/src/xunit/AspNetTestAssemblyRunner.cs",
      "line": 63,
      "type": "dangerous_api",
      "pattern": "Activator.CreateInstance",
      "code": "instance = Activator.CreateInstance(fixtureAttribute.FixtureType);",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Activator.CreateInstance",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Testing/src/xunit/AspNetTestAssemblyRunner.cs",
      "line": 67,
      "type": "dangerous_api",
      "pattern": "Activator.CreateInstance",
      "code": "instance = Activator.CreateInstance(fixtureAttribute.FixtureType, DiagnosticMessageSink);",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Activator.CreateInstance",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Testing/src/LoggedTest/LoggedTestBase.cs",
      "line": 73,
      "type": "dangerous_api",
      "pattern": "Type.GetType",
      "code": ".ForAssembly(classType.GetTypeInfo().Assembly)",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Type.GetType",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Testing/src/DumpCollector/DumpCollector.Windows.cs",
      "line": 33,
      "type": "pinvoke",
      "pattern": "DllImport",
      "code": "[DllImport(\"Dbghelp.dll\")]",
      "severity": "HIGH",
      "description": "P/Invoke call detected - potential security risk",
      "recommendation": "Validate all P/Invoke calls and ensure proper input validation"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Components/benchmarkapps/Wasm.Performance/TestApp/Person.cs",
      "line": 20,
      "type": "insecure_random",
      "pattern": "Random\\(.*\\)",
      "code": "Random(0)",
      "severity": "MEDIUM",
      "description": "Insecure random number generation - potential for predictable values",
      "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Components/benchmarkapps/Wasm.Performance/Driver/Program.cs",
      "line": 95,
      "type": "xss",
      "pattern": "innerHTML\\s*=",
      "code": "innerHtml =",
      "severity": "HIGH",
      "description": "Cross-Site Scripting (XSS) vulnerability - potential for client-side code injection",
      "recommendation": "Encode output, use AntiXSS library, implement CSP"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Components/Endpoints/test/EndpointHtmlRendererTest.cs",
      "line": 1216,
      "type": "xss",
      "pattern": "innerHTML\\s*=",
      "code": "innerHtml =",
      "severity": "HIGH",
      "description": "Cross-Site Scripting (XSS) vulnerability - potential for client-side code injection",
      "recommendation": "Encode output, use AntiXSS library, implement CSP"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Components/Endpoints/test/EndpointHtmlRendererTest.cs",
      "line": 1273,
      "type": "xss",
      "pattern": "innerHTML\\s*=",
      "code": "innerHtml =",
      "severity": "HIGH",
      "description": "Cross-Site Scripting (XSS) vulnerability - potential for client-side code injection",
      "recommendation": "Encode output, use AntiXSS library, implement CSP"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Components/Endpoints/test/Binding/FormDataMapperTests.cs",
      "line": 111,
      "type": "dangerous_api",
      "pattern": "Activator.CreateInstance",
      "code": "Assert.Equal(type.IsValueType ? Activator.CreateInstance(type) : null, result);",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Activator.CreateInstance",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Components/Endpoints/src/FormMapping/HttpContextFormValueMapper.cs",
      "line": 93,
      "type": "dangerous_api",
      "pattern": "Activator.CreateInstance",
      "code": "(FormValueSupplier)Activator.CreateInstance(typeof(FormValueSupplier<>)",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Activator.CreateInstance",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Components/Endpoints/src/FormMapping/Converters/NullableConverter.cs",
      "line": 61,
      "type": "dangerous_api",
      "pattern": "Type.GetType",
      "code": "return Type.GetTypeCode(type) != TypeCode.Object || IsSupportedUnderlyingObjectType(type);",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Type.GetType",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Components/Endpoints/src/FormMapping/Factories/CollectionConverterFactory.cs",
      "line": 23,
      "type": "dangerous_api",
      "pattern": "Activator.CreateInstance",
      "code": "if (Activator.CreateInstance(typeof(TypedCollectionConverterFactory<,>)",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Activator.CreateInstance",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Components/Endpoints/src/FormMapping/Factories/CollectionConverterFactory.cs",
      "line": 61,
      "type": "dangerous_api",
      "pattern": "Activator.CreateInstance",
      "code": "var factory = Activator.CreateInstance(typeof(TypedCollectionConverterFactory<,>)",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Activator.CreateInstance",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Components/Endpoints/src/FormMapping/Factories/ComplexTypeConverterFactory.cs",
      "line": 101,
      "type": "dangerous_api",
      "pattern": "Activator.CreateInstance",
      "code": "if (Activator.CreateInstance(typeof(ComplexTypeExpressionConverterFactory<>).MakeGenericType(type), MetadataFactory)",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Activator.CreateInstance",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Components/Endpoints/src/FormMapping/Factories/ParsableConverterFactory.cs",
      "line": 24,
      "type": "dangerous_api",
      "pattern": "Activator.CreateInstance",
      "code": "return Activator.CreateInstance(typeof(ParsableConverter<>).MakeGenericType(type)) as FormDataConverter ??",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Activator.CreateInstance",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Components/Endpoints/src/FormMapping/Factories/DictionaryConverterFactory.cs",
      "line": 31,
      "type": "dangerous_api",
      "pattern": "Activator.CreateInstance",
      "code": "if (Activator.CreateInstance(typeof(TypedDictionaryConverterFactory<,,>)",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Activator.CreateInstance",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Components/Endpoints/src/FormMapping/Factories/DictionaryConverterFactory.cs",
      "line": 110,
      "type": "dangerous_api",
      "pattern": "Activator.CreateInstance",
      "code": "var factory = Activator.CreateInstance(typeof(TypedDictionaryConverterFactory<,,>)",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Activator.CreateInstance",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Components/Endpoints/src/FormMapping/Factories/EnumConverterFactory.cs",
      "line": 23,
      "type": "dangerous_api",
      "pattern": "Activator.CreateInstance",
      "code": "return (FormDataConverter)Activator.CreateInstance(typeof(EnumConverter<>).MakeGenericType(type))!;",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Activator.CreateInstance",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Components/Endpoints/src/FormMapping/Factories/FileConverterFactory.cs",
      "line": 28,
      "type": "dangerous_api",
      "pattern": "Activator.CreateInstance",
      "code": "return Activator.CreateInstance(typeof(FileConverter<>).MakeGenericType(type)) as FormDataConverter ??",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Activator.CreateInstance",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Components/Endpoints/src/FormMapping/Factories/NullableConverterFactory.cs",
      "line": 34,
      "type": "dangerous_api",
      "pattern": "Activator.CreateInstance",
      "code": "return Activator.CreateInstance(expectedConverterType, underlyingConverter) as FormDataConverter ??",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Activator.CreateInstance",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Components/Endpoints/src/FormMapping/Factories/Dictionary/ConcreteTypeDictionaryConverterFactory.cs",
      "line": 28,
      "type": "dangerous_api",
      "pattern": "Activator.CreateInstance",
      "code": "var customFactory = Activator.CreateInstance(typeof(CustomDictionaryConverterFactory<>)",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Activator.CreateInstance",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Components/Endpoints/src/FormMapping/Factories/Collections/ConcreteTypeCollectionConverterFactory.cs",
      "line": 26,
      "type": "dangerous_api",
      "pattern": "Activator.CreateInstance",
      "code": "var customFactory = Activator.CreateInstance(typeof(CustomCollectionConverterFactory<>)",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Activator.CreateInstance",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Components/Endpoints/src/Rendering/EndpointHtmlRenderer.Prerendering.cs",
      "line": 26,
      "type": "dangerous_api",
      "pattern": "Activator.CreateInstance",
      "code": "return componentActivator.CreateInstance(componentType);",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Activator.CreateInstance",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Components/Endpoints/src/Rendering/EndpointHtmlRenderer.Prerendering.cs",
      "line": 36,
      "type": "dangerous_api",
      "pattern": "Activator.CreateInstance",
      "code": "return componentActivator.CreateInstance(componentType);",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Activator.CreateInstance",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Components/Endpoints/src/Builder/OpaqueRedirection.cs",
      "line": 37,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "//    - For other request types, we have to let it fail as it would be unsafe to retry",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Components/test/E2ETest/ServerExecutionTests/WebSocketCompressionTests.cs",
      "line": 76,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "\"script-src 'self' 'unsafe-inline'\",",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Components/test/E2ETest/ServerExecutionTests/WebSocketCompressionTests.cs",
      "line": 85,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "\"script-src 'self' 'unsafe-inline'\"",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Components/test/testassets/Components.TestServer/RazorComponentEndpointsStartup.cs",
      "line": 254,
      "type": "xss",
      "pattern": "HttpUtility\\.HtmlEncode",
      "code": "HttpUtility.HtmlEncode",
      "severity": "HIGH",
      "description": "Cross-Site Scripting (XSS) vulnerability - potential for client-side code injection",
      "recommendation": "Encode output, use AntiXSS library, implement CSP"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Components/test/testassets/Components.TestServer/RazorComponentEndpointsStartup.cs",
      "line": 254,
      "type": "xss",
      "pattern": "HttpUtility\\.HtmlEncode",
      "code": "HttpUtility.HtmlEncode",
      "severity": "HIGH",
      "description": "Cross-Site Scripting (XSS) vulnerability - potential for client-side code injection",
      "recommendation": "Encode output, use AntiXSS library, implement CSP"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Components/test/testassets/Components.TestServer/RazorComponentEndpointsStartup.cs",
      "line": 141,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "ctx.Response.Headers.Add(\"Content-Security-Policy\", \"script-src 'self' 'unsafe-inline'\");",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Components/test/testassets/Components.TestServer/Controllers/PersonController.cs",
      "line": 24,
      "type": "csrf",
      "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
      "code": "[HttpPost]",
      "severity": "MEDIUM",
      "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
      "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Components/test/testassets/Components.TestServer/Controllers/DataController.cs",
      "line": 27,
      "type": "csrf",
      "pattern": "\\[HttpPost\\](?![^{]*\\[ValidateAntiForgeryToken\\])",
      "code": "[HttpPost]",
      "severity": "MEDIUM",
      "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
      "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Components/Web/test/Media/ImageTest.cs",
      "line": 216,
      "type": "dangerous_api",
      "pattern": "Activator.CreateInstance",
      "code": "object? instance = Activator.CreateInstance(t, nonPublic: true);",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Activator.CreateInstance",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Components/Web/src/JSComponents/JSComponentInterop.cs",
      "line": 186,
      "type": "dangerous_api",
      "pattern": "Activator.CreateInstance",
      "code": "return Activator.CreateInstance(eventCallbackType, null, callback)!;",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Activator.CreateInstance",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Components/Server/test/Circuits/RemoteJSDataStreamTest.cs",
      "line": 52,
      "type": "insecure_random",
      "pattern": "Random\\(\\)",
      "code": "Random()",
      "severity": "MEDIUM",
      "description": "Insecure random number generation - potential for predictable values",
      "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Components/Server/test/Circuits/RemoteJSDataStreamTest.cs",
      "line": 80,
      "type": "insecure_random",
      "pattern": "Random\\(\\)",
      "code": "Random()",
      "severity": "MEDIUM",
      "description": "Insecure random number generation - potential for predictable values",
      "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Components/Server/test/Circuits/RemoteJSDataStreamTest.cs",
      "line": 52,
      "type": "insecure_random",
      "pattern": "Random\\(.*\\)",
      "code": "Random()",
      "severity": "MEDIUM",
      "description": "Insecure random number generation - potential for predictable values",
      "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Components/Server/test/Circuits/RemoteJSDataStreamTest.cs",
      "line": 80,
      "type": "insecure_random",
      "pattern": "Random\\(.*\\)",
      "code": "Random()",
      "severity": "MEDIUM",
      "description": "Insecure random number generation - potential for predictable values",
      "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Components/Server/test/Circuits/CircuitActivitySourceTest.cs",
      "line": 44,
      "type": "insecure_random",
      "pattern": "Random\\(\\)",
      "code": "Random()",
      "severity": "MEDIUM",
      "description": "Insecure random number generation - potential for predictable values",
      "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Components/Server/test/Circuits/CircuitActivitySourceTest.cs",
      "line": 44,
      "type": "insecure_random",
      "pattern": "Random\\(\\)",
      "code": "Random()",
      "severity": "MEDIUM",
      "description": "Insecure random number generation - potential for predictable values",
      "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Components/Server/test/Circuits/CircuitActivitySourceTest.cs",
      "line": 44,
      "type": "insecure_random",
      "pattern": "Random\\(.*\\)",
      "code": "Random(), ActivitySpanId.CreateRandom(), ActivityTraceFlags.Recorded)",
      "severity": "MEDIUM",
      "description": "Insecure random number generation - potential for predictable values",
      "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Components/Server/src/Circuits/RemoteRenderer.cs",
      "line": 313,
      "type": "dangerous_api",
      "pattern": "Activator.CreateInstance",
      "code": "InteractiveServerRenderMode or InteractiveAutoRenderMode => componentActivator.CreateInstance(componentType),",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Activator.CreateInstance",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Components/Components/test/ComponentsActivitySourceTest.cs",
      "line": 50,
      "type": "insecure_random",
      "pattern": "Random\\(\\)",
      "code": "Random()",
      "severity": "MEDIUM",
      "description": "Insecure random number generation - potential for predictable values",
      "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Components/Components/test/ComponentsActivitySourceTest.cs",
      "line": 50,
      "type": "insecure_random",
      "pattern": "Random\\(\\)",
      "code": "Random()",
      "severity": "MEDIUM",
      "description": "Insecure random number generation - potential for predictable values",
      "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Components/Components/test/ComponentsActivitySourceTest.cs",
      "line": 50,
      "type": "insecure_random",
      "pattern": "Random\\(.*\\)",
      "code": "Random(), ActivitySpanId.CreateRandom(), ActivityTraceFlags.Recorded), new KeyValuePair<string, object>(\"aspnetcore.components.circuit.id\", \"test-circuit-id\"))",
      "severity": "MEDIUM",
      "description": "Insecure random number generation - potential for predictable values",
      "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Components/Components/test/RendererTest.cs",
      "line": 5181,
      "type": "dangerous_api",
      "pattern": "Activator.CreateInstance",
      "code": "SubstituteComponentRenderMode => componentActivator.CreateInstance(typeof(MessageComponent)),",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Activator.CreateInstance",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Components/Components/src/ComponentFactory.cs",
      "line": 71,
      "type": "dangerous_api",
      "pattern": "Activator.CreateInstance",
      "code": "component = _componentActivator.CreateInstance(componentType);",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Activator.CreateInstance",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Components/Components/src/ChangeDetection.cs",
      "line": 52,
      "type": "dangerous_api",
      "pattern": "Type.GetType",
      "code": "=> Type.GetTypeCode(type) != TypeCode.Object",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Type.GetType",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Components/Components/src/PersistentState/PersistentStateValueProviderKeyResolver.cs",
      "line": 206,
      "type": "dangerous_api",
      "pattern": "Type.GetType",
      "code": "var result = Type.GetTypeCode(keyType) != TypeCode.Object",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Type.GetType",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Components/WebAssembly/WebAssembly/src/Rendering/WebAssemblyRenderer.cs",
      "line": 216,
      "type": "dangerous_api",
      "pattern": "Activator.CreateInstance",
      "code": "InteractiveWebAssemblyRenderMode or InteractiveAutoRenderMode => componentActivator.CreateInstance(componentType),",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Activator.CreateInstance",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Components/WebAssembly/WebAssembly/src/Rendering/WebAssemblyRenderer.cs",
      "line": 164,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "protected override unsafe Task UpdateDisplayAsync(in RenderBatch batch)",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Components/WebAssembly/WebAssembly/src/Rendering/WebAssemblyRenderer.cs",
      "line": 239,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "private static unsafe partial void RenderBatch(int id, void* batch);",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/DataProtection/Cryptography.Internal/test/UnsafeBufferUtilTests.cs",
      "line": 10,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "public unsafe class UnsafeBufferUtilTests",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/DataProtection/Cryptography.Internal/test/CryptoUtilTests.cs",
      "line": 9,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "public unsafe class CryptoUtilTests",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/DataProtection/Cryptography.Internal/test/Cng/BCryptUtilTests.cs",
      "line": 32,
      "type": "insecure_random",
      "pattern": "Random\\(.*\\)",
      "code": "Random(pBytes, (uint)sizeof(Guid))",
      "severity": "MEDIUM",
      "description": "Insecure random number generation - potential for predictable values",
      "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/DataProtection/Cryptography.Internal/test/Cng/BCryptUtilTests.cs",
      "line": 12,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "public unsafe class BCryptUtilTests",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/DataProtection/Cryptography.Internal/test/Cng/BCRYPT_AUTHENTICATED_CIPHER_MODE_INFO_Tests.cs",
      "line": 9,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "public unsafe class BCRYPT_AUTHENTICATED_CIPHER_MODE_INFO_Tests",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/DataProtection/Cryptography.Internal/test/Cng/CachedAlgorithmHandlesTests.cs",
      "line": 16,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "public unsafe class CachedAlgorithmHandlesTests",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/DataProtection/Cryptography.Internal/test/SafeHandles/SecureLocalAllocHandleTests.cs",
      "line": 9,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "public unsafe class SecureLocalAllocHandleTests",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/DataProtection/Cryptography.Internal/src/UnsafeNativeMethods.cs",
      "line": 18,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "internal static unsafe partial class UnsafeNativeMethods",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/DataProtection/Cryptography.Internal/src/UnsafeNativeMethods.cs",
      "line": 37,
      "type": "pinvoke",
      "pattern": "DllImport",
      "code": "[DllImport(BCRYPT_LIB)]",
      "severity": "HIGH",
      "description": "P/Invoke call detected - potential security risk",
      "recommendation": "Validate all P/Invoke calls and ensure proper input validation"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/DataProtection/Cryptography.Internal/src/UnsafeNativeMethods.cs",
      "line": 48,
      "type": "pinvoke",
      "pattern": "DllImport",
      "code": "[DllImport(BCRYPT_LIB)]",
      "severity": "HIGH",
      "description": "P/Invoke call detected - potential security risk",
      "recommendation": "Validate all P/Invoke calls and ensure proper input validation"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/DataProtection/Cryptography.Internal/src/UnsafeNativeMethods.cs",
      "line": 64,
      "type": "pinvoke",
      "pattern": "DllImport",
      "code": "[DllImport(BCRYPT_LIB)]",
      "severity": "HIGH",
      "description": "P/Invoke call detected - potential security risk",
      "recommendation": "Validate all P/Invoke calls and ensure proper input validation"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/DataProtection/Cryptography.Internal/src/UnsafeNativeMethods.cs",
      "line": 83,
      "type": "pinvoke",
      "pattern": "DllImport",
      "code": "[DllImport(BCRYPT_LIB)]",
      "severity": "HIGH",
      "description": "P/Invoke call detected - potential security risk",
      "recommendation": "Validate all P/Invoke calls and ensure proper input validation"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/DataProtection/Cryptography.Internal/src/UnsafeNativeMethods.cs",
      "line": 104,
      "type": "pinvoke",
      "pattern": "DllImport",
      "code": "[DllImport(BCRYPT_LIB)]",
      "severity": "HIGH",
      "description": "P/Invoke call detected - potential security risk",
      "recommendation": "Validate all P/Invoke calls and ensure proper input validation"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/DataProtection/Cryptography.Internal/src/UnsafeNativeMethods.cs",
      "line": 117,
      "type": "pinvoke",
      "pattern": "DllImport",
      "code": "[DllImport(BCRYPT_LIB)]",
      "severity": "HIGH",
      "description": "P/Invoke call detected - potential security risk",
      "recommendation": "Validate all P/Invoke calls and ensure proper input validation"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/DataProtection/Cryptography.Internal/src/UnsafeNativeMethods.cs",
      "line": 127,
      "type": "pinvoke",
      "pattern": "DllImport",
      "code": "[DllImport(BCRYPT_LIB)]",
      "severity": "HIGH",
      "description": "P/Invoke call detected - potential security risk",
      "recommendation": "Validate all P/Invoke calls and ensure proper input validation"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/DataProtection/Cryptography.Internal/src/UnsafeNativeMethods.cs",
      "line": 141,
      "type": "pinvoke",
      "pattern": "DllImport",
      "code": "[DllImport(BCRYPT_LIB)]",
      "severity": "HIGH",
      "description": "P/Invoke call detected - potential security risk",
      "recommendation": "Validate all P/Invoke calls and ensure proper input validation"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/DataProtection/Cryptography.Internal/src/UnsafeNativeMethods.cs",
      "line": 160,
      "type": "pinvoke",
      "pattern": "DllImport",
      "code": "[DllImport(BCRYPT_LIB)]",
      "severity": "HIGH",
      "description": "P/Invoke call detected - potential security risk",
      "recommendation": "Validate all P/Invoke calls and ensure proper input validation"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/DataProtection/Cryptography.Internal/src/UnsafeNativeMethods.cs",
      "line": 173,
      "type": "pinvoke",
      "pattern": "DllImport",
      "code": "[DllImport(BCRYPT_LIB)]",
      "severity": "HIGH",
      "description": "P/Invoke call detected - potential security risk",
      "recommendation": "Validate all P/Invoke calls and ensure proper input validation"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/DataProtection/Cryptography.Internal/src/UnsafeNativeMethods.cs",
      "line": 189,
      "type": "pinvoke",
      "pattern": "DllImport",
      "code": "[DllImport(BCRYPT_LIB)]",
      "severity": "HIGH",
      "description": "P/Invoke call detected - potential security risk",
      "recommendation": "Validate all P/Invoke calls and ensure proper input validation"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/DataProtection/Cryptography.Internal/src/UnsafeNativeMethods.cs",
      "line": 202,
      "type": "pinvoke",
      "pattern": "DllImport",
      "code": "[DllImport(BCRYPT_LIB)]",
      "severity": "HIGH",
      "description": "P/Invoke call detected - potential security risk",
      "recommendation": "Validate all P/Invoke calls and ensure proper input validation"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/DataProtection/Cryptography.Internal/src/UnsafeNativeMethods.cs",
      "line": 217,
      "type": "pinvoke",
      "pattern": "DllImport",
      "code": "[DllImport(BCRYPT_LIB)]",
      "severity": "HIGH",
      "description": "P/Invoke call detected - potential security risk",
      "recommendation": "Validate all P/Invoke calls and ensure proper input validation"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/DataProtection/Cryptography.Internal/src/UnsafeNativeMethods.cs",
      "line": 230,
      "type": "pinvoke",
      "pattern": "DllImport",
      "code": "[DllImport(BCRYPT_LIB)]",
      "severity": "HIGH",
      "description": "P/Invoke call detected - potential security risk",
      "recommendation": "Validate all P/Invoke calls and ensure proper input validation"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/DataProtection/Cryptography.Internal/src/UnsafeNativeMethods.cs",
      "line": 245,
      "type": "pinvoke",
      "pattern": "DllImport",
      "code": "[DllImport(BCRYPT_LIB)]",
      "severity": "HIGH",
      "description": "P/Invoke call detected - potential security risk",
      "recommendation": "Validate all P/Invoke calls and ensure proper input validation"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/DataProtection/Cryptography.Internal/src/UnsafeNativeMethods.cs",
      "line": 258,
      "type": "pinvoke",
      "pattern": "DllImport",
      "code": "[DllImport(BCRYPT_LIB)]",
      "severity": "HIGH",
      "description": "P/Invoke call detected - potential security risk",
      "recommendation": "Validate all P/Invoke calls and ensure proper input validation"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/DataProtection/Cryptography.Internal/src/UnsafeNativeMethods.cs",
      "line": 277,
      "type": "pinvoke",
      "pattern": "DllImport",
      "code": "[DllImport(CRYPT32_LIB, SetLastError = true)]",
      "severity": "HIGH",
      "description": "P/Invoke call detected - potential security risk",
      "recommendation": "Validate all P/Invoke calls and ensure proper input validation"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/DataProtection/Cryptography.Internal/src/UnsafeNativeMethods.cs",
      "line": 294,
      "type": "pinvoke",
      "pattern": "DllImport",
      "code": "[DllImport(CRYPT32_LIB, SetLastError = true)]",
      "severity": "HIGH",
      "description": "P/Invoke call detected - potential security risk",
      "recommendation": "Validate all P/Invoke calls and ensure proper input validation"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/DataProtection/Cryptography.Internal/src/UnsafeNativeMethods.cs",
      "line": 307,
      "type": "pinvoke",
      "pattern": "DllImport",
      "code": "[DllImport(CRYPT32_LIB, SetLastError = true)]",
      "severity": "HIGH",
      "description": "P/Invoke call detected - potential security risk",
      "recommendation": "Validate all P/Invoke calls and ensure proper input validation"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/DataProtection/Cryptography.Internal/src/UnsafeNativeMethods.cs",
      "line": 324,
      "type": "pinvoke",
      "pattern": "DllImport",
      "code": "[DllImport(CRYPT32_LIB, SetLastError = true)]",
      "severity": "HIGH",
      "description": "P/Invoke call detected - potential security risk",
      "recommendation": "Validate all P/Invoke calls and ensure proper input validation"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/DataProtection/Cryptography.Internal/src/UnsafeNativeMethods.cs",
      "line": 337,
      "type": "pinvoke",
      "pattern": "DllImport",
      "code": "[DllImport(CRYPT32_LIB, SetLastError = true)]",
      "severity": "HIGH",
      "description": "P/Invoke call detected - potential security risk",
      "recommendation": "Validate all P/Invoke calls and ensure proper input validation"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/DataProtection/Cryptography.Internal/src/UnsafeNativeMethods.cs",
      "line": 356,
      "type": "pinvoke",
      "pattern": "DllImport",
      "code": "[DllImport(NCRYPT_LIB)]",
      "severity": "HIGH",
      "description": "P/Invoke call detected - potential security risk",
      "recommendation": "Validate all P/Invoke calls and ensure proper input validation"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/DataProtection/Cryptography.Internal/src/UnsafeNativeMethods.cs",
      "line": 366,
      "type": "pinvoke",
      "pattern": "DllImport",
      "code": "[DllImport(NCRYPT_LIB)]",
      "severity": "HIGH",
      "description": "P/Invoke call detected - potential security risk",
      "recommendation": "Validate all P/Invoke calls and ensure proper input validation"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/DataProtection/Cryptography.Internal/src/UnsafeNativeMethods.cs",
      "line": 378,
      "type": "pinvoke",
      "pattern": "DllImport",
      "code": "[DllImport(NCRYPT_LIB)]",
      "severity": "HIGH",
      "description": "P/Invoke call detected - potential security risk",
      "recommendation": "Validate all P/Invoke calls and ensure proper input validation"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/DataProtection/Cryptography.Internal/src/UnsafeNativeMethods.cs",
      "line": 391,
      "type": "pinvoke",
      "pattern": "DllImport",
      "code": "[DllImport(NCRYPT_LIB)]",
      "severity": "HIGH",
      "description": "P/Invoke call detected - potential security risk",
      "recommendation": "Validate all P/Invoke calls and ensure proper input validation"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/DataProtection/Cryptography.Internal/src/UnsafeNativeMethods.cs",
      "line": 408,
      "type": "pinvoke",
      "pattern": "DllImport",
      "code": "[DllImport(NCRYPT_LIB)]",
      "severity": "HIGH",
      "description": "P/Invoke call detected - potential security risk",
      "recommendation": "Validate all P/Invoke calls and ensure proper input validation"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/DataProtection/Cryptography.Internal/src/UnsafeNativeMethods.cs",
      "line": 425,
      "type": "pinvoke",
      "pattern": "DllImport",
      "code": "[DllImport(NCRYPT_LIB)]",
      "severity": "HIGH",
      "description": "P/Invoke call detected - potential security risk",
      "recommendation": "Validate all P/Invoke calls and ensure proper input validation"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/DataProtection/Cryptography.Internal/src/CryptoUtil.cs",
      "line": 16,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "internal static unsafe class CryptoUtil",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/DataProtection/Cryptography.Internal/src/UnsafeBufferUtil.cs",
      "line": 12,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "internal static unsafe class UnsafeBufferUtil",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/DataProtection/Cryptography.Internal/src/DATA_BLOB.cs",
      "line": 10,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "internal unsafe struct DATA_BLOB",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/DataProtection/Cryptography.Internal/src/Cng/BCryptUtil.cs",
      "line": 16,
      "type": "insecure_random",
      "pattern": "Random\\(.*\\)",
      "code": "Random(byte* pbBuffer, uint cbBuffer)",
      "severity": "MEDIUM",
      "description": "Insecure random number generation - potential for predictable values",
      "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/DataProtection/Cryptography.Internal/src/Cng/BCryptUtil.cs",
      "line": 11,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "internal static unsafe class BCryptUtil",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/DataProtection/Cryptography.Internal/src/Cng/BCRYPT_AUTHENTICATED_CIPHER_MODE_INFO.cs",
      "line": 10,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "internal unsafe struct BCRYPT_AUTHENTICATED_CIPHER_MODE_INFO",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/DataProtection/Cryptography.Internal/src/Cng/BCryptBufferDesc.cs",
      "line": 11,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "internal unsafe struct BCryptBufferDesc",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/DataProtection/Cryptography.Internal/src/SafeHandles/BCryptAlgorithmHandle.cs",
      "line": 16,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "internal sealed unsafe class BCryptAlgorithmHandle : BCryptHandle",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/DataProtection/Cryptography.Internal/src/SafeHandles/SecureLocalAllocHandle.cs",
      "line": 14,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "internal sealed unsafe class SecureLocalAllocHandle : LocalAllocHandle",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/DataProtection/Cryptography.Internal/src/SafeHandles/BCryptHashHandle.cs",
      "line": 8,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "internal sealed unsafe class BCryptHashHandle : BCryptHandle",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/DataProtection/Cryptography.Internal/src/SafeHandles/BCryptHandle.cs",
      "line": 8,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "internal abstract unsafe class BCryptHandle : SafeHandleZeroOrMinusOneIsInvalid",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/DataProtection/Cryptography.Internal/src/SafeHandles/SafeLibraryHandle.cs",
      "line": 103,
      "type": "dangerous_api",
      "pattern": "Marshal.GetDelegateForFunctionPointer",
      "code": "return Marshal.GetDelegateForFunctionPointer<TDelegate>(pfnProc);",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Marshal.GetDelegateForFunctionPointer",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/DataProtection/Cryptography.Internal/src/SafeHandles/SafeLibraryHandle.cs",
      "line": 16,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "internal sealed unsafe partial class SafeLibraryHandle : SafeHandleZeroOrMinusOneIsInvalid",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/DataProtection/Cryptography.Internal/src/SafeHandles/SafeLibraryHandle.cs",
      "line": 135,
      "type": "pinvoke",
      "pattern": "DllImport",
      "code": "[DllImport(\"kernel32.dll\", EntryPoint = \"FormatMessageW\", SetLastError = true)]",
      "severity": "HIGH",
      "description": "P/Invoke call detected - potential security risk",
      "recommendation": "Validate all P/Invoke calls and ensure proper input validation"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/DataProtection/Cryptography.Internal/src/SafeHandles/SafeLibraryHandle.cs",
      "line": 156,
      "type": "pinvoke",
      "pattern": "DllImport",
      "code": "[DllImport(\"kernel32.dll\")]",
      "severity": "HIGH",
      "description": "P/Invoke call detected - potential security risk",
      "recommendation": "Validate all P/Invoke calls and ensure proper input validation"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/DataProtection/Cryptography.Internal/src/SafeHandles/SafeLibraryHandle.cs",
      "line": 167,
      "type": "pinvoke",
      "pattern": "DllImport",
      "code": "[DllImport(\"kernel32.dll\", EntryPoint = \"GetModuleHandleExW\", SetLastError = true)]",
      "severity": "HIGH",
      "description": "P/Invoke call detected - potential security risk",
      "recommendation": "Validate all P/Invoke calls and ensure proper input validation"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/DataProtection/Cryptography.Internal/src/SafeHandles/SafeLibraryHandle.cs",
      "line": 179,
      "type": "pinvoke",
      "pattern": "DllImport",
      "code": "[DllImport(\"kernel32.dll\", SetLastError = true)]",
      "severity": "HIGH",
      "description": "P/Invoke call detected - potential security risk",
      "recommendation": "Validate all P/Invoke calls and ensure proper input validation"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/DataProtection/Cryptography.Internal/src/SafeHandles/SafeLibraryHandle.cs",
      "line": 190,
      "type": "pinvoke",
      "pattern": "DllImport",
      "code": "[DllImport(\"kernel32.dll\", EntryPoint = \"LoadLibraryExW\", SetLastError = true)]",
      "severity": "HIGH",
      "description": "P/Invoke call detected - potential security risk",
      "recommendation": "Validate all P/Invoke calls and ensure proper input validation"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/DataProtection/Cryptography.Internal/src/SafeHandles/NCryptDescriptorHandle.cs",
      "line": 9,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "internal sealed unsafe class NCryptDescriptorHandle : SafeHandleZeroOrMinusOneIsInvalid",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/DataProtection/Cryptography.KeyDerivation/src/PBKDF2/Win8Pbkdf2Provider.cs",
      "line": 16,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "internal sealed unsafe class Win8Pbkdf2Provider : IPbkdf2Provider",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/DataProtection/Cryptography.KeyDerivation/src/PBKDF2/Win7Pbkdf2Provider.cs",
      "line": 14,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "internal sealed unsafe class Win7Pbkdf2Provider : IPbkdf2Provider",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/DataProtection/samples/KeyManagementSimulator/Program.cs",
      "line": 93,
      "type": "insecure_random",
      "pattern": "Random\\(.*\\)",
      "code": "Random(seed)",
      "severity": "MEDIUM",
      "description": "Insecure random number generation - potential for predictable values",
      "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/DataProtection/samples/KeyManagementSimulator/Program.cs",
      "line": 94,
      "type": "insecure_random",
      "pattern": "Random\\(.*\\)",
      "code": "Random(productRandom.Next())",
      "severity": "MEDIUM",
      "description": "Insecure random number generation - potential for predictable values",
      "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/DataProtection/samples/KeyManagementSimulator/Program.cs",
      "line": 269,
      "type": "dangerous_api",
      "pattern": "Activator.CreateInstance",
      "code": "object IActivator.CreateInstance(Type type, string _friendlyName) => type switch",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Activator.CreateInstance",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/test/Microsoft.AspNetCore.DataProtection.Tests/SecretTests.cs",
      "line": 160,
      "type": "insecure_random",
      "pattern": "Random\\(.*\\)",
      "code": "Random(0)",
      "severity": "MEDIUM",
      "description": "Insecure random number generation - potential for predictable values",
      "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/test/Microsoft.AspNetCore.DataProtection.Tests/SecretTests.cs",
      "line": 170,
      "type": "insecure_random",
      "pattern": "Random\\(.*\\)",
      "code": "Random(32)",
      "severity": "MEDIUM",
      "description": "Insecure random number generation - potential for predictable values",
      "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/test/Microsoft.AspNetCore.DataProtection.Tests/SecretTests.cs",
      "line": 185,
      "type": "insecure_random",
      "pattern": "Random\\(.*\\)",
      "code": "Random(31)",
      "severity": "MEDIUM",
      "description": "Insecure random number generation - potential for predictable values",
      "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/test/Microsoft.AspNetCore.DataProtection.Tests/SecretTests.cs",
      "line": 201,
      "type": "insecure_random",
      "pattern": "Random\\(.*\\)",
      "code": "Random(16)",
      "severity": "MEDIUM",
      "description": "Insecure random number generation - potential for predictable values",
      "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/test/Microsoft.AspNetCore.DataProtection.Tests/SecretTests.cs",
      "line": 214,
      "type": "insecure_random",
      "pattern": "Random\\(.*\\)",
      "code": "Random(16)",
      "severity": "MEDIUM",
      "description": "Insecure random number generation - potential for predictable values",
      "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/test/Microsoft.AspNetCore.DataProtection.Tests/SecretTests.cs",
      "line": 226,
      "type": "insecure_random",
      "pattern": "Random\\(.*\\)",
      "code": "Random(16)",
      "severity": "MEDIUM",
      "description": "Insecure random number generation - potential for predictable values",
      "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/test/Microsoft.AspNetCore.DataProtection.Tests/SecretTests.cs",
      "line": 238,
      "type": "insecure_random",
      "pattern": "Random\\(.*\\)",
      "code": "Random(16)",
      "severity": "MEDIUM",
      "description": "Insecure random number generation - potential for predictable values",
      "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/test/Microsoft.AspNetCore.DataProtection.Tests/SecretTests.cs",
      "line": 255,
      "type": "insecure_random",
      "pattern": "Random\\(.*\\)",
      "code": "Random(16)",
      "severity": "MEDIUM",
      "description": "Insecure random number generation - potential for predictable values",
      "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/test/Microsoft.AspNetCore.DataProtection.Tests/SecretTests.cs",
      "line": 8,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "public unsafe class SecretTests",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/test/Microsoft.AspNetCore.DataProtection.Tests/SequentialGenRandom.cs",
      "line": 14,
      "type": "insecure_random",
      "pattern": "Random\\(.*\\)",
      "code": "Random(int numBytes)",
      "severity": "MEDIUM",
      "description": "Insecure random number generation - potential for predictable values",
      "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/test/Microsoft.AspNetCore.DataProtection.Tests/SequentialGenRandom.cs",
      "line": 24,
      "type": "insecure_random",
      "pattern": "Random\\(.*\\)",
      "code": "Random(byte* pbBuffer, uint cbBuffer)",
      "severity": "MEDIUM",
      "description": "Insecure random number generation - potential for predictable values",
      "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/test/Microsoft.AspNetCore.DataProtection.Tests/SequentialGenRandom.cs",
      "line": 32,
      "type": "insecure_random",
      "pattern": "Random\\(.*\\)",
      "code": "Random(Span<byte> target)",
      "severity": "MEDIUM",
      "description": "Insecure random number generation - potential for predictable values",
      "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/test/Microsoft.AspNetCore.DataProtection.Tests/SequentialGenRandom.cs",
      "line": 10,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "internal unsafe class SequentialGenRandom : IBCryptGenRandom, IManagedGenRandom",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/test/Microsoft.AspNetCore.DataProtection.Tests/Managed/ManagedAuthenticatedEncryptorTests.cs",
      "line": 86,
      "type": "insecure_random",
      "pattern": "Random\\(\\)",
      "code": "Random()",
      "severity": "MEDIUM",
      "description": "Insecure random number generation - potential for predictable values",
      "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/test/Microsoft.AspNetCore.DataProtection.Tests/Managed/ManagedAuthenticatedEncryptorTests.cs",
      "line": 86,
      "type": "insecure_random",
      "pattern": "Random\\(.*\\)",
      "code": "Random())",
      "severity": "MEDIUM",
      "description": "Insecure random number generation - potential for predictable values",
      "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/test/Microsoft.AspNetCore.DataProtection.Tests/XmlEncryption/CertificateXmlEncryptionTests.cs",
      "line": 20,
      "type": "weak_crypto",
      "pattern": "DES\\.Create\\(\\)",
      "code": "DES.Create()",
      "severity": "MEDIUM",
      "description": "Weak cryptographic algorithm - potential for data compromise",
      "recommendation": "Use SHA-256 or stronger algorithms, AES for encryption"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/test/Microsoft.AspNetCore.DataProtection.Tests/XmlEncryption/CertificateXmlEncryptionTests.cs",
      "line": 20,
      "type": "weak_crypto",
      "pattern": "TripleDES\\.Create\\(\\)",
      "code": "TripleDES.Create()",
      "severity": "MEDIUM",
      "description": "Weak cryptographic algorithm - potential for data compromise",
      "recommendation": "Use SHA-256 or stronger algorithms, AES for encryption"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/test/Microsoft.AspNetCore.DataProtection.Tests/AuthenticatedEncryption/ConfigurationModel/AuthenticatedEncryptorDescriptorTests.cs",
      "line": 36,
      "type": "insecure_random",
      "pattern": "Random\\(.*\\)",
      "code": "Random(512 / 8)",
      "severity": "MEDIUM",
      "description": "Insecure random number generation - potential for predictable values",
      "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/test/Microsoft.AspNetCore.DataProtection.Tests/AuthenticatedEncryption/ConfigurationModel/AuthenticatedEncryptorDescriptorTests.cs",
      "line": 63,
      "type": "insecure_random",
      "pattern": "Random\\(.*\\)",
      "code": "Random(512 / 8)",
      "severity": "MEDIUM",
      "description": "Insecure random number generation - potential for predictable values",
      "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/test/Microsoft.AspNetCore.DataProtection.Tests/AuthenticatedEncryption/ConfigurationModel/AuthenticatedEncryptorDescriptorTests.cs",
      "line": 89,
      "type": "insecure_random",
      "pattern": "Random\\(.*\\)",
      "code": "Random(512 / 8)",
      "severity": "MEDIUM",
      "description": "Insecure random number generation - potential for predictable values",
      "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/test/Microsoft.AspNetCore.DataProtection.Tests/AuthenticatedEncryption/ConfigurationModel/AuthenticatedEncryptorDescriptorTests.cs",
      "line": 126,
      "type": "insecure_random",
      "pattern": "Random\\(.*\\)",
      "code": "Random(512 / 8)",
      "severity": "MEDIUM",
      "description": "Insecure random number generation - potential for predictable values",
      "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/test/Microsoft.AspNetCore.DataProtection.Tests/SP800_108/SP800_108Tests.cs",
      "line": 11,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "public unsafe class SP800_108Tests",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/test/Microsoft.AspNetCore.DataProtection.Tests/Cng/CngAuthenticatedEncryptorBaseTests.cs",
      "line": 8,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "public unsafe class CngAuthenticatedEncryptorBaseTests",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/test/Microsoft.AspNetCore.DataProtection.Tests/Cng/CngAuthenticatedEncryptorBaseTests.cs",
      "line": 93,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "protected sealed override unsafe byte[] DecryptImpl(byte* pbCiphertext, uint cbCiphertext, byte* pbAdditionalAuthenticatedData, uint cbAdditionalAuthenticatedData)",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/test/Microsoft.AspNetCore.DataProtection.Tests/Cng/CngAuthenticatedEncryptorBaseTests.cs",
      "line": 100,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "protected sealed override unsafe byte[] EncryptImpl(byte* pbPlaintext, uint cbPlaintext, byte* pbAdditionalAuthenticatedData, uint cbAdditionalAuthenticatedData, uint cbPreBuffer, uint cbPostBuffer)",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/test/Microsoft.AspNetCore.DataProtection.Tests/Cng/CbcAuthenticatedEncryptorTests.cs",
      "line": 92,
      "type": "insecure_random",
      "pattern": "Random\\(\\)",
      "code": "Random()",
      "severity": "MEDIUM",
      "description": "Insecure random number generation - potential for predictable values",
      "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/test/Microsoft.AspNetCore.DataProtection.Tests/Cng/CbcAuthenticatedEncryptorTests.cs",
      "line": 92,
      "type": "insecure_random",
      "pattern": "Random\\(.*\\)",
      "code": "Random())",
      "severity": "MEDIUM",
      "description": "Insecure random number generation - potential for predictable values",
      "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/test/Microsoft.AspNetCore.DataProtection.Tests/Cng/GcmAuthenticatedEncryptorTests.cs",
      "line": 82,
      "type": "insecure_random",
      "pattern": "Random\\(\\)",
      "code": "Random()",
      "severity": "MEDIUM",
      "description": "Insecure random number generation - potential for predictable values",
      "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/test/Microsoft.AspNetCore.DataProtection.Tests/Cng/GcmAuthenticatedEncryptorTests.cs",
      "line": 82,
      "type": "insecure_random",
      "pattern": "Random\\(.*\\)",
      "code": "Random())",
      "severity": "MEDIUM",
      "description": "Insecure random number generation - potential for predictable values",
      "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/test/Microsoft.AspNetCore.DataProtection.TrimmingTests/Constants.cs",
      "line": 6,
      "type": "hardcoded_secrets",
      "pattern": "password\\s*=\\s*[\"\\'][^\"\\']{8,}[\"\\']",
      "code": "Password = \"password\"",
      "severity": "HIGH",
      "description": "Hardcoded secrets/credentials - potential for unauthorized access",
      "recommendation": "Use configuration files or Azure Key Vault"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/src/RegistryPolicyResolver.cs",
      "line": 45,
      "type": "dangerous_api",
      "pattern": "Type.GetType",
      "code": "// We call Type.GetType to perform an eager check that the type exists.",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Type.GetType",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/src/BitHelpers.cs",
      "line": 8,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "internal static unsafe class BitHelpers",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/src/TypeForwardingActivator.cs",
      "line": 34,
      "type": "dangerous_api",
      "pattern": "Type.GetType",
      "code": "[UnconditionalSuppressMessage(\"Trimmer\", \"IL2057\", Justification = \"Type.GetType is only used with forwarded types that are referenced by DataProtection assembly.\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Type.GetType",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/src/TypeForwardingActivator.cs",
      "line": 39,
      "type": "dangerous_api",
      "pattern": "Type.GetType",
      "code": "var type = Type.GetType(forwardedTypeName, false);",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Type.GetType",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/src/TypeExtensions.cs",
      "line": 36,
      "type": "dangerous_api",
      "pattern": "Type.GetType",
      "code": "return Type.GetType(typeName, throwOnError: true)!;",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Type.GetType",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/src/SimpleActivator.cs",
      "line": 44,
      "type": "dangerous_api",
      "pattern": "Activator.CreateInstance",
      "code": "return Activator.CreateInstance(implementationType)!;",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Activator.CreateInstance",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/src/SimpleActivator.cs",
      "line": 57,
      "type": "dangerous_api",
      "pattern": "Activator.CreateInstance",
      "code": "return Activator.CreateInstance(implementationType)!;",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Activator.CreateInstance",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/src/MemoryProtection.cs",
      "line": 12,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "internal static unsafe class MemoryProtection",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/src/Secret.cs",
      "line": 165,
      "type": "insecure_random",
      "pattern": "Random\\(.*\\)",
      "code": "Random(int numBytes)",
      "severity": "MEDIUM",
      "description": "Insecure random number generation - potential for predictable values",
      "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/src/Secret.cs",
      "line": 182,
      "type": "insecure_random",
      "pattern": "Random\\(.*\\)",
      "code": "Random(numBytes))",
      "severity": "MEDIUM",
      "description": "Insecure random number generation - potential for predictable values",
      "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/src/Secret.cs",
      "line": 190,
      "type": "insecure_random",
      "pattern": "Random\\(.*\\)",
      "code": "Random(pbBytes, (uint)numBytes)",
      "severity": "MEDIUM",
      "description": "Insecure random number generation - potential for predictable values",
      "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/src/Secret.cs",
      "line": 16,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "public sealed unsafe class Secret : IDisposable, ISecret",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/src/Managed/AesGcmAuthenticatedEncryptor.cs",
      "line": 168,
      "type": "insecure_random",
      "pattern": "Random\\(.*\\)",
      "code": "Random(KEY_MODIFIER_SIZE_IN_BYTES)",
      "severity": "MEDIUM",
      "description": "Insecure random number generation - potential for predictable values",
      "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/src/Managed/AesGcmAuthenticatedEncryptor.cs",
      "line": 169,
      "type": "insecure_random",
      "pattern": "Random\\(.*\\)",
      "code": "Random(NONCE_SIZE_IN_BYTES)",
      "severity": "MEDIUM",
      "description": "Insecure random number generation - potential for predictable values",
      "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/src/Managed/AesGcmAuthenticatedEncryptor.cs",
      "line": 16,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "internal sealed unsafe class AesGcmAuthenticatedEncryptor : IOptimizedAuthenticatedEncryptor, IDisposable",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/src/Managed/IManagedGenRandom.cs",
      "line": 10,
      "type": "insecure_random",
      "pattern": "Random\\(.*\\)",
      "code": "Random(int numBytes)",
      "severity": "MEDIUM",
      "description": "Insecure random number generation - potential for predictable values",
      "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/src/Managed/IManagedGenRandom.cs",
      "line": 13,
      "type": "insecure_random",
      "pattern": "Random\\(.*\\)",
      "code": "Random(Span<byte> target)",
      "severity": "MEDIUM",
      "description": "Insecure random number generation - potential for predictable values",
      "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/src/Managed/ManagedAuthenticatedEncryptor.cs",
      "line": 345,
      "type": "insecure_random",
      "pattern": "Random\\(.*\\)",
      "code": "Random(keyModifier)",
      "severity": "MEDIUM",
      "description": "Insecure random number generation - potential for predictable values",
      "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/src/Managed/ManagedAuthenticatedEncryptor.cs",
      "line": 347,
      "type": "insecure_random",
      "pattern": "Random\\(.*\\)",
      "code": "Random(keyModifierLength)",
      "severity": "MEDIUM",
      "description": "Insecure random number generation - potential for predictable values",
      "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/src/Managed/ManagedAuthenticatedEncryptor.cs",
      "line": 392,
      "type": "insecure_random",
      "pattern": "Random\\(.*\\)",
      "code": "Random(iv)",
      "severity": "MEDIUM",
      "description": "Insecure random number generation - potential for predictable values",
      "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/src/Managed/ManagedAuthenticatedEncryptor.cs",
      "line": 398,
      "type": "insecure_random",
      "pattern": "Random\\(.*\\)",
      "code": "Random(_symmetricAlgorithmBlockSizeInBytes)",
      "severity": "MEDIUM",
      "description": "Insecure random number generation - potential for predictable values",
      "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/src/Managed/ManagedAuthenticatedEncryptor.cs",
      "line": 20,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "internal sealed unsafe class ManagedAuthenticatedEncryptor : IAuthenticatedEncryptor, IDisposable",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/src/Managed/ManagedGenRandomImpl.cs",
      "line": 21,
      "type": "insecure_random",
      "pattern": "Random\\(.*\\)",
      "code": "Random(Span<byte> target) => RandomNumberGenerator.Fill(target)",
      "severity": "MEDIUM",
      "description": "Insecure random number generation - potential for predictable values",
      "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/src/Managed/ManagedGenRandomImpl.cs",
      "line": 24,
      "type": "insecure_random",
      "pattern": "Random\\(.*\\)",
      "code": "Random(int numBytes)",
      "severity": "MEDIUM",
      "description": "Insecure random number generation - potential for predictable values",
      "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/src/Managed/ManagedGenRandomImpl.cs",
      "line": 9,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "internal sealed unsafe class ManagedGenRandomImpl : IManagedGenRandom",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/src/XmlEncryption/XmlEncryptionExtensions.cs",
      "line": 17,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "internal static unsafe class XmlEncryptionExtensions",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/src/XmlEncryption/EncryptedXmlDecryptor.cs",
      "line": 93,
      "type": "xxe",
      "pattern": "XslCompiledTransform",
      "code": "XslCompiledTransform",
      "severity": "HIGH",
      "description": "XML External Entity (XXE) vulnerability - potential for data disclosure",
      "recommendation": "Disable external entity processing in XML parsers"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/src/KeyManagement/KeyRingProvider.cs",
      "line": 67,
      "type": "insecure_random",
      "pattern": "Random\\(\\)",
      "code": "Random()",
      "severity": "MEDIUM",
      "description": "Insecure random number generation - potential for predictable values",
      "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/src/KeyManagement/KeyRingProvider.cs",
      "line": 67,
      "type": "insecure_random",
      "pattern": "Random\\(.*\\)",
      "code": "Random()",
      "severity": "MEDIUM",
      "description": "Insecure random number generation - potential for predictable values",
      "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/src/KeyManagement/KeyRingBasedDataProtector.cs",
      "line": 24,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "internal sealed unsafe class KeyRingBasedDataProtector : IDataProtector, IPersistedDataProtector",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/src/KeyManagement/KeyRingBasedDataProtectionProvider.cs",
      "line": 11,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "internal sealed unsafe class KeyRingBasedDataProtectionProvider : IDataProtectionProvider",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/src/Internal/DefaultTypeNameResolver.cs",
      "line": 17,
      "type": "dangerous_api",
      "pattern": "Type.GetType",
      "code": "[UnconditionalSuppressMessage(\"Trimmer\", \"IL2057\", Justification = \"Type.GetType is only used to resolve statically known types that are referenced by DataProtection assembly.\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Type.GetType",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/src/Internal/DefaultTypeNameResolver.cs",
      "line": 25,
      "type": "dangerous_api",
      "pattern": "Type.GetType",
      "code": "type = Type.GetType(typeName, throwOnError: false);",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Type.GetType",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/src/Internal/IActivator.cs",
      "line": 10,
      "type": "dangerous_api",
      "pattern": "Activator.CreateInstance",
      "code": "/// An interface into <see cref=\"Activator.CreateInstance{T}\"/> that also supports",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Activator.CreateInstance",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/src/AuthenticatedEncryption/ManagedAuthenticatedEncryptorFactory.cs",
      "line": 113,
      "type": "dangerous_api",
      "pattern": "Activator.CreateInstance",
      "code": "/// Creates a factory that wraps a call to <see cref=\"Activator.CreateInstance{T}\"/>.",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Activator.CreateInstance",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/src/AuthenticatedEncryption/ManagedAuthenticatedEncryptorFactory.cs",
      "line": 118,
      "type": "dangerous_api",
      "pattern": "Activator.CreateInstance",
      "code": "return ((IActivator<T>)Activator.CreateInstance(typeof(AlgorithmActivatorCore<>).MakeGenericType(implementation))!).Creator;",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Activator.CreateInstance",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/src/AuthenticatedEncryption/ManagedAuthenticatedEncryptorFactory.cs",
      "line": 128,
      "type": "dangerous_api",
      "pattern": "Activator.CreateInstance",
      "code": "public Func<T> Creator { get; } = Activator.CreateInstance<T>;",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Activator.CreateInstance",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/src/AuthenticatedEncryption/ConfigurationModel/ManagedAlgorithmHelpers.cs",
      "line": 58,
      "type": "dangerous_api",
      "pattern": "Activator.CreateInstance",
      "code": "// All other types are created using Activator.CreateInstance. Validate it has a valid constructor.",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Activator.CreateInstance",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/src/AuthenticatedEncryption/ConfigurationModel/AuthenticatedEncryptorConfiguration.cs",
      "line": 35,
      "type": "insecure_random",
      "pattern": "Random\\(.*\\)",
      "code": "Random(KDK_SIZE_IN_BYTES))",
      "severity": "MEDIUM",
      "description": "Insecure random number generation - potential for predictable values",
      "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/src/AuthenticatedEncryption/ConfigurationModel/AuthenticatedEncryptorConfiguration.cs",
      "line": 47,
      "type": "insecure_random",
      "pattern": "Random\\(.*\\)",
      "code": "Random(512 / 8)",
      "severity": "MEDIUM",
      "description": "Insecure random number generation - potential for predictable values",
      "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/src/AuthenticatedEncryption/ConfigurationModel/CngGcmAuthenticatedEncryptorConfiguration.cs",
      "line": 56,
      "type": "insecure_random",
      "pattern": "Random\\(.*\\)",
      "code": "Random(KDK_SIZE_IN_BYTES))",
      "severity": "MEDIUM",
      "description": "Insecure random number generation - potential for predictable values",
      "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/src/AuthenticatedEncryption/ConfigurationModel/CngGcmAuthenticatedEncryptorConfiguration.cs",
      "line": 73,
      "type": "insecure_random",
      "pattern": "Random\\(.*\\)",
      "code": "Random(512 / 8)",
      "severity": "MEDIUM",
      "description": "Insecure random number generation - potential for predictable values",
      "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/src/AuthenticatedEncryption/ConfigurationModel/CngCbcAuthenticatedEncryptorConfiguration.cs",
      "line": 80,
      "type": "insecure_random",
      "pattern": "Random\\(.*\\)",
      "code": "Random(KDK_SIZE_IN_BYTES))",
      "severity": "MEDIUM",
      "description": "Insecure random number generation - potential for predictable values",
      "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/src/AuthenticatedEncryption/ConfigurationModel/CngCbcAuthenticatedEncryptorConfiguration.cs",
      "line": 97,
      "type": "insecure_random",
      "pattern": "Random\\(.*\\)",
      "code": "Random(512 / 8)",
      "severity": "MEDIUM",
      "description": "Insecure random number generation - potential for predictable values",
      "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/src/AuthenticatedEncryption/ConfigurationModel/ManagedAuthenticatedEncryptorConfiguration.cs",
      "line": 59,
      "type": "insecure_random",
      "pattern": "Random\\(.*\\)",
      "code": "Random(KDK_SIZE_IN_BYTES))",
      "severity": "MEDIUM",
      "description": "Insecure random number generation - potential for predictable values",
      "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/src/AuthenticatedEncryption/ConfigurationModel/ManagedAuthenticatedEncryptorConfiguration.cs",
      "line": 76,
      "type": "insecure_random",
      "pattern": "Random\\(.*\\)",
      "code": "Random(512 / 8)",
      "severity": "MEDIUM",
      "description": "Insecure random number generation - potential for predictable values",
      "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/src/AuthenticatedEncryption/ConfigurationModel/SecretExtensions.cs",
      "line": 9,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "internal static unsafe class SecretExtensions",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/src/SP800_108/Win7SP800_108_CTR_HMACSHA512Provider.cs",
      "line": 11,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "internal sealed unsafe class Win7SP800_108_CTR_HMACSHA512Provider : ISP800_108_CTR_HMACSHA512Provider",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/src/SP800_108/ISP800_108_CTR_HMACSHA512Provider.cs",
      "line": 8,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "internal unsafe interface ISP800_108_CTR_HMACSHA512Provider : IDisposable",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/src/SP800_108/SP800_108_CTR_HMACSHA512Util.cs",
      "line": 16,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "internal static unsafe class SP800_108_CTR_HMACSHA512Util",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/src/SP800_108/Win8SP800_108_CTR_HMACSHA512Provider.cs",
      "line": 11,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "internal sealed unsafe class Win8SP800_108_CTR_HMACSHA512Provider : ISP800_108_CTR_HMACSHA512Provider",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/src/SP800_108/SP800_108_CTR_HMACSHA512Extensions.cs",
      "line": 8,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "internal static unsafe class SP800_108_CTR_HMACSHA512Extensions",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/src/Cng/CngGcmAuthenticatedEncryptor.cs",
      "line": 247,
      "type": "insecure_random",
      "pattern": "Random\\(.*\\)",
      "code": "Random(pbKeyModifier, KEY_MODIFIER_SIZE_IN_BYTES + NONCE_SIZE_IN_BYTES)",
      "severity": "MEDIUM",
      "description": "Insecure random number generation - potential for predictable values",
      "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/src/Cng/CngGcmAuthenticatedEncryptor.cs",
      "line": 23,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "internal sealed unsafe class CngGcmAuthenticatedEncryptor : CngAuthenticatedEncryptorBase",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/src/Cng/DpapiSecretSerializerHelper.cs",
      "line": 104,
      "type": "dangerous_api",
      "pattern": "Marshal.Copy",
      "code": "Marshal.Copy((IntPtr)dataOut.pbData, retVal, 0, dataLength);",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Marshal.Copy",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/src/Cng/DpapiSecretSerializerHelper.cs",
      "line": 15,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "internal static unsafe class DpapiSecretSerializerHelper",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/src/Cng/CbcAuthenticatedEncryptor.cs",
      "line": 314,
      "type": "insecure_random",
      "pattern": "Random\\(.*\\)",
      "code": "Random(pbKeyModifierAndIV, cbKeyModifierAndIV)",
      "severity": "MEDIUM",
      "description": "Insecure random number generation - potential for predictable values",
      "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/src/Cng/CbcAuthenticatedEncryptor.cs",
      "line": 17,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "internal sealed unsafe class CbcAuthenticatedEncryptor : CngAuthenticatedEncryptorBase",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/src/Cng/IBCryptGenRandom.cs",
      "line": 8,
      "type": "insecure_random",
      "pattern": "Random\\(.*\\)",
      "code": "Random(byte* pbBuffer, uint cbBuffer)",
      "severity": "MEDIUM",
      "description": "Insecure random number generation - potential for predictable values",
      "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/src/Cng/IBCryptGenRandom.cs",
      "line": 6,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "internal unsafe interface IBCryptGenRandom",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/src/Cng/BCryptGenRandomImpl.cs",
      "line": 16,
      "type": "insecure_random",
      "pattern": "Random\\(.*\\)",
      "code": "Random(byte* pbBuffer, uint cbBuffer)",
      "severity": "MEDIUM",
      "description": "Insecure random number generation - potential for predictable values",
      "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/src/Cng/BCryptGenRandomImpl.cs",
      "line": 18,
      "type": "insecure_random",
      "pattern": "Random\\(.*\\)",
      "code": "Random(pbBuffer, cbBuffer)",
      "severity": "MEDIUM",
      "description": "Insecure random number generation - potential for predictable values",
      "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/src/Cng/BCryptGenRandomImpl.cs",
      "line": 8,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "internal sealed unsafe class BCryptGenRandomImpl : IBCryptGenRandom",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/src/Cng/Internal/CngAuthenticatedEncryptorBase.cs",
      "line": 12,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "internal abstract unsafe class CngAuthenticatedEncryptorBase : IOptimizedAuthenticatedEncryptor, IDisposable",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Http/Http.Results/src/ResultsCache.StatusCodes.cs",
      "line": 7,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "using System.CodeDom.Compiler;",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Http/Http/test/DefaultHttpContextTests.cs",
      "line": 340,
      "type": "dangerous_api",
      "pattern": "Type.GetType",
      "code": "f.FieldType.GetTypeInfo().IsGenericType &&",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Type.GetType",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Http/Http/test/DefaultHttpContextTests.cs",
      "line": 367,
      "type": "dangerous_api",
      "pattern": "Type.GetType",
      "code": ".Where(p => p.PropertyType.GetTypeInfo().IsInterface);",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Type.GetType",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Http/Http/test/DefaultHttpContextTests.cs",
      "line": 373,
      "type": "dangerous_api",
      "pattern": "Type.GetType",
      "code": ".Where(f => f.FieldType.GetTypeInfo().IsInterface && f.GetCustomAttribute<CompilerGeneratedAttribute>() == null);",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Type.GetType",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Http/Http/test/DefaultHttpContextTests.cs",
      "line": 344,
      "type": "dangerous_api",
      "pattern": "Activator.CreateInstance",
      "code": "Activator.CreateInstance(field.FieldType) :",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Activator.CreateInstance",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Http/Http/test/DefaultHttpContextTests.cs",
      "line": 345,
      "type": "dangerous_api",
      "pattern": "Activator.CreateInstance",
      "code": "Activator.CreateInstance(field.FieldType, features);",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Activator.CreateInstance",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Http/Routing/perf/Microbenchmarks/Matching/FastPathTokenizerEmptyBenchmark.cs",
      "line": 15,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "public unsafe void Baseline()",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Http/Routing/perf/Microbenchmarks/Matching/FastPathTokenizerLargeBenchmark.cs",
      "line": 19,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "public unsafe void Baseline()",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Http/Routing/perf/Microbenchmarks/Matching/FastPathTokenizerSmallBenchmark.cs",
      "line": 15,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "public unsafe void Baseline()",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Http/Routing/perf/Microbenchmarks/Matching/FastPathTokenizerBenchmarkBase.cs",
      "line": 8,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "internal unsafe void NaiveBaseline(string path, PathSegment* segments, int maxCount)",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Http/Routing/perf/Microbenchmarks/Matching/FastPathTokenizerBenchmarkBase.cs",
      "line": 27,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "internal unsafe void MinimalBaseline(string path, PathSegment* segments, int maxCount)",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Http/Routing/perf/Microbenchmarks/Matching/FastPathTokenizerPlaintextBenchmark.cs",
      "line": 15,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "public unsafe void Baseline()",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Http/Routing/src/Matching/ILEmitTrieFactory.cs",
      "line": 10,
      "type": "dangerous_api",
      "pattern": "System.Reflection.Emit",
      "code": "using System.Reflection.Emit;",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: System.Reflection.Emit",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Http/Http.Abstractions/test/UseMiddlewareTest.cs",
      "line": 299,
      "type": "dangerous_api",
      "pattern": "Activator.CreateInstance",
      "code": "Created = Activator.CreateInstance(middlewareType) as IMiddleware;",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Activator.CreateInstance",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Http/Http.Abstractions/src/EndpointFilterInvocationContextOfT.Generated.cs",
      "line": 7,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "using System.CodeDom.Compiler;",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Http/Http.Extensions/test/RequestDelegateFactoryTests.cs",
      "line": 2235,
      "type": "dangerous_api",
      "pattern": "Activator.CreateInstance",
      "code": "return Activator.CreateInstance(methodInfo!.DeclaringType!)!;",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Activator.CreateInstance",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Http/Http.Extensions/test/RequestDelegateGenerator/RequestDelegateCreationTests.Forms.cs",
      "line": 650,
      "type": "csrf",
      "pattern": "Request\\.Form\\[",
      "code": "Request.Form[",
      "severity": "MEDIUM",
      "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
      "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Http/Http.Extensions/test/RequestDelegateGenerator/RequestDelegateCreationTests.Forms.cs",
      "line": 679,
      "type": "csrf",
      "pattern": "Request\\.Form\\[",
      "code": "Request.Form[",
      "severity": "MEDIUM",
      "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
      "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Http/Http.Extensions/test/RequestDelegateGenerator/RequestDelegateCreationTests.Forms.cs",
      "line": 682,
      "type": "csrf",
      "pattern": "Request\\.Form\\[",
      "code": "Request.Form[",
      "severity": "MEDIUM",
      "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
      "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Http/Http.Extensions/test/RequestDelegateGenerator/RequestDelegateCreationTests.Forms.cs",
      "line": 712,
      "type": "csrf",
      "pattern": "Request\\.Form\\[",
      "code": "Request.Form[",
      "severity": "MEDIUM",
      "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
      "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Http/Http.Extensions/test/RequestDelegateGenerator/RequestDelegateCreationTests.Forms.cs",
      "line": 742,
      "type": "csrf",
      "pattern": "Request\\.Form\\[",
      "code": "Request.Form[",
      "severity": "MEDIUM",
      "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
      "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Http/Http.Extensions/test/RequestDelegateGenerator/RequestDelegateCreationTests.Forms.cs",
      "line": 772,
      "type": "csrf",
      "pattern": "Request\\.Form\\[",
      "code": "Request.Form[",
      "severity": "MEDIUM",
      "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
      "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Http/Http.Extensions/test/RequestDelegateGenerator/RequestDelegateCreationTests.Metadata.cs",
      "line": 19,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "using System.CodeDom.Compiler;",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Http/Http.Extensions/test/RequestDelegateGenerator/RequestDelegateCreationTestBase.cs",
      "line": 4,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "using System.CodeDom.Compiler;",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Http/Http.Extensions/gen/Microsoft.AspNetCore.Http.RequestDelegateGenerator/RequestDelegateGeneratorSources.cs",
      "line": 27,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "public static string GeneratedCodeConstructor => $@\"System.CodeDom.Compiler.GeneratedCodeAttribute(\"\"{typeof(RequestDelegateGeneratorSources).Assembly.FullName}\"\", \"\"{typeof(RequestDelegateGeneratorSources).Assembly.GetName().Version}\"\")\";",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Http/Http.Extensions/gen/Microsoft.AspNetCore.Http.RequestDelegateGenerator/StaticRouteHandlerModel/EndpointParameter.cs",
      "line": 122,
      "type": "csrf",
      "pattern": "Request\\.Form\\[",
      "code": "Request.Form[",
      "severity": "MEDIUM",
      "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
      "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Http/Http.Extensions/gen/Microsoft.AspNetCore.Http.RequestDelegateGenerator/StaticRouteHandlerModel/EndpointParameter.cs",
      "line": 123,
      "type": "csrf",
      "pattern": "Request\\.Form\\[",
      "code": "Request.Form[",
      "severity": "MEDIUM",
      "description": "Cross-Site Request Forgery (CSRF) vulnerability - potential for unauthorized actions",
      "recommendation": "Implement anti-forgery tokens, use [ValidateAntiForgeryToken]"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Http/Http.Extensions/src/RequestDelegateFactory.cs",
      "line": 252,
      "type": "dangerous_api",
      "pattern": "Activator.CreateInstance",
      "code": "targetFactory ??= context => Activator.CreateInstance(methodInfo.DeclaringType)!;",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Activator.CreateInstance",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Hosting/Hosting/src/WebHostBuilder.cs",
      "line": 243,
      "type": "dangerous_api",
      "pattern": "Activator.CreateInstance",
      "code": "var hostingStartup = (IHostingStartup)Activator.CreateInstance(attribute.HostingStartupType)!;",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Activator.CreateInstance",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Hosting/Hosting/src/Internal/StartupLoader.cs",
      "line": 57,
      "type": "dangerous_api",
      "pattern": "Activator.CreateInstance",
      "code": "var builder = (ConfigureServicesDelegateBuilder)Activator.CreateInstance(",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Activator.CreateInstance",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Hosting/Hosting/src/GenericHost/GenericWebHostBuilder.cs",
      "line": 149,
      "type": "dangerous_api",
      "pattern": "Activator.CreateInstance",
      "code": "var hostingStartup = (IHostingStartup)Activator.CreateInstance(attribute.HostingStartupType)!;",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Activator.CreateInstance",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Hosting/Server.IntegrationTesting/src/Deployers/RemoteWindowsDeployer/RemoteWindowsDeployer.cs",
      "line": 154,
      "type": "xxe",
      "pattern": "XDocument\\.Load",
      "code": "XDocument.Load",
      "severity": "HIGH",
      "description": "XML External Entity (XXE) vulnerability - potential for data disclosure",
      "recommendation": "Disable external entity processing in XML parsers"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Hosting/Server.IntegrationTesting/src/xunit/IISExpressAncmSchema.cs",
      "line": 35,
      "type": "xxe",
      "pattern": "XDocument\\.Load",
      "code": "XDocument.Load",
      "severity": "HIGH",
      "description": "XML External Entity (XXE) vulnerability - potential for data disclosure",
      "recommendation": "Disable external entity processing in XML parsers"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Caching/perf/MicroBenchmarks/Microsoft.Extensions.Caching.MicroBenchmarks/DistributedCacheBenchmarks.cs",
      "line": 20,
      "type": "insecure_random",
      "pattern": "Random\\(\\)",
      "code": "Random()",
      "severity": "MEDIUM",
      "description": "Insecure random number generation - potential for predictable values",
      "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Caching/perf/MicroBenchmarks/Microsoft.Extensions.Caching.MicroBenchmarks/DistributedCacheBenchmarks.cs",
      "line": 117,
      "type": "insecure_random",
      "pattern": "Random\\(\\)",
      "code": "Random()",
      "severity": "MEDIUM",
      "description": "Insecure random number generation - potential for predictable values",
      "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Caching/perf/MicroBenchmarks/Microsoft.Extensions.Caching.MicroBenchmarks/DistributedCacheBenchmarks.cs",
      "line": 128,
      "type": "insecure_random",
      "pattern": "Random\\(\\)",
      "code": "Random()",
      "severity": "MEDIUM",
      "description": "Insecure random number generation - potential for predictable values",
      "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Caching/perf/MicroBenchmarks/Microsoft.Extensions.Caching.MicroBenchmarks/DistributedCacheBenchmarks.cs",
      "line": 20,
      "type": "insecure_random",
      "pattern": "Random\\(.*\\)",
      "code": "Random()",
      "severity": "MEDIUM",
      "description": "Insecure random number generation - potential for predictable values",
      "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Caching/perf/MicroBenchmarks/Microsoft.Extensions.Caching.MicroBenchmarks/DistributedCacheBenchmarks.cs",
      "line": 117,
      "type": "insecure_random",
      "pattern": "Random\\(.*\\)",
      "code": "Random()",
      "severity": "MEDIUM",
      "description": "Insecure random number generation - potential for predictable values",
      "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Caching/perf/MicroBenchmarks/Microsoft.Extensions.Caching.MicroBenchmarks/DistributedCacheBenchmarks.cs",
      "line": 128,
      "type": "insecure_random",
      "pattern": "Random\\(.*\\)",
      "code": "Random()",
      "severity": "MEDIUM",
      "description": "Insecure random number generation - potential for predictable values",
      "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Caching/perf/MicroBenchmarks/Microsoft.Extensions.Caching.MicroBenchmarks/Program.cs",
      "line": 18,
      "type": "insecure_random",
      "pattern": "Random\\(\\)",
      "code": "Random()",
      "severity": "MEDIUM",
      "description": "Insecure random number generation - potential for predictable values",
      "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Caching/perf/MicroBenchmarks/Microsoft.Extensions.Caching.MicroBenchmarks/Program.cs",
      "line": 22,
      "type": "insecure_random",
      "pattern": "Random\\(\\)",
      "code": "Random()",
      "severity": "MEDIUM",
      "description": "Insecure random number generation - potential for predictable values",
      "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Caching/perf/MicroBenchmarks/Microsoft.Extensions.Caching.MicroBenchmarks/Program.cs",
      "line": 34,
      "type": "insecure_random",
      "pattern": "Random\\(\\)",
      "code": "Random()",
      "severity": "MEDIUM",
      "description": "Insecure random number generation - potential for predictable values",
      "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Caching/perf/MicroBenchmarks/Microsoft.Extensions.Caching.MicroBenchmarks/Program.cs",
      "line": 38,
      "type": "insecure_random",
      "pattern": "Random\\(\\)",
      "code": "Random()",
      "severity": "MEDIUM",
      "description": "Insecure random number generation - potential for predictable values",
      "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Caching/perf/MicroBenchmarks/Microsoft.Extensions.Caching.MicroBenchmarks/Program.cs",
      "line": 18,
      "type": "insecure_random",
      "pattern": "Random\\(.*\\)",
      "code": "Random())",
      "severity": "MEDIUM",
      "description": "Insecure random number generation - potential for predictable values",
      "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Caching/perf/MicroBenchmarks/Microsoft.Extensions.Caching.MicroBenchmarks/Program.cs",
      "line": 22,
      "type": "insecure_random",
      "pattern": "Random\\(.*\\)",
      "code": "Random())",
      "severity": "MEDIUM",
      "description": "Insecure random number generation - potential for predictable values",
      "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Caching/perf/MicroBenchmarks/Microsoft.Extensions.Caching.MicroBenchmarks/Program.cs",
      "line": 34,
      "type": "insecure_random",
      "pattern": "Random\\(.*\\)",
      "code": "Random())",
      "severity": "MEDIUM",
      "description": "Insecure random number generation - potential for predictable values",
      "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Caching/perf/MicroBenchmarks/Microsoft.Extensions.Caching.MicroBenchmarks/Program.cs",
      "line": 38,
      "type": "insecure_random",
      "pattern": "Random\\(.*\\)",
      "code": "Random())",
      "severity": "MEDIUM",
      "description": "Insecure random number generation - potential for predictable values",
      "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/test/FunctionalTests/DelegateTests.cs",
      "line": 330,
      "type": "dangerous_api",
      "pattern": "Marshal.Copy",
      "code": "Marshal.Copy(new IntPtr(pSecurityDescriptor.Value), securityDescriptorBytes, 0, length);",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Marshal.Copy",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/test/FunctionalTests/DelegateTests.cs",
      "line": 312,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "unsafe void AssertPermissions(SafeHandle handle)",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/test/FunctionalTests/HttpsTests.cs",
      "line": 215,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "unsafe",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/test/Tests/RequestHeaderTests.cs",
      "line": 20,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "public unsafe void RequestHeaders_PooledMemory_ReturnsKnownHeadersKeys()",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/test/Tests/RequestHeaderTests.cs",
      "line": 40,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "public unsafe void RequestHeaders_PinnedMemory_ReturnsKnownHeadersKeys()",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/test/Tests/RequestHeaderTests.cs",
      "line": 61,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "public unsafe void RequestHeaders_PooledMemory_ReturnsUnknownHeadersKeys()",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/test/Tests/RequestHeaderTests.cs",
      "line": 81,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "public unsafe void RequestHeaders_PinnedMemory_ReturnsUnknownHeadersKeys()",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/test/Tests/RequestHeaderTests.cs",
      "line": 102,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "public unsafe void RequestHeaders_PooledMemory_DoesNotReturnInvalidKnownHeadersKeys()",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/test/Tests/RequestHeaderTests.cs",
      "line": 121,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "public unsafe void RequestHeaders_PooledMemory_DoesNotReturnInvalidUnknownHeadersKeys()",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/test/Tests/RequestHeaderTests.cs",
      "line": 140,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "public unsafe void RequestHeaders_PooledMemory_ReturnsKnownAndUnKnownHeadersKeys()",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/test/Tests/RequestHeaderTests.cs",
      "line": 163,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "public unsafe void RequestHeaders_PinnedMemory_ReturnsKnownAndUnKnownHeadersKeys()",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/test/Tests/RequestHeaderTests.cs",
      "line": 187,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "public unsafe void RequestHeaders_RemoveUnknownHeader_DecreasesCount()",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/test/Tests/RequestHeaderTests.cs",
      "line": 209,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "public unsafe void RequestHeaders_AddUnknownHeader_IncreasesCount()",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/test/Tests/RequestHeaderTests.cs",
      "line": 231,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "public unsafe void RequestHeaders_RemoveUnknownHeader_RemovesKey()",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/test/Tests/RequestHeaderTests.cs",
      "line": 252,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "public unsafe void RequestHeaders_AddUnknownHeader_AddsKey()",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/test/Tests/RequestHeaderTests.cs",
      "line": 272,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "public unsafe void RequestHeaders_RemoveKnownHeader_DecreasesCount()",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/test/Tests/RequestHeaderTests.cs",
      "line": 294,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "public unsafe void RequestHeaders_AddKnownHeader_IncreasesCount()",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/test/Tests/RequestHeaderTests.cs",
      "line": 316,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "public unsafe void RequestHeaders_RemoveKnownHeader_RemovesKey()",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/test/Tests/RequestHeaderTests.cs",
      "line": 337,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "public unsafe void RequestHeaders_AddKnownHeader_AddsKey()",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/test/Tests/RequestHeaderTests.cs",
      "line": 356,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "private static unsafe Span<byte> SetHostAndContentTypeHeaders(Span<byte> nativeMemory, ref HTTP_REQUEST_V1 requestStructure)",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/test/Tests/RequestHeaderTests.cs",
      "line": 380,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "private static unsafe Span<byte> SetInvalidHostHeader(Span<byte> nativeMemory, ref HTTP_REQUEST_V1 requestStructure)",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/test/Tests/RequestHeaderTests.cs",
      "line": 400,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "private static unsafe Span<byte> SetUnknownHeaders(Span<byte> nativeMemory, ref HTTP_REQUEST_V1 requestStructure, IReadOnlyCollection<(string Key, string Value)> headerNames)",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/test/Tests/RequestHeaderTests.cs",
      "line": 438,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "private static unsafe Span<byte> SetInvalidUnknownHeaders(Span<byte> nativeMemory, ref HTTP_REQUEST_V1 requestStructure, IReadOnlyCollection<string> headerNames)",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/samples/TlsFeaturesObserve/HttpSys/HttpSysConfigurator.cs",
      "line": 34,
      "type": "dangerous_api",
      "pattern": "GCHandle.Alloc",
      "code": "var handleHash = GCHandle.Alloc(hash, GCHandleType.Pinned);",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: GCHandle.Alloc",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/samples/TlsFeaturesObserve/HttpSys/HttpSysConfigurator.cs",
      "line": 92,
      "type": "dangerous_api",
      "pattern": "GCHandle.Alloc",
      "code": "var sockAddrHandle = GCHandle.Alloc(sockAddrStructureBytes, GCHandleType.Pinned);",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: GCHandle.Alloc",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/samples/TlsFeaturesObserve/HttpSys/HttpSysConfigurator.cs",
      "line": 109,
      "type": "pinvoke",
      "pattern": "DllImport",
      "code": "[DllImport(\"httpapi.dll\", SetLastError = true)]",
      "severity": "HIGH",
      "description": "P/Invoke call detected - potential security risk",
      "recommendation": "Validate all P/Invoke calls and ensure proper input validation"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/samples/TlsFeaturesObserve/HttpSys/HttpSysConfigurator.cs",
      "line": 115,
      "type": "pinvoke",
      "pattern": "DllImport",
      "code": "[DllImport(\"httpapi.dll\", SetLastError = true)]",
      "severity": "HIGH",
      "description": "P/Invoke call detected - potential security risk",
      "recommendation": "Validate all P/Invoke calls and ensure proper input validation"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/perf/Microbenchmarks/RequestHeaderBenchmarks.cs",
      "line": 20,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "public unsafe void Setup()",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/perf/Microbenchmarks/RequestHeaderBenchmarks.cs",
      "line": 54,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "private unsafe RequestHeaders CreateRequestHeader(int unknowHeaderCount)",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/perf/Microbenchmarks/RequestHeaderBenchmarks.cs",
      "line": 69,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "private unsafe Span<byte> SetHostHeader(Span<byte> nativeMemory, ref HTTP_REQUEST_V1 requestStructure)",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/perf/Microbenchmarks/RequestHeaderBenchmarks.cs",
      "line": 85,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "private unsafe Span<byte> SetUnknownHeaders(Span<byte> nativeMemory, ref HTTP_REQUEST_V1 requestStructure, IReadOnlyCollection<(string Key, string Value)> headerNames)",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/src/AsyncAcceptContext.cs",
      "line": 10,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "internal sealed unsafe partial class AsyncAcceptContext : IValueTaskSource<RequestContext>, IDisposable",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/src/AsyncAcceptContext.cs",
      "line": 121,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "private static unsafe void IOWaitCallback(uint errorCode, uint numBytes, NativeOverlapped* nativeOverlapped)",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/src/AuthenticationManager.cs",
      "line": 92,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "private unsafe void SetUrlGroupSecurity()",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/src/TimeoutManager.cs",
      "line": 203,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "private unsafe void SetUrlGroupTimeouts(int[] timeouts, uint minSendBytesPerSecond)",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/src/HttpSysListener.cs",
      "line": 297,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "internal unsafe void SendError(ulong requestId, int httpStatusCode, IList<string>? authChallenges = null)",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/src/NativeInterop/HttpApi.cs",
      "line": 20,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "internal static unsafe partial uint HttpReceiveClientCertificate(SafeHandle requestQueueHandle, ulong connectionId, uint flags, Windows.Win32.Networking.HttpServer.HTTP_SSL_CLIENT_CERT_INFO* pSslClientCertInfo, uint sslClientCertInfoSize, uint* pBytesReceived, SafeNativeOverlapped pOverlapped);",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/src/NativeInterop/HttpApi.cs",
      "line": 23,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "internal static unsafe partial uint HttpReceiveHttpRequest(SafeHandle requestQueueHandle, ulong requestId, uint flags, Windows.Win32.Networking.HttpServer.HTTP_REQUEST_V1* pRequestBuffer, uint requestBufferLength, uint* pBytesReturned, NativeOverlapped* pOverlapped);",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/src/NativeInterop/HttpApi.cs",
      "line": 26,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "internal static unsafe partial uint HttpSendHttpResponse(SafeHandle requestQueueHandle, ulong requestId, uint flags, Windows.Win32.Networking.HttpServer.HTTP_RESPONSE_V2* pHttpResponse, Windows.Win32.Networking.HttpServer.HTTP_CACHE_POLICY* pCachePolicy, uint* pBytesSent, IntPtr pReserved1, uint Reserved2, SafeNativeOverlapped pOverlapped, IntPtr pLogData);",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/src/NativeInterop/HttpApi.cs",
      "line": 29,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "internal static unsafe partial uint HttpWaitForDisconnectEx(SafeHandle requestQueueHandle, ulong connectionId, uint reserved, NativeOverlapped* overlapped);",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/src/NativeInterop/HttpApi.cs",
      "line": 32,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "internal static unsafe partial uint HttpSendResponseEntityBody(SafeHandle requestQueueHandle, ulong requestId, uint flags, ushort entityChunkCount, Windows.Win32.Networking.HttpServer.HTTP_DATA_CHUNK* pEntityChunks, uint* pBytesSent, IntPtr pReserved1, uint Reserved2, SafeNativeOverlapped pOverlapped, IntPtr pLogData);",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/src/NativeInterop/HttpApi.cs",
      "line": 37,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "internal unsafe delegate uint HttpGetRequestPropertyInvoker(SafeHandle requestQueueHandle, ulong requestId, HTTP_REQUEST_PROPERTY propertyId,",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/src/NativeInterop/HttpApi.cs",
      "line": 40,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "internal unsafe delegate uint HttpSetRequestPropertyInvoker(SafeHandle requestQueueHandle, ulong requestId, HTTP_REQUEST_PROPERTY propertyId,",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/src/NativeInterop/HttpApi.cs",
      "line": 55,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "internal static unsafe uint HttpGetRequestProperty(SafeHandle requestQueueHandle, ulong requestId, HTTP_REQUEST_PROPERTY propertyId,",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/src/NativeInterop/HttpApi.cs",
      "line": 61,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "internal static unsafe uint HttpSetRequestProperty(SafeHandle requestQueueHandle, ulong requestId, HTTP_REQUEST_PROPERTY propertyId,",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/src/NativeInterop/HttpApi.cs",
      "line": 76,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "static unsafe HttpApi()",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/src/NativeInterop/ServerSession.cs",
      "line": 11,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "internal unsafe ServerSession()",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/src/NativeInterop/DisconnectListener.cs",
      "line": 54,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "private unsafe CancellationToken CreateDisconnectToken(ulong connectionId)",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/src/NativeInterop/RequestQueue.cs",
      "line": 59,
      "type": "dangerous_api",
      "pattern": "Marshal.Copy",
      "code": "Marshal.Copy(securityDescriptorBytes, 0, pSecurityDescriptor.Value, securityDescriptorBytes.Length);",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Marshal.Copy",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/src/NativeInterop/RequestQueue.cs",
      "line": 61,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "unsafe",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/src/NativeInterop/RequestQueue.cs",
      "line": 143,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "internal unsafe void SetLengthLimit(long length)",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/src/NativeInterop/RequestQueue.cs",
      "line": 159,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "internal unsafe void SetRejectionVerbosity(Http503VerbosityLevel verbosity)",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/src/NativeInterop/UrlGroup.cs",
      "line": 29,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "internal unsafe UrlGroup(ServerSession serverSession, RequestQueue requestQueue, ILogger logger)",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/src/NativeInterop/UrlGroup.cs",
      "line": 49,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "internal unsafe void SetMaxConnections(long maxConnections)",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/src/NativeInterop/UrlGroup.cs",
      "line": 66,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "internal unsafe void SetDelegationProperty(RequestQueue destination)",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/src/NativeInterop/UrlGroup.cs",
      "line": 77,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "internal unsafe void UnSetDelegationProperty(RequestQueue destination, bool throwOnError = true)",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/src/NativeInterop/UrlGroup.cs",
      "line": 87,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "internal unsafe void SetProperty(HTTP_SERVER_PROPERTY property, IntPtr info, uint infosize, bool throwOnError = true)",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/src/NativeInterop/UrlGroup.cs",
      "line": 105,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "internal unsafe void AttachToQueue()",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/src/NativeInterop/UrlGroup.cs",
      "line": 123,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "internal unsafe void DetachFromQueue()",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/src/NativeInterop/UrlGroup.cs",
      "line": 152,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "unsafe",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/src/NativeInterop/SafeNativeOverlapped.cs",
      "line": 22,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "internal unsafe SafeNativeOverlapped(ThreadPoolBoundHandle boundHandle, NativeOverlapped* handle)",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/src/NativeInterop/SafeNativeOverlapped.cs",
      "line": 43,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "unsafe",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/src/NativeInterop/SafeLibraryHandle.cs",
      "line": 48,
      "type": "dangerous_api",
      "pattern": "Marshal.GetDelegateForFunctionPointer",
      "code": "return Marshal.GetDelegateForFunctionPointer<TDelegate>(pfnProc);",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Marshal.GetDelegateForFunctionPointer",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/src/NativeInterop/SafeLibraryHandle.cs",
      "line": 13,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "internal sealed unsafe partial class SafeLibraryHandle : SafeHandleZeroOrMinusOneIsInvalid",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/src/RequestProcessing/Request.cs",
      "line": 460,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "private unsafe void GetTlsTokenBindingInfo()",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/src/RequestProcessing/Response.cs",
      "line": 277,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "internal unsafe uint SendHeaders(ref UnmanagedBufferAllocator allocator,",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/src/RequestProcessing/Response.cs",
      "line": 484,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "private unsafe void SerializeHeaders(ref UnmanagedBufferAllocator allocator, bool isOpaqueUpgrade)",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/src/RequestProcessing/Response.cs",
      "line": 605,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "internal unsafe void SerializeTrailers(ref UnmanagedBufferAllocator allocator, out HTTP_DATA_CHUNK dataChunk)",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/src/RequestProcessing/ClientCertLoader.cs",
      "line": 279,
      "type": "dangerous_api",
      "pattern": "Marshal.Copy",
      "code": "Marshal.Copy((IntPtr)pClientCertInfo->pCertEncoded, certEncoded, 0, certEncoded.Length);",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Marshal.Copy",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/src/RequestProcessing/ClientCertLoader.cs",
      "line": 16,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "internal sealed unsafe partial class ClientCertLoader : IAsyncResult, IDisposable",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/src/RequestProcessing/ClientCertLoader.cs",
      "line": 218,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "private unsafe void IOCompleted(uint errorCode, uint numBytes)",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/src/RequestProcessing/ClientCertLoader.cs",
      "line": 224,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "private static unsafe void IOCompleted(ClientCertLoader asyncResult, uint errorCode, uint numBytes)",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/src/RequestProcessing/ClientCertLoader.cs",
      "line": 302,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "private static unsafe void WaitCallback(uint errorCode, uint numBytes, NativeOverlapped* nativeOverlapped)",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/src/RequestProcessing/RequestContext.cs",
      "line": 73,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "public unsafe Guid TraceIdentifier",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/src/RequestProcessing/RequestContext.cs",
      "line": 230,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "internal unsafe TlsCipherSuite? GetTlsCipherSuite()",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/src/RequestProcessing/RequestContext.cs",
      "line": 268,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "internal unsafe bool TryGetTlsClientHelloMessageBytes(",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/src/RequestProcessing/RequestContext.cs",
      "line": 316,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "internal unsafe HTTP_REQUEST_PROPERTY_SNI GetClientSni()",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/src/RequestProcessing/RequestContext.cs",
      "line": 347,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "internal unsafe void SetResetCode(int errorCode)",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/src/RequestProcessing/RequestContext.cs",
      "line": 382,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "internal unsafe void Delegate(DelegationRule destination)",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/src/RequestProcessing/ResponseStreamAsyncResult.cs",
      "line": 11,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "internal sealed unsafe partial class ResponseStreamAsyncResult : IAsyncResult, IDisposable",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/src/RequestProcessing/ResponseStreamAsyncResult.cs",
      "line": 279,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "private static unsafe void Callback(uint errorCode, uint _, NativeOverlapped* nativeOverlapped)",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/src/RequestProcessing/RequestStreamAsyncResult.cs",
      "line": 9,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "internal sealed unsafe class RequestStreamAsyncResult : IAsyncResult, IDisposable",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/src/RequestProcessing/RequestStreamAsyncResult.cs",
      "line": 93,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "private static unsafe void Callback(uint errorCode, uint numBytes, NativeOverlapped* nativeOverlapped)",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/src/RequestProcessing/ResponseBody.cs",
      "line": 281,
      "type": "dangerous_api",
      "pattern": "GCHandle.Alloc",
      "code": "handle = GCHandle.Alloc(buffer.Array, GCHandleType.Pinned);",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: GCHandle.Alloc",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/src/RequestProcessing/ResponseBody.cs",
      "line": 112,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "private unsafe void FlushInternal(bool endOfRequest, ArraySegment<byte> data = new ArraySegment<byte>())",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/src/RequestProcessing/ResponseBody.cs",
      "line": 190,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "private unsafe void BuildDataChunks(scoped ref UnmanagedBufferAllocator allocator, bool endOfRequest, ArraySegment<byte> data, out Span<HTTP_DATA_CHUNK> dataChunks, out Span<GCHandle> pins)",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/src/RequestProcessing/ResponseBody.cs",
      "line": 275,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "private static unsafe void SetDataChunk(",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/src/RequestProcessing/ResponseBody.cs",
      "line": 285,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "private static unsafe void SetDataChunkWithPinnedData(",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/src/RequestProcessing/ResponseBody.cs",
      "line": 320,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "private unsafe Task FlushInternalAsync(ArraySegment<byte> data, CancellationToken cancellationToken)",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/src/RequestProcessing/ResponseBody.cs",
      "line": 609,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "// We can't mix await and unsafe so separate the unsafe code into another method.",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/src/RequestProcessing/ResponseBody.cs",
      "line": 613,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "internal unsafe Task SendFileAsyncCore(string fileName, long offset, long? count, CancellationToken cancellationToken)",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/src/RequestProcessing/ResponseBody.cs",
      "line": 743,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "protected override unsafe void Dispose(bool disposing)",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/src/RequestProcessing/ResponseBody.cs",
      "line": 770,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "internal unsafe void CancelLastWrite()",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/src/RequestProcessing/RequestStream.cs",
      "line": 99,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "public override unsafe int Read([In, Out] byte[] buffer, int offset, int size)",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/src/RequestProcessing/RequestStream.cs",
      "line": 183,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "public override unsafe IAsyncResult BeginRead(byte[] buffer, int offset, int size, AsyncCallback? callback, object? state)",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/src/RequestProcessing/RequestStream.cs",
      "line": 189,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "public override unsafe Task<int> ReadAsync(byte[] buffer, int offset, int size, CancellationToken cancellationToken)",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/Kestrel/Core/test/BufferWriterTests.cs",
      "line": 219,
      "type": "insecure_random",
      "pattern": "Random\\(.*\\)",
      "code": "Random(length).NextBytes(data)",
      "severity": "MEDIUM",
      "description": "Insecure random number generation - potential for predictable values",
      "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/Kestrel/Core/test/KestrelEventSourceTests.cs",
      "line": 17,
      "type": "dangerous_api",
      "pattern": "Assembly.GetType",
      "code": "var esType = typeof(KestrelServer).Assembly.GetType(",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Assembly.GetType",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/Kestrel/Core/src/Internal/Infrastructure/KestrelEventSource.cs",
      "line": 383,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "private unsafe void WriteEvent(int eventId, string? arg1, string? arg2, string? arg3, string? arg4, string? arg5)",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/Kestrel/test/FunctionalTests/RequestTests.cs",
      "line": 1191,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/Kestrel/Transport.Sockets/src/SocketTransportOptions.cs",
      "line": 87,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "/// This will run application code on the IO thread which is why this is unsafe.",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/Kestrel/Transport.Sockets/src/SocketConnectionFactoryOptions.cs",
      "line": 63,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "/// This will run application code on the IO thread which is why this is unsafe.",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/Kestrel/Transport.Sockets/src/Internal/SocketAwaitableEventArgs.cs",
      "line": 28,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": ": base(unsafeSuppressExecutionContextFlow: true)",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/Kestrel/perf/Microbenchmarks/BinaryPrimitivesBenchmark.cs",
      "line": 34,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "public unsafe uint GetUInt32AsBinary()",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/Kestrel/stress/Program.cs",
      "line": 636,
      "type": "insecure_random",
      "pattern": "Random\\(.*\\)",
      "code": "Random(Combine(seed, taskNum))",
      "severity": "MEDIUM",
      "description": "Insecure random number generation - potential for predictable values",
      "recommendation": "Use RNGCryptoServiceProvider for cryptographic random numbers"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/IIS/IntegrationTesting.IIS/src/IISDeployerBase.cs",
      "line": 25,
      "type": "xxe",
      "pattern": "XDocument\\.Load",
      "code": "XDocument.Load",
      "severity": "HIGH",
      "description": "XML External Entity (XXE) vulnerability - potential for data disclosure",
      "recommendation": "Disable external entity processing in XML parsers"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/IIS/IntegrationTesting.IIS/src/IISDeployerBase.cs",
      "line": 44,
      "type": "xxe",
      "pattern": "XDocument\\.Load",
      "code": "XDocument.Load",
      "severity": "HIGH",
      "description": "XML External Entity (XXE) vulnerability - potential for data disclosure",
      "recommendation": "Disable external entity processing in XML parsers"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/IIS/IIS/test/Common.FunctionalTests/FrebTests.cs",
      "line": 151,
      "type": "xxe",
      "pattern": "XDocument\\.Load",
      "code": "XDocument.Load",
      "severity": "HIGH",
      "description": "XML External Entity (XXE) vulnerability - potential for data disclosure",
      "recommendation": "Disable external entity processing in XML parsers"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/IIS/IIS/test/Common.FunctionalTests/MultiApplicationTests.cs",
      "line": 102,
      "type": "xxe",
      "pattern": "XDocument\\.Load",
      "code": "XDocument.Load",
      "severity": "HIGH",
      "description": "XML External Entity (XXE) vulnerability - potential for data disclosure",
      "recommendation": "Disable external entity processing in XML parsers"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/IIS/IIS/test/Common.FunctionalTests/Infrastructure/RequiresIISAttribute.cs",
      "line": 78,
      "type": "xxe",
      "pattern": "XDocument\\.Load",
      "code": "XDocument.Load",
      "severity": "HIGH",
      "description": "XML External Entity (XXE) vulnerability - potential for data disclosure",
      "recommendation": "Disable external entity processing in XML parsers"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/IIS/IIS/test/Common.FunctionalTests/Infrastructure/Helpers.cs",
      "line": 217,
      "type": "deserialize_vuln",
      "pattern": "JsonConvert\\.DeserializeObject",
      "code": "JsonConvert.DeserializeObject",
      "severity": "CRITICAL",
      "description": "Deserialization vulnerability - potential for remote code execution",
      "recommendation": "Use secure serialization methods, validate input types"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/IIS/IIS/test/Common.FunctionalTests/Infrastructure/Helpers.cs",
      "line": 100,
      "type": "xxe",
      "pattern": "XDocument\\.Load",
      "code": "XDocument.Load",
      "severity": "HIGH",
      "description": "XML External Entity (XXE) vulnerability - potential for data disclosure",
      "recommendation": "Disable external entity processing in XML parsers"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/IIS/IIS/test/IIS.Tests/Utilities/TestServer.cs",
      "line": 125,
      "type": "xxe",
      "pattern": "XDocument\\.Load",
      "code": "XDocument.Load",
      "severity": "HIGH",
      "description": "XML External Entity (XXE) vulnerability - potential for data disclosure",
      "recommendation": "Disable external entity processing in XML parsers"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/IIS/IIS/src/NativeMethods.cs",
      "line": 52,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "private static unsafe partial int register_callbacks(NativeSafeHandle pInProcessApplication,",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/IIS/IIS/src/NativeMethods.cs",
      "line": 62,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "private static unsafe partial int http_write_response_bytes(NativeSafeHandle pInProcessHandler, HTTP_DATA_CHUNK* pDataChunks, int nChunks, [MarshalAs(UnmanagedType.Bool)] out bool fCompletionExpected);",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/IIS/IIS/src/NativeMethods.cs",
      "line": 68,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "private static unsafe partial HTTP_REQUEST_V2* http_get_raw_request(NativeSafeHandle pInProcessHandler);",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/IIS/IIS/src/NativeMethods.cs",
      "line": 83,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "private static unsafe partial int http_read_request_bytes(NativeSafeHandle pInProcessHandler, byte* pvBuffer, int cbBuffer, out int dwBytesReceived, [MarshalAs(UnmanagedType.Bool)] out bool fCompletionExpected);",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/IIS/IIS/src/NativeMethods.cs",
      "line": 96,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "private static unsafe partial int http_query_request_property(",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/IIS/IIS/src/NativeMethods.cs",
      "line": 119,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "private static unsafe partial int http_websockets_read_bytes(",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/IIS/IIS/src/NativeMethods.cs",
      "line": 129,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "private static unsafe partial int http_websockets_write_bytes(",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/IIS/IIS/src/NativeMethods.cs",
      "line": 150,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "private static unsafe partial int http_response_set_unknown_header(NativeSafeHandle pInProcessHandler, byte* pszHeaderName, byte* pszHeaderValue, ushort usHeaderValueLength, [MarshalAs(UnmanagedType.Bool)] bool fReplace);",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/IIS/IIS/src/NativeMethods.cs",
      "line": 153,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "private static unsafe partial int http_has_response4(NativeSafeHandle pInProcessHandler, [MarshalAs(UnmanagedType.Bool)] out bool isResponse4);",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/IIS/IIS/src/NativeMethods.cs",
      "line": 156,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "private static unsafe partial int http_response_set_trailer(NativeSafeHandle pInProcessHandler, byte* pszHeaderName, byte* pszHeaderValue, ushort usHeaderValueLength, [MarshalAs(UnmanagedType.Bool)] bool replace);",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/IIS/IIS/src/NativeMethods.cs",
      "line": 159,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "private static unsafe partial int http_reset_stream(NativeSafeHandle pInProcessHandler, ulong errorCode);",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/IIS/IIS/src/NativeMethods.cs",
      "line": 162,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "private static unsafe partial int http_response_set_known_header(NativeSafeHandle pInProcessHandler, int headerId, byte* pHeaderValue, ushort length, [MarshalAs(UnmanagedType.Bool)] bool fReplace);",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/IIS/IIS/src/NativeMethods.cs",
      "line": 168,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "private static unsafe partial int http_set_startup_error_page_content(byte* content, int contentLength);",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/IIS/IIS/src/NativeMethods.cs",
      "line": 180,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "public static unsafe void HttpRegisterCallbacks(NativeSafeHandle pInProcessApplication,",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/IIS/IIS/src/NativeMethods.cs",
      "line": 192,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "internal static unsafe int HttpWriteResponseBytes(NativeSafeHandle pInProcessHandler, HTTP_DATA_CHUNK* pDataChunks, int nChunks, out bool fCompletionExpected)",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/IIS/IIS/src/NativeMethods.cs",
      "line": 202,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "internal static unsafe HTTP_REQUEST_V2* HttpGetRawRequest(NativeSafeHandle pInProcessHandler)",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/IIS/IIS/src/NativeMethods.cs",
      "line": 227,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "public static unsafe int HttpReadRequestBytes(NativeSafeHandle pInProcessHandler, byte* pvBuffer, int cbBuffer, out int dwBytesReceived, out bool fCompletionExpected)",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/IIS/IIS/src/NativeMethods.cs",
      "line": 248,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "public static unsafe int HttpQueryRequestProperty(ulong requestId, HTTP_REQUEST_PROPERTY propertyId, void* qualifier, uint qualifierSize, void* output, uint outputSize, uint* bytesReturned, IntPtr overlapped)",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/IIS/IIS/src/NativeMethods.cs",
      "line": 263,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "public static unsafe int HttpWebsocketsReadBytes(",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/IIS/IIS/src/NativeMethods.cs",
      "line": 274,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "internal static unsafe int HttpWebsocketsWriteBytes(",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/IIS/IIS/src/NativeMethods.cs",
      "line": 309,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "public static unsafe void HttpResponseSetUnknownHeader(NativeSafeHandle pInProcessHandler, byte* pszHeaderName, byte* pszHeaderValue, ushort usHeaderValueLength, bool fReplace)",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/IIS/IIS/src/NativeMethods.cs",
      "line": 314,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "public static unsafe void HttpResponseSetKnownHeader(NativeSafeHandle pInProcessHandler, int headerId, byte* pHeaderValue, ushort length, bool fReplace)",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/IIS/IIS/src/NativeMethods.cs",
      "line": 329,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "internal static unsafe void HttpSetStartupErrorPageContent(byte[] content)",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/IIS/IIS/src/NativeMethods.cs",
      "line": 337,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "internal static unsafe void HttpResponseSetTrailer(NativeSafeHandle pInProcessHandler, byte* pHeaderName, byte* pHeaderValue, ushort length, bool replace)",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/IIS/IIS/src/NativeMethods.cs",
      "line": 342,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "internal static unsafe void HttpResetStream(NativeSafeHandle pInProcessHandler, ulong errorCode)",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/IIS/IIS/src/NativeMethods.cs",
      "line": 347,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "internal static unsafe bool HttpHasResponse4(NativeSafeHandle pInProcessHandler)",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/IIS/IIS/src/Core/IISHttpServer.cs",
      "line": 98,
      "type": "dangerous_api",
      "pattern": "GCHandle.Alloc",
      "code": "_httpServerHandle = GCHandle.Alloc(this);",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: GCHandle.Alloc",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/IIS/IIS/src/Core/IISHttpServer.cs",
      "line": 96,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "public unsafe Task StartAsync<TContext>(IHttpApplication<TContext> application, CancellationToken cancellationToken) where TContext : notnull",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/IIS/IIS/src/Core/IISHttpContext.FeatureCollection.cs",
      "line": 395,
      "type": "dangerous_api",
      "pattern": "Marshal.Copy",
      "code": "Marshal.Copy((IntPtr)NativeRequest->pSslInfo->pClientCertInfo->pCertEncoded, rawCertificateCopy, 0, rawCertificateCopy.Length);",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Marshal.Copy",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/IIS/IIS/src/Core/IISHttpContext.FeatureCollection.cs",
      "line": 383,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "unsafe X509Certificate2? ITlsConnectionFeature.ClientCertificate",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/IIS/IIS/src/Core/IISHttpContext.FeatureCollection.cs",
      "line": 500,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "internal unsafe void SetResetCode(int errorCode)",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/IIS/IIS/src/Core/IISHttpContext.cs",
      "line": 156,
      "type": "dangerous_api",
      "pattern": "GCHandle.Alloc",
      "code": "_thisHandle = GCHandle.Alloc(this);",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: GCHandle.Alloc",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/IIS/IIS/src/Core/IISHttpContext.cs",
      "line": 75,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "internal unsafe IISHttpContext(",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/IIS/IIS/src/Core/IISHttpContext.cs",
      "line": 420,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "private unsafe TlsCipherSuite? GetTlsCipherSuite()",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/IIS/IIS/src/Core/IISHttpContext.cs",
      "line": 442,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "private unsafe HTTP_REQUEST_PROPERTY_SNI GetClientSni()",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/IIS/IIS/src/Core/IISHttpContext.cs",
      "line": 600,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "public unsafe void SetResponseHeaders()",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/IIS/IIS/src/Core/IISHttpContext.cs",
      "line": 659,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "public unsafe void SetResponseTrailers()",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/IIS/IIS/src/Core/IISNativeApplication.cs",
      "line": 47,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "public unsafe void RegisterCallbacks(",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/IIS/IIS/src/Core/IISHttpContext.IHttpRequestIdentifierFeature.cs",
      "line": 26,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "private unsafe void InitializeHttpRequestIdentifierFeature()",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/IIS/IIS/src/Core/IO/AsyncIOEngine.Read.cs",
      "line": 32,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "protected override unsafe bool InvokeOperation(out int hr, out int bytes)",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/IIS/IIS/src/Core/IO/AsyncWriteOperationBase.cs",
      "line": 24,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "protected override unsafe bool InvokeOperation(out int hr, out int bytes)",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/IIS/IIS/src/Core/IO/AsyncWriteOperationBase.cs",
      "line": 97,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "private unsafe int WriteSequence(NativeSafeHandle requestHandler, int nChunks, ReadOnlySequence<byte> buffer, HTTP_DATA_CHUNK* pDataChunks, out bool fCompletionExpected)",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/IIS/IIS/src/Core/IO/AsyncWriteOperationBase.cs",
      "line": 122,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "protected abstract unsafe int WriteChunks(NativeSafeHandle requestHandler, int chunkCount, HTTP_DATA_CHUNK* dataChunks, out bool completionExpected);",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/IIS/IIS/src/Core/IO/WebSocketsAsyncIOEngine.Read.cs",
      "line": 36,
      "type": "dangerous_api",
      "pattern": "GCHandle.Alloc",
      "code": "_thisHandle = GCHandle.Alloc(this);",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: GCHandle.Alloc",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/IIS/IIS/src/Core/IO/WebSocketsAsyncIOEngine.Read.cs",
      "line": 40,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "protected override unsafe bool InvokeOperation(out int hr, out int bytes)",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/IIS/IIS/src/Core/IO/WebSocketsAsyncIOEngine.Write.cs",
      "line": 31,
      "type": "dangerous_api",
      "pattern": "GCHandle.Alloc",
      "code": "_thisHandle = GCHandle.Alloc(this);",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: GCHandle.Alloc",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/IIS/IIS/src/Core/IO/WebSocketsAsyncIOEngine.Write.cs",
      "line": 35,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "protected override unsafe int WriteChunks(NativeSafeHandle requestHandler, int chunkCount, HTTP_DATA_CHUNK* dataChunks, out bool completionExpected)",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/IIS/IIS/src/Core/IO/AsyncIOEngine.Write.cs",
      "line": 19,
      "type": "unsafe_code",
      "pattern": "unsafe",
      "code": "protected override unsafe int WriteChunks(NativeSafeHandle requestHandler, int chunkCount, HTTP_DATA_CHUNK* dataChunks,",
      "severity": "CRITICAL",
      "description": "Unsafe code block detected",
      "recommendation": "Avoid unsafe code unless absolutely necessary and thoroughly reviewed"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.SkipValidation.cs",
      "line": 118,
      "type": "dangerous_api",
      "pattern": "Activator.CreateInstance",
      "code": "var instance = Activator.CreateInstance(type);",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Activator.CreateInstance",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.SkipValidation.cs",
      "line": 135,
      "type": "dangerous_api",
      "pattern": "Activator.CreateInstance",
      "code": "var instance = Activator.CreateInstance(type);",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Activator.CreateInstance",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.SkipValidation.cs",
      "line": 157,
      "type": "dangerous_api",
      "pattern": "Activator.CreateInstance",
      "code": "var instance = Activator.CreateInstance(type);",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Activator.CreateInstance",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.SkipValidation.cs",
      "line": 175,
      "type": "dangerous_api",
      "pattern": "Activator.CreateInstance",
      "code": "var rootInstance = Activator.CreateInstance(type);",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Activator.CreateInstance",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.SkipValidation.cs",
      "line": 176,
      "type": "dangerous_api",
      "pattern": "Activator.CreateInstance",
      "code": "var listInstance = Activator.CreateInstance(typeof(List<>).MakeGenericType(type.Assembly.GetType(\"NestedType\")!));",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Activator.CreateInstance",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.SkipValidation.cs",
      "line": 179,
      "type": "dangerous_api",
      "pattern": "Activator.CreateInstance",
      "code": "var nestedTypeInstance = Activator.CreateInstance(type.Assembly.GetType(\"NestedType\")!);",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Activator.CreateInstance",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.SkipValidation.cs",
      "line": 203,
      "type": "dangerous_api",
      "pattern": "Activator.CreateInstance",
      "code": "var rootInstance = Activator.CreateInstance(type);",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Activator.CreateInstance",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.SkipValidation.cs",
      "line": 204,
      "type": "dangerous_api",
      "pattern": "Activator.CreateInstance",
      "code": "var listInstance = Activator.CreateInstance(typeof(List<>).MakeGenericType(type.Assembly.GetType(\"NestedType\")!));",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Activator.CreateInstance",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.SkipValidation.cs",
      "line": 207,
      "type": "dangerous_api",
      "pattern": "Activator.CreateInstance",
      "code": "var nestedTypeInstance = Activator.CreateInstance(type.Assembly.GetType(\"NestedType\")!);",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Activator.CreateInstance",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.SkipValidation.cs",
      "line": 227,
      "type": "dangerous_api",
      "pattern": "Activator.CreateInstance",
      "code": "var instance = Activator.CreateInstance(type);",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Activator.CreateInstance",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.SkipValidation.cs",
      "line": 258,
      "type": "dangerous_api",
      "pattern": "Activator.CreateInstance",
      "code": "var instance = Activator.CreateInstance(type);",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Activator.CreateInstance",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.SkipValidation.cs",
      "line": 335,
      "type": "dangerous_api",
      "pattern": "Activator.CreateInstance",
      "code": "var nestedTypeInstance = Activator.CreateInstance(nestedType);",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Activator.CreateInstance",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.SkipValidation.cs",
      "line": 336,
      "type": "dangerous_api",
      "pattern": "Activator.CreateInstance",
      "code": "var skippedNestedTypeInstance = Activator.CreateInstance(nestedType);",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Activator.CreateInstance",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.SkipValidation.cs",
      "line": 338,
      "type": "dangerous_api",
      "pattern": "Activator.CreateInstance",
      "code": "var instance = Activator.CreateInstance(type, 10, nestedTypeInstance, skippedNestedTypeInstance);",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Activator.CreateInstance",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.SkipValidation.cs",
      "line": 359,
      "type": "dangerous_api",
      "pattern": "Activator.CreateInstance",
      "code": "var nestedTypeInstance = Activator.CreateInstance(nestedType);",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Activator.CreateInstance",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.SkipValidation.cs",
      "line": 360,
      "type": "dangerous_api",
      "pattern": "Activator.CreateInstance",
      "code": "var skippedNestedTypeInstance = Activator.CreateInstance(nestedType);",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Activator.CreateInstance",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.SkipValidation.cs",
      "line": 362,
      "type": "dangerous_api",
      "pattern": "Activator.CreateInstance",
      "code": "var instance = Activator.CreateInstance(type, 10, nestedTypeInstance, skippedNestedTypeInstance);",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Activator.CreateInstance",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.SkipValidation.cs",
      "line": 379,
      "type": "dangerous_api",
      "pattern": "Activator.CreateInstance",
      "code": "var nestedTypeInstance = Activator.CreateInstance(nestedType);",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Activator.CreateInstance",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.SkipValidation.cs",
      "line": 380,
      "type": "dangerous_api",
      "pattern": "Activator.CreateInstance",
      "code": "var instance = Activator.CreateInstance(type, 5, nestedTypeInstance, nestedTypeInstance); // Create with invalid value",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Activator.CreateInstance",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.SkipValidation.cs",
      "line": 176,
      "type": "dangerous_api",
      "pattern": "Assembly.GetType",
      "code": "var listInstance = Activator.CreateInstance(typeof(List<>).MakeGenericType(type.Assembly.GetType(\"NestedType\")!));",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Assembly.GetType",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.SkipValidation.cs",
      "line": 179,
      "type": "dangerous_api",
      "pattern": "Assembly.GetType",
      "code": "var nestedTypeInstance = Activator.CreateInstance(type.Assembly.GetType(\"NestedType\")!);",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Assembly.GetType",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.SkipValidation.cs",
      "line": 204,
      "type": "dangerous_api",
      "pattern": "Assembly.GetType",
      "code": "var listInstance = Activator.CreateInstance(typeof(List<>).MakeGenericType(type.Assembly.GetType(\"NestedType\")!));",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Assembly.GetType",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.SkipValidation.cs",
      "line": 207,
      "type": "dangerous_api",
      "pattern": "Assembly.GetType",
      "code": "var nestedTypeInstance = Activator.CreateInstance(type.Assembly.GetType(\"NestedType\")!);",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Assembly.GetType",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.ValidatableType.cs",
      "line": 159,
      "type": "dangerous_api",
      "pattern": "Type.GetType",
      "code": "subType.GetType().GetProperty(\"RequiredProperty\")?.SetValue(subType, \"\");",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Type.GetType",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.ValidatableType.cs",
      "line": 160,
      "type": "dangerous_api",
      "pattern": "Type.GetType",
      "code": "subType.GetType().GetProperty(\"StringWithLength\")?.SetValue(subType, \"way-too-long\");",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Type.GetType",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.ValidatableType.cs",
      "line": 187,
      "type": "dangerous_api",
      "pattern": "Type.GetType",
      "code": "inheritanceType.GetType().GetProperty(\"RequiredProperty\")?.SetValue(inheritanceType, \"\");",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Type.GetType",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.ValidatableType.cs",
      "line": 188,
      "type": "dangerous_api",
      "pattern": "Type.GetType",
      "code": "inheritanceType.GetType().GetProperty(\"StringWithLength\")?.SetValue(inheritanceType, \"way-too-long\");",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Type.GetType",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.ValidatableType.cs",
      "line": 189,
      "type": "dangerous_api",
      "pattern": "Type.GetType",
      "code": "inheritanceType.GetType().GetProperty(\"EmailString\")?.SetValue(inheritanceType, \"not-an-email\");",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Type.GetType",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.ValidatableType.cs",
      "line": 356,
      "type": "dangerous_api",
      "pattern": "Type.GetType",
      "code": "inheritanceType.GetType().GetProperty(\"RequiredProperty\")?.SetValue(inheritanceType, \"valid\");",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Type.GetType",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.ValidatableType.cs",
      "line": 357,
      "type": "dangerous_api",
      "pattern": "Type.GetType",
      "code": "inheritanceType.GetType().GetProperty(\"StringWithLength\")?.SetValue(inheritanceType, \"valid\");",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Type.GetType",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.ValidatableType.cs",
      "line": 358,
      "type": "dangerous_api",
      "pattern": "Type.GetType",
      "code": "inheritanceType.GetType().GetProperty(\"EmailString\")?.SetValue(inheritanceType, \"test@example.com\");",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Type.GetType",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.ValidatableType.cs",
      "line": 528,
      "type": "dangerous_api",
      "pattern": "Type.GetType",
      "code": "subType.GetType().GetProperty(\"RequiredProperty\")?.SetValue(subType, \"\");",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Type.GetType",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.ValidatableType.cs",
      "line": 529,
      "type": "dangerous_api",
      "pattern": "Type.GetType",
      "code": "subType.GetType().GetProperty(\"StringWithLength\")?.SetValue(subType, \"way-too-long\");",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Type.GetType",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.ValidatableType.cs",
      "line": 556,
      "type": "dangerous_api",
      "pattern": "Type.GetType",
      "code": "inheritanceType.GetType().GetProperty(\"RequiredProperty\")?.SetValue(inheritanceType, \"\");",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Type.GetType",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.ValidatableType.cs",
      "line": 557,
      "type": "dangerous_api",
      "pattern": "Type.GetType",
      "code": "inheritanceType.GetType().GetProperty(\"StringWithLength\")?.SetValue(inheritanceType, \"way-too-long\");",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Type.GetType",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.ValidatableType.cs",
      "line": 558,
      "type": "dangerous_api",
      "pattern": "Type.GetType",
      "code": "inheritanceType.GetType().GetProperty(\"EmailString\")?.SetValue(inheritanceType, \"not-an-email\");",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Type.GetType",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.ValidatableType.cs",
      "line": 725,
      "type": "dangerous_api",
      "pattern": "Type.GetType",
      "code": "inheritanceType.GetType().GetProperty(\"RequiredProperty\")?.SetValue(inheritanceType, \"valid\");",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Type.GetType",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.ValidatableType.cs",
      "line": 726,
      "type": "dangerous_api",
      "pattern": "Type.GetType",
      "code": "inheritanceType.GetType().GetProperty(\"StringWithLength\")?.SetValue(inheritanceType, \"valid\");",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Type.GetType",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.ValidatableType.cs",
      "line": 727,
      "type": "dangerous_api",
      "pattern": "Type.GetType",
      "code": "inheritanceType.GetType().GetProperty(\"EmailString\")?.SetValue(inheritanceType, \"test@example.com\");",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Type.GetType",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.ValidatableType.cs",
      "line": 100,
      "type": "dangerous_api",
      "pattern": "Activator.CreateInstance",
      "code": "var instance = Activator.CreateInstance(type);",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Activator.CreateInstance",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.ValidatableType.cs",
      "line": 119,
      "type": "dangerous_api",
      "pattern": "Activator.CreateInstance",
      "code": "var instance = Activator.CreateInstance(type);",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Activator.CreateInstance",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.ValidatableType.cs",
      "line": 138,
      "type": "dangerous_api",
      "pattern": "Activator.CreateInstance",
      "code": "var instance = Activator.CreateInstance(type);",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Activator.CreateInstance",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.ValidatableType.cs",
      "line": 157,
      "type": "dangerous_api",
      "pattern": "Activator.CreateInstance",
      "code": "var instance = Activator.CreateInstance(type);",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Activator.CreateInstance",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.ValidatableType.cs",
      "line": 158,
      "type": "dangerous_api",
      "pattern": "Activator.CreateInstance",
      "code": "var subType = Activator.CreateInstance(type.Assembly.GetType(\"SubType\")!);",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Activator.CreateInstance",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.ValidatableType.cs",
      "line": 185,
      "type": "dangerous_api",
      "pattern": "Activator.CreateInstance",
      "code": "var instance = Activator.CreateInstance(type);",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Activator.CreateInstance",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.ValidatableType.cs",
      "line": 186,
      "type": "dangerous_api",
      "pattern": "Activator.CreateInstance",
      "code": "var inheritanceType = Activator.CreateInstance(type.Assembly.GetType(\"SubTypeWithInheritance\")!);",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Activator.CreateInstance",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.ValidatableType.cs",
      "line": 219,
      "type": "dangerous_api",
      "pattern": "Activator.CreateInstance",
      "code": "var instance = Activator.CreateInstance(type);",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Activator.CreateInstance",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.ValidatableType.cs",
      "line": 220,
      "type": "dangerous_api",
      "pattern": "Activator.CreateInstance",
      "code": "var subTypeList = Activator.CreateInstance(typeof(List<>).MakeGenericType(type.Assembly.GetType(\"SubType\")!));",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Activator.CreateInstance",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.ValidatableType.cs",
      "line": 223,
      "type": "dangerous_api",
      "pattern": "Activator.CreateInstance",
      "code": "var subType1 = Activator.CreateInstance(type.Assembly.GetType(\"SubType\")!);",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Activator.CreateInstance",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.ValidatableType.cs",
      "line": 228,
      "type": "dangerous_api",
      "pattern": "Activator.CreateInstance",
      "code": "var subType2 = Activator.CreateInstance(type.Assembly.GetType(\"SubType\")!);",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Activator.CreateInstance",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.ValidatableType.cs",
      "line": 233,
      "type": "dangerous_api",
      "pattern": "Activator.CreateInstance",
      "code": "var subType3 = Activator.CreateInstance(type.Assembly.GetType(\"SubType\")!);",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Activator.CreateInstance",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.ValidatableType.cs",
      "line": 271,
      "type": "dangerous_api",
      "pattern": "Activator.CreateInstance",
      "code": "var instance = Activator.CreateInstance(type);",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Activator.CreateInstance",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.ValidatableType.cs",
      "line": 290,
      "type": "dangerous_api",
      "pattern": "Activator.CreateInstance",
      "code": "var instance = Activator.CreateInstance(type);",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Activator.CreateInstance",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.ValidatableType.cs",
      "line": 317,
      "type": "dangerous_api",
      "pattern": "Activator.CreateInstance",
      "code": "var instance = Activator.CreateInstance(type);",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Activator.CreateInstance",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.ValidatableType.cs",
      "line": 336,
      "type": "dangerous_api",
      "pattern": "Activator.CreateInstance",
      "code": "var instance = Activator.CreateInstance(type);",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Activator.CreateInstance",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.ValidatableType.cs",
      "line": 343,
      "type": "dangerous_api",
      "pattern": "Activator.CreateInstance",
      "code": "var subType1 = Activator.CreateInstance(type.Assembly.GetType(\"SubType\")!);",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Activator.CreateInstance",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.ValidatableType.cs",
      "line": 349,
      "type": "dangerous_api",
      "pattern": "Activator.CreateInstance",
      "code": "var subType2 = Activator.CreateInstance(type.Assembly.GetType(\"SubType\")!);",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Activator.CreateInstance",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.ValidatableType.cs",
      "line": 355,
      "type": "dangerous_api",
      "pattern": "Activator.CreateInstance",
      "code": "var inheritanceType = Activator.CreateInstance(type.Assembly.GetType(\"SubTypeWithInheritance\")!);",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Activator.CreateInstance",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.ValidatableType.cs",
      "line": 362,
      "type": "dangerous_api",
      "pattern": "Activator.CreateInstance",
      "code": "var emptyList = Activator.CreateInstance(typeof(List<>).MakeGenericType(type.Assembly.GetType(\"SubType\")!));",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Activator.CreateInstance",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.ValidatableType.cs",
      "line": 469,
      "type": "dangerous_api",
      "pattern": "Activator.CreateInstance",
      "code": "var instance = Activator.CreateInstance(type);",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Activator.CreateInstance",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.ValidatableType.cs",
      "line": 488,
      "type": "dangerous_api",
      "pattern": "Activator.CreateInstance",
      "code": "var instance = Activator.CreateInstance(type);",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Activator.CreateInstance",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.ValidatableType.cs",
      "line": 507,
      "type": "dangerous_api",
      "pattern": "Activator.CreateInstance",
      "code": "var instance = Activator.CreateInstance(type);",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Activator.CreateInstance",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.ValidatableType.cs",
      "line": 526,
      "type": "dangerous_api",
      "pattern": "Activator.CreateInstance",
      "code": "var instance = Activator.CreateInstance(type);",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Activator.CreateInstance",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.ValidatableType.cs",
      "line": 527,
      "type": "dangerous_api",
      "pattern": "Activator.CreateInstance",
      "code": "var subType = Activator.CreateInstance(type.Assembly.GetType(\"SubType\")!);",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Activator.CreateInstance",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.ValidatableType.cs",
      "line": 554,
      "type": "dangerous_api",
      "pattern": "Activator.CreateInstance",
      "code": "var instance = Activator.CreateInstance(type);",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Activator.CreateInstance",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.ValidatableType.cs",
      "line": 555,
      "type": "dangerous_api",
      "pattern": "Activator.CreateInstance",
      "code": "var inheritanceType = Activator.CreateInstance(type.Assembly.GetType(\"SubTypeWithInheritance\")!);",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Activator.CreateInstance",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.ValidatableType.cs",
      "line": 588,
      "type": "dangerous_api",
      "pattern": "Activator.CreateInstance",
      "code": "var instance = Activator.CreateInstance(type);",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Activator.CreateInstance",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.ValidatableType.cs",
      "line": 589,
      "type": "dangerous_api",
      "pattern": "Activator.CreateInstance",
      "code": "var subTypeList = Activator.CreateInstance(typeof(List<>).MakeGenericType(type.Assembly.GetType(\"SubType\")!));",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Activator.CreateInstance",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.ValidatableType.cs",
      "line": 592,
      "type": "dangerous_api",
      "pattern": "Activator.CreateInstance",
      "code": "var subType1 = Activator.CreateInstance(type.Assembly.GetType(\"SubType\")!);",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Activator.CreateInstance",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.ValidatableType.cs",
      "line": 597,
      "type": "dangerous_api",
      "pattern": "Activator.CreateInstance",
      "code": "var subType2 = Activator.CreateInstance(type.Assembly.GetType(\"SubType\")!);",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Activator.CreateInstance",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.ValidatableType.cs",
      "line": 602,
      "type": "dangerous_api",
      "pattern": "Activator.CreateInstance",
      "code": "var subType3 = Activator.CreateInstance(type.Assembly.GetType(\"SubType\")!);",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Activator.CreateInstance",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.ValidatableType.cs",
      "line": 640,
      "type": "dangerous_api",
      "pattern": "Activator.CreateInstance",
      "code": "var instance = Activator.CreateInstance(type);",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Activator.CreateInstance",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.ValidatableType.cs",
      "line": 659,
      "type": "dangerous_api",
      "pattern": "Activator.CreateInstance",
      "code": "var instance = Activator.CreateInstance(type);",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Activator.CreateInstance",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.ValidatableType.cs",
      "line": 686,
      "type": "dangerous_api",
      "pattern": "Activator.CreateInstance",
      "code": "var instance = Activator.CreateInstance(type);",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Activator.CreateInstance",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.ValidatableType.cs",
      "line": 705,
      "type": "dangerous_api",
      "pattern": "Activator.CreateInstance",
      "code": "var instance = Activator.CreateInstance(type);",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Activator.CreateInstance",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.ValidatableType.cs",
      "line": 712,
      "type": "dangerous_api",
      "pattern": "Activator.CreateInstance",
      "code": "var subType1 = Activator.CreateInstance(type.Assembly.GetType(\"SubType\")!);",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Activator.CreateInstance",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.ValidatableType.cs",
      "line": 718,
      "type": "dangerous_api",
      "pattern": "Activator.CreateInstance",
      "code": "var subType2 = Activator.CreateInstance(type.Assembly.GetType(\"SubType\")!);",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Activator.CreateInstance",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.ValidatableType.cs",
      "line": 724,
      "type": "dangerous_api",
      "pattern": "Activator.CreateInstance",
      "code": "var inheritanceType = Activator.CreateInstance(type.Assembly.GetType(\"SubTypeWithInheritance\")!);",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Activator.CreateInstance",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.ValidatableType.cs",
      "line": 731,
      "type": "dangerous_api",
      "pattern": "Activator.CreateInstance",
      "code": "var emptyList = Activator.CreateInstance(typeof(List<>).MakeGenericType(type.Assembly.GetType(\"SubType\")!));",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Activator.CreateInstance",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.ValidatableType.cs",
      "line": 158,
      "type": "dangerous_api",
      "pattern": "Assembly.GetType",
      "code": "var subType = Activator.CreateInstance(type.Assembly.GetType(\"SubType\")!);",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Assembly.GetType",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.ValidatableType.cs",
      "line": 186,
      "type": "dangerous_api",
      "pattern": "Assembly.GetType",
      "code": "var inheritanceType = Activator.CreateInstance(type.Assembly.GetType(\"SubTypeWithInheritance\")!);",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Assembly.GetType",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.ValidatableType.cs",
      "line": 220,
      "type": "dangerous_api",
      "pattern": "Assembly.GetType",
      "code": "var subTypeList = Activator.CreateInstance(typeof(List<>).MakeGenericType(type.Assembly.GetType(\"SubType\")!));",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Assembly.GetType",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.ValidatableType.cs",
      "line": 223,
      "type": "dangerous_api",
      "pattern": "Assembly.GetType",
      "code": "var subType1 = Activator.CreateInstance(type.Assembly.GetType(\"SubType\")!);",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Assembly.GetType",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.ValidatableType.cs",
      "line": 228,
      "type": "dangerous_api",
      "pattern": "Assembly.GetType",
      "code": "var subType2 = Activator.CreateInstance(type.Assembly.GetType(\"SubType\")!);",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Assembly.GetType",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.ValidatableType.cs",
      "line": 233,
      "type": "dangerous_api",
      "pattern": "Assembly.GetType",
      "code": "var subType3 = Activator.CreateInstance(type.Assembly.GetType(\"SubType\")!);",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Assembly.GetType",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.ValidatableType.cs",
      "line": 343,
      "type": "dangerous_api",
      "pattern": "Assembly.GetType",
      "code": "var subType1 = Activator.CreateInstance(type.Assembly.GetType(\"SubType\")!);",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Assembly.GetType",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.ValidatableType.cs",
      "line": 349,
      "type": "dangerous_api",
      "pattern": "Assembly.GetType",
      "code": "var subType2 = Activator.CreateInstance(type.Assembly.GetType(\"SubType\")!);",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Assembly.GetType",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.ValidatableType.cs",
      "line": 355,
      "type": "dangerous_api",
      "pattern": "Assembly.GetType",
      "code": "var inheritanceType = Activator.CreateInstance(type.Assembly.GetType(\"SubTypeWithInheritance\")!);",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Assembly.GetType",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.ValidatableType.cs",
      "line": 362,
      "type": "dangerous_api",
      "pattern": "Assembly.GetType",
      "code": "var emptyList = Activator.CreateInstance(typeof(List<>).MakeGenericType(type.Assembly.GetType(\"SubType\")!));",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Assembly.GetType",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.ValidatableType.cs",
      "line": 527,
      "type": "dangerous_api",
      "pattern": "Assembly.GetType",
      "code": "var subType = Activator.CreateInstance(type.Assembly.GetType(\"SubType\")!);",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Assembly.GetType",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.ValidatableType.cs",
      "line": 555,
      "type": "dangerous_api",
      "pattern": "Assembly.GetType",
      "code": "var inheritanceType = Activator.CreateInstance(type.Assembly.GetType(\"SubTypeWithInheritance\")!);",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Assembly.GetType",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.ValidatableType.cs",
      "line": 589,
      "type": "dangerous_api",
      "pattern": "Assembly.GetType",
      "code": "var subTypeList = Activator.CreateInstance(typeof(List<>).MakeGenericType(type.Assembly.GetType(\"SubType\")!));",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Assembly.GetType",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.ValidatableType.cs",
      "line": 592,
      "type": "dangerous_api",
      "pattern": "Assembly.GetType",
      "code": "var subType1 = Activator.CreateInstance(type.Assembly.GetType(\"SubType\")!);",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Assembly.GetType",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.ValidatableType.cs",
      "line": 597,
      "type": "dangerous_api",
      "pattern": "Assembly.GetType",
      "code": "var subType2 = Activator.CreateInstance(type.Assembly.GetType(\"SubType\")!);",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Assembly.GetType",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.ValidatableType.cs",
      "line": 602,
      "type": "dangerous_api",
      "pattern": "Assembly.GetType",
      "code": "var subType3 = Activator.CreateInstance(type.Assembly.GetType(\"SubType\")!);",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Assembly.GetType",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.ValidatableType.cs",
      "line": 712,
      "type": "dangerous_api",
      "pattern": "Assembly.GetType",
      "code": "var subType1 = Activator.CreateInstance(type.Assembly.GetType(\"SubType\")!);",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Assembly.GetType",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.ValidatableType.cs",
      "line": 718,
      "type": "dangerous_api",
      "pattern": "Assembly.GetType",
      "code": "var subType2 = Activator.CreateInstance(type.Assembly.GetType(\"SubType\")!);",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Assembly.GetType",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.ValidatableType.cs",
      "line": 724,
      "type": "dangerous_api",
      "pattern": "Assembly.GetType",
      "code": "var inheritanceType = Activator.CreateInstance(type.Assembly.GetType(\"SubTypeWithInheritance\")!);",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Assembly.GetType",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.ValidatableType.cs",
      "line": 731,
      "type": "dangerous_api",
      "pattern": "Assembly.GetType",
      "code": "var emptyList = Activator.CreateInstance(typeof(List<>).MakeGenericType(type.Assembly.GetType(\"SubType\")!));",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Assembly.GetType",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGeneratorTestBase.cs",
      "line": 543,
      "type": "dangerous_api",
      "pattern": "Type.GetType",
      "code": "var publicHostAbortedExceptionType = Type.GetType(\"Microsoft.Extensions.Hosting.HostAbortedException, Microsoft.Extensions.Hosting.Abstractions\", throwOnError: false);",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Type.GetType",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGeneratorTestBase.cs",
      "line": 546,
      "type": "dangerous_api",
      "pattern": "Activator.CreateInstance",
      "code": "throw (Exception)Activator.CreateInstance(publicHostAbortedExceptionType)!;",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Activator.CreateInstance",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGeneratorTestBase.cs",
      "line": 198,
      "type": "dangerous_api",
      "pattern": "Assembly.GetType",
      "code": "serviceType = targetAssembly.GetType(typeName, throwOnError: false);",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Assembly.GetType",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.ClassAttributes.cs",
      "line": 95,
      "type": "dangerous_api",
      "pattern": "Activator.CreateInstance",
      "code": "var instance = Activator.CreateInstance(type);",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Activator.CreateInstance",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.ClassAttributes.cs",
      "line": 115,
      "type": "dangerous_api",
      "pattern": "Activator.CreateInstance",
      "code": "var instance = Activator.CreateInstance(type);",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Activator.CreateInstance",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.ClassAttributes.cs",
      "line": 130,
      "type": "dangerous_api",
      "pattern": "Activator.CreateInstance",
      "code": "var instance = Activator.CreateInstance(type);",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Activator.CreateInstance",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/ValidationsGenerator.ClassAttributes.cs",
      "line": 150,
      "type": "dangerous_api",
      "pattern": "Activator.CreateInstance",
      "code": "var instance = Activator.CreateInstance(type);",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: Activator.CreateInstance",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanValidateComplexTypes#ValidatableInfoResolver.g.verified.cs",
      "line": 16,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanValidateComplexTypes#ValidatableInfoResolver.g.verified.cs",
      "line": 28,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanValidateComplexTypes#ValidatableInfoResolver.g.verified.cs",
      "line": 50,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanValidateComplexTypes#ValidatableInfoResolver.g.verified.cs",
      "line": 68,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanValidateComplexTypes#ValidatableInfoResolver.g.verified.cs",
      "line": 185,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanValidateComplexTypes#ValidatableInfoResolver.g.verified.cs",
      "line": 203,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanValidateTypeWithParsableProperties#ValidatableInfoResolver.g.verified.cs",
      "line": 16,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanValidateTypeWithParsableProperties#ValidatableInfoResolver.g.verified.cs",
      "line": 28,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanValidateTypeWithParsableProperties#ValidatableInfoResolver.g.verified.cs",
      "line": 50,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanValidateTypeWithParsableProperties#ValidatableInfoResolver.g.verified.cs",
      "line": 68,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanValidateTypeWithParsableProperties#ValidatableInfoResolver.g.verified.cs",
      "line": 149,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanValidateTypeWithParsableProperties#ValidatableInfoResolver.g.verified.cs",
      "line": 167,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanUseBothFrameworkAndGeneratedValidatableTypeAttributes#ValidatableInfoResolver.g.verified.cs",
      "line": 16,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanUseBothFrameworkAndGeneratedValidatableTypeAttributes#ValidatableInfoResolver.g.verified.cs",
      "line": 28,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanUseBothFrameworkAndGeneratedValidatableTypeAttributes#ValidatableInfoResolver.g.verified.cs",
      "line": 50,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanUseBothFrameworkAndGeneratedValidatableTypeAttributes#ValidatableInfoResolver.g.verified.cs",
      "line": 68,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanUseBothFrameworkAndGeneratedValidatableTypeAttributes#ValidatableInfoResolver.g.verified.cs",
      "line": 128,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanUseBothFrameworkAndGeneratedValidatableTypeAttributes#ValidatableInfoResolver.g.verified.cs",
      "line": 146,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanValidateParameters#ValidatableInfoResolver.g.verified.cs",
      "line": 16,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanValidateParameters#ValidatableInfoResolver.g.verified.cs",
      "line": 28,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanValidateParameters#ValidatableInfoResolver.g.verified.cs",
      "line": 50,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanValidateParameters#ValidatableInfoResolver.g.verified.cs",
      "line": 68,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanValidateParameters#ValidatableInfoResolver.g.verified.cs",
      "line": 116,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanValidateParameters#ValidatableInfoResolver.g.verified.cs",
      "line": 134,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.DoesNotEmit_ForSkipValidationAttribute_OnEndpointParameters#ValidatableInfoResolver.g.verified.cs",
      "line": 16,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.DoesNotEmit_ForSkipValidationAttribute_OnEndpointParameters#ValidatableInfoResolver.g.verified.cs",
      "line": 28,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.DoesNotEmit_ForSkipValidationAttribute_OnEndpointParameters#ValidatableInfoResolver.g.verified.cs",
      "line": 50,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.DoesNotEmit_ForSkipValidationAttribute_OnEndpointParameters#ValidatableInfoResolver.g.verified.cs",
      "line": 68,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.DoesNotEmit_ForSkipValidationAttribute_OnEndpointParameters#ValidatableInfoResolver.g.verified.cs",
      "line": 101,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.DoesNotEmit_ForSkipValidationAttribute_OnEndpointParameters#ValidatableInfoResolver.g.verified.cs",
      "line": 119,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.DoesNotEmit_ForSkipValidationAttribute_OnRecordProperties#ValidatableInfoResolver.g.verified.cs",
      "line": 16,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.DoesNotEmit_ForSkipValidationAttribute_OnRecordProperties#ValidatableInfoResolver.g.verified.cs",
      "line": 28,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.DoesNotEmit_ForSkipValidationAttribute_OnRecordProperties#ValidatableInfoResolver.g.verified.cs",
      "line": 50,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.DoesNotEmit_ForSkipValidationAttribute_OnRecordProperties#ValidatableInfoResolver.g.verified.cs",
      "line": 68,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.DoesNotEmit_ForSkipValidationAttribute_OnRecordProperties#ValidatableInfoResolver.g.verified.cs",
      "line": 116,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.DoesNotEmit_ForSkipValidationAttribute_OnRecordProperties#ValidatableInfoResolver.g.verified.cs",
      "line": 134,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanValidateRecordTypesWithAttribute#ValidatableInfoResolver.g.verified.cs",
      "line": 16,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanValidateRecordTypesWithAttribute#ValidatableInfoResolver.g.verified.cs",
      "line": 28,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanValidateRecordTypesWithAttribute#ValidatableInfoResolver.g.verified.cs",
      "line": 50,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanValidateRecordTypesWithAttribute#ValidatableInfoResolver.g.verified.cs",
      "line": 68,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanValidateRecordTypesWithAttribute#ValidatableInfoResolver.g.verified.cs",
      "line": 179,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanValidateRecordTypesWithAttribute#ValidatableInfoResolver.g.verified.cs",
      "line": 197,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.DoesNotEmit_ForSkipValidationAttribute_OnClassProperties#ValidatableInfoResolver.g.verified.cs",
      "line": 16,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.DoesNotEmit_ForSkipValidationAttribute_OnClassProperties#ValidatableInfoResolver.g.verified.cs",
      "line": 28,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.DoesNotEmit_ForSkipValidationAttribute_OnClassProperties#ValidatableInfoResolver.g.verified.cs",
      "line": 50,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.DoesNotEmit_ForSkipValidationAttribute_OnClassProperties#ValidatableInfoResolver.g.verified.cs",
      "line": 68,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.DoesNotEmit_ForSkipValidationAttribute_OnClassProperties#ValidatableInfoResolver.g.verified.cs",
      "line": 158,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.DoesNotEmit_ForSkipValidationAttribute_OnClassProperties#ValidatableInfoResolver.g.verified.cs",
      "line": 176,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanValidatePolymorphicTypes#ValidatableInfoResolver.g.verified.cs",
      "line": 16,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanValidatePolymorphicTypes#ValidatableInfoResolver.g.verified.cs",
      "line": 28,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanValidatePolymorphicTypes#ValidatableInfoResolver.g.verified.cs",
      "line": 50,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanValidatePolymorphicTypes#ValidatableInfoResolver.g.verified.cs",
      "line": 68,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanValidatePolymorphicTypes#ValidatableInfoResolver.g.verified.cs",
      "line": 166,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanValidatePolymorphicTypes#ValidatableInfoResolver.g.verified.cs",
      "line": 184,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanValidateIValidatableObject_WithoutPropertyValidations#ValidatableInfoResolver.g.verified.cs",
      "line": 16,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanValidateIValidatableObject_WithoutPropertyValidations#ValidatableInfoResolver.g.verified.cs",
      "line": 28,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanValidateIValidatableObject_WithoutPropertyValidations#ValidatableInfoResolver.g.verified.cs",
      "line": 50,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanValidateIValidatableObject_WithoutPropertyValidations#ValidatableInfoResolver.g.verified.cs",
      "line": 68,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanValidateIValidatableObject_WithoutPropertyValidations#ValidatableInfoResolver.g.verified.cs",
      "line": 125,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanValidateIValidatableObject_WithoutPropertyValidations#ValidatableInfoResolver.g.verified.cs",
      "line": 143,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanValidateMultipleNamespaces#ValidatableInfoResolver.g.verified.cs",
      "line": 16,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanValidateMultipleNamespaces#ValidatableInfoResolver.g.verified.cs",
      "line": 28,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanValidateMultipleNamespaces#ValidatableInfoResolver.g.verified.cs",
      "line": 50,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanValidateMultipleNamespaces#ValidatableInfoResolver.g.verified.cs",
      "line": 68,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanValidateMultipleNamespaces#ValidatableInfoResolver.g.verified.cs",
      "line": 116,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanValidateMultipleNamespaces#ValidatableInfoResolver.g.verified.cs",
      "line": 134,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanValidateIValidatableObject#ValidatableInfoResolver.g.verified.cs",
      "line": 16,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanValidateIValidatableObject#ValidatableInfoResolver.g.verified.cs",
      "line": 28,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanValidateIValidatableObject#ValidatableInfoResolver.g.verified.cs",
      "line": 50,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanValidateIValidatableObject#ValidatableInfoResolver.g.verified.cs",
      "line": 68,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanValidateIValidatableObject#ValidatableInfoResolver.g.verified.cs",
      "line": 136,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanValidateIValidatableObject#ValidatableInfoResolver.g.verified.cs",
      "line": 154,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanValidateValidationAttributesOnClasses#ValidatableInfoResolver.g.verified.cs",
      "line": 16,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanValidateValidationAttributesOnClasses#ValidatableInfoResolver.g.verified.cs",
      "line": 28,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanValidateValidationAttributesOnClasses#ValidatableInfoResolver.g.verified.cs",
      "line": 50,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanValidateValidationAttributesOnClasses#ValidatableInfoResolver.g.verified.cs",
      "line": 68,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanValidateValidationAttributesOnClasses#ValidatableInfoResolver.g.verified.cs",
      "line": 121,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanValidateValidationAttributesOnClasses#ValidatableInfoResolver.g.verified.cs",
      "line": 139,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanDiscoverGeneratedValidatableTypeAttribute#ValidatableInfoResolver.g.verified.cs",
      "line": 16,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanDiscoverGeneratedValidatableTypeAttribute#ValidatableInfoResolver.g.verified.cs",
      "line": 28,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanDiscoverGeneratedValidatableTypeAttribute#ValidatableInfoResolver.g.verified.cs",
      "line": 50,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanDiscoverGeneratedValidatableTypeAttribute#ValidatableInfoResolver.g.verified.cs",
      "line": 68,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanDiscoverGeneratedValidatableTypeAttribute#ValidatableInfoResolver.g.verified.cs",
      "line": 107,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanDiscoverGeneratedValidatableTypeAttribute#ValidatableInfoResolver.g.verified.cs",
      "line": 125,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanValidateClassTypesWithAttribute#ValidatableInfoResolver.g.verified.cs",
      "line": 16,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanValidateClassTypesWithAttribute#ValidatableInfoResolver.g.verified.cs",
      "line": 28,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanValidateClassTypesWithAttribute#ValidatableInfoResolver.g.verified.cs",
      "line": 50,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanValidateClassTypesWithAttribute#ValidatableInfoResolver.g.verified.cs",
      "line": 68,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanValidateClassTypesWithAttribute#ValidatableInfoResolver.g.verified.cs",
      "line": 179,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanValidateClassTypesWithAttribute#ValidatableInfoResolver.g.verified.cs",
      "line": 197,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanValidateComplexTypesWithJsonIgnore#ValidatableInfoResolver.g.verified.cs",
      "line": 16,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanValidateComplexTypesWithJsonIgnore#ValidatableInfoResolver.g.verified.cs",
      "line": 28,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanValidateComplexTypesWithJsonIgnore#ValidatableInfoResolver.g.verified.cs",
      "line": 50,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanValidateComplexTypesWithJsonIgnore#ValidatableInfoResolver.g.verified.cs",
      "line": 68,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanValidateComplexTypesWithJsonIgnore#ValidatableInfoResolver.g.verified.cs",
      "line": 116,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanValidateComplexTypesWithJsonIgnore#ValidatableInfoResolver.g.verified.cs",
      "line": 134,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.SkipsClassesWithNonAccessibleTypes#ValidatableInfoResolver.g.verified.cs",
      "line": 16,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.SkipsClassesWithNonAccessibleTypes#ValidatableInfoResolver.g.verified.cs",
      "line": 28,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.SkipsClassesWithNonAccessibleTypes#ValidatableInfoResolver.g.verified.cs",
      "line": 50,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.SkipsClassesWithNonAccessibleTypes#ValidatableInfoResolver.g.verified.cs",
      "line": 68,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.SkipsClassesWithNonAccessibleTypes#ValidatableInfoResolver.g.verified.cs",
      "line": 101,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.SkipsClassesWithNonAccessibleTypes#ValidatableInfoResolver.g.verified.cs",
      "line": 119,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanValidateRecursiveTypes#ValidatableInfoResolver.g.verified.cs",
      "line": 16,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanValidateRecursiveTypes#ValidatableInfoResolver.g.verified.cs",
      "line": 28,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanValidateRecursiveTypes#ValidatableInfoResolver.g.verified.cs",
      "line": 50,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanValidateRecursiveTypes#ValidatableInfoResolver.g.verified.cs",
      "line": 68,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanValidateRecursiveTypes#ValidatableInfoResolver.g.verified.cs",
      "line": 107,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanValidateRecursiveTypes#ValidatableInfoResolver.g.verified.cs",
      "line": 125,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanValidateRecordTypes#ValidatableInfoResolver.g.verified.cs",
      "line": 16,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanValidateRecordTypes#ValidatableInfoResolver.g.verified.cs",
      "line": 28,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanValidateRecordTypes#ValidatableInfoResolver.g.verified.cs",
      "line": 50,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanValidateRecordTypes#ValidatableInfoResolver.g.verified.cs",
      "line": 68,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanValidateRecordTypes#ValidatableInfoResolver.g.verified.cs",
      "line": 212,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.CanValidateRecordTypes#ValidatableInfoResolver.g.verified.cs",
      "line": 230,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.DoesNotEmitForExemptTypes#ValidatableInfoResolver.g.verified.cs",
      "line": 16,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.DoesNotEmitForExemptTypes#ValidatableInfoResolver.g.verified.cs",
      "line": 28,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.DoesNotEmitForExemptTypes#ValidatableInfoResolver.g.verified.cs",
      "line": 50,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.DoesNotEmitForExemptTypes#ValidatableInfoResolver.g.verified.cs",
      "line": 68,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.DoesNotEmitForExemptTypes#ValidatableInfoResolver.g.verified.cs",
      "line": 101,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/test/Microsoft.Extensions.Validation.GeneratorTests/snapshots/ValidationsGeneratorTests.DoesNotEmitForExemptTypes#ValidatableInfoResolver.g.verified.cs",
      "line": 119,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "[global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"Microsoft.Extensions.Validation.ValidationsGenerator, Version=42.42.42.42, Culture=neutral, PublicKeyToken=adb9793829ddae60\", \"42.42.42.42\")]",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Validation/gen/Emitters/ValidationsGenerator.Emitter.cs",
      "line": 15,
      "type": "dangerous_api",
      "pattern": "CodeDom.Compiler",
      "code": "public static string GeneratedCodeConstructor => $@\"global::System.CodeDom.Compiler.GeneratedCodeAttribute(\"\"{typeof(ValidationsGenerator).Assembly.FullName}\"\", \"\"{typeof(ValidationsGenerator).Assembly.GetName().Version}\"\")\";",
      "severity": "HIGH",
      "description": "Use of potentially dangerous API: CodeDom.Compiler",
      "recommendation": "Review usage and consider safer alternatives"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Middleware/WebSockets/samples/AutobahnTestAppAspNet4/Web.config",
      "line": 8,
      "type": "config_security",
      "pattern": "debug\\s*=\\s*[\"\\']true[\"\\']",
      "code": "debug=\"true\"",
      "severity": "MEDIUM",
      "description": "Security issue in web.config",
      "recommendation": "Review configuration security settings"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Middleware/WebSockets/samples/AutobahnTestAppAspNet4/Web.config",
      "line": 8,
      "type": "config_security",
      "pattern": "compilation.*debug\\s*=\\s*[\"\\']true[\"\\']",
      "code": "compilation debug=\"true\"",
      "severity": "MEDIUM",
      "description": "Security issue in web.config",
      "recommendation": "Review configuration security settings"
    },
    {
      "file": "/tmp/aspnetcore_analysis/eng/tools/HelixTestRunner/HelixTestRunner.csproj",
      "line": 0,
      "type": "unsafe_blocks_allowed",
      "pattern": "AllowUnsafeBlocks>true",
      "code": "<AllowUnsafeBlocks>true</AllowUnsafeBlocks>",
      "severity": "HIGH",
      "description": "Unsafe code blocks are allowed",
      "recommendation": "Disable unsafe blocks unless absolutely necessary"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Middleware/ResponseCaching/src/Microsoft.AspNetCore.ResponseCaching.csproj",
      "line": 0,
      "type": "unsafe_blocks_allowed",
      "pattern": "AllowUnsafeBlocks>true",
      "code": "<AllowUnsafeBlocks>true</AllowUnsafeBlocks>",
      "severity": "HIGH",
      "description": "Unsafe code blocks are allowed",
      "recommendation": "Disable unsafe blocks unless absolutely necessary"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Middleware/WebSockets/src/Microsoft.AspNetCore.WebSockets.csproj",
      "line": 0,
      "type": "unsafe_blocks_allowed",
      "pattern": "AllowUnsafeBlocks>true",
      "code": "<AllowUnsafeBlocks>true</AllowUnsafeBlocks>",
      "severity": "HIGH",
      "description": "Unsafe code blocks are allowed",
      "recommendation": "Disable unsafe blocks unless absolutely necessary"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Middleware/HttpLogging/src/Microsoft.AspNetCore.HttpLogging.csproj",
      "line": 0,
      "type": "unsafe_blocks_allowed",
      "pattern": "AllowUnsafeBlocks>true",
      "code": "<AllowUnsafeBlocks>true</AllowUnsafeBlocks>",
      "severity": "HIGH",
      "description": "Unsafe code blocks are allowed",
      "recommendation": "Disable unsafe blocks unless absolutely necessary"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Middleware/Session/src/Microsoft.AspNetCore.Session.csproj",
      "line": 0,
      "type": "unsafe_blocks_allowed",
      "pattern": "AllowUnsafeBlocks>true",
      "code": "<AllowUnsafeBlocks>true</AllowUnsafeBlocks>",
      "severity": "HIGH",
      "description": "Unsafe code blocks are allowed",
      "recommendation": "Disable unsafe blocks unless absolutely necessary"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Razor/Razor/src/Microsoft.AspNetCore.Razor.csproj",
      "line": 0,
      "type": "unsafe_blocks_allowed",
      "pattern": "AllowUnsafeBlocks>true",
      "code": "<AllowUnsafeBlocks>true</AllowUnsafeBlocks>",
      "severity": "HIGH",
      "description": "Unsafe code blocks are allowed",
      "recommendation": "Disable unsafe blocks unless absolutely necessary"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/ObjectPool/perf/Microbenchmarks/Microsoft.Extensions.ObjectPool.Microbenchmark.csproj",
      "line": 0,
      "type": "unsafe_blocks_allowed",
      "pattern": "AllowUnsafeBlocks>true",
      "code": "<AllowUnsafeBlocks>true</AllowUnsafeBlocks>",
      "severity": "HIGH",
      "description": "Unsafe code blocks are allowed",
      "recommendation": "Disable unsafe blocks unless absolutely necessary"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/test/WebSites/TagHelpersWebSite/TagHelpersWebSite.csproj",
      "line": 0,
      "type": "unsafe_blocks_allowed",
      "pattern": "AllowUnsafeBlocks>true",
      "code": "<AllowUnsafeBlocks>true</AllowUnsafeBlocks>",
      "severity": "HIGH",
      "description": "Unsafe code blocks are allowed",
      "recommendation": "Disable unsafe blocks unless absolutely necessary"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/Mvc.ViewFeatures/src/Microsoft.AspNetCore.Mvc.ViewFeatures.csproj",
      "line": 0,
      "type": "unsafe_blocks_allowed",
      "pattern": "AllowUnsafeBlocks>true",
      "code": "<AllowUnsafeBlocks>true</AllowUnsafeBlocks>",
      "severity": "HIGH",
      "description": "Unsafe code blocks are allowed",
      "recommendation": "Disable unsafe blocks unless absolutely necessary"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Mvc/perf/Microbenchmarks/Microsoft.AspNetCore.Mvc/Microsoft.AspNetCore.Mvc.Microbenchmarks.csproj",
      "line": 0,
      "type": "unsafe_blocks_allowed",
      "pattern": "AllowUnsafeBlocks>true",
      "code": "<AllowUnsafeBlocks>true</AllowUnsafeBlocks>",
      "severity": "HIGH",
      "description": "Unsafe code blocks are allowed",
      "recommendation": "Disable unsafe blocks unless absolutely necessary"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Grpc/JsonTranscoding/perf/Microsoft.AspNetCore.Grpc.Microbenchmarks/Microsoft.AspNetCore.Grpc.Microbenchmarks.csproj",
      "line": 0,
      "type": "unsafe_blocks_allowed",
      "pattern": "AllowUnsafeBlocks>true",
      "code": "<AllowUnsafeBlocks>true</AllowUnsafeBlocks>",
      "severity": "HIGH",
      "description": "Unsafe code blocks are allowed",
      "recommendation": "Disable unsafe blocks unless absolutely necessary"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Security/perf/Microbenchmarks/Microsoft.AspNetCore.Security.Microbenchmarks.csproj",
      "line": 0,
      "type": "unsafe_blocks_allowed",
      "pattern": "AllowUnsafeBlocks>true",
      "code": "<AllowUnsafeBlocks>true</AllowUnsafeBlocks>",
      "severity": "HIGH",
      "description": "Unsafe code blocks are allowed",
      "recommendation": "Disable unsafe blocks unless absolutely necessary"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Azure/AzureAppServicesIntegration/src/Microsoft.AspNetCore.AzureAppServicesIntegration.csproj",
      "line": 0,
      "type": "unsafe_blocks_allowed",
      "pattern": "AllowUnsafeBlocks>true",
      "code": "<AllowUnsafeBlocks>true</AllowUnsafeBlocks>",
      "severity": "HIGH",
      "description": "Unsafe code blocks are allowed",
      "recommendation": "Disable unsafe blocks unless absolutely necessary"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/SignalR/common/Protocols.Json/src/Microsoft.AspNetCore.SignalR.Protocols.Json.csproj",
      "line": 0,
      "type": "unsafe_blocks_allowed",
      "pattern": "AllowUnsafeBlocks>true",
      "code": "<AllowUnsafeBlocks>true</AllowUnsafeBlocks>",
      "severity": "HIGH",
      "description": "Unsafe code blocks are allowed",
      "recommendation": "Disable unsafe blocks unless absolutely necessary"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/SignalR/common/Http.Connections.Common/src/Microsoft.AspNetCore.Http.Connections.Common.csproj",
      "line": 0,
      "type": "unsafe_blocks_allowed",
      "pattern": "AllowUnsafeBlocks>true",
      "code": "<AllowUnsafeBlocks>true</AllowUnsafeBlocks>",
      "severity": "HIGH",
      "description": "Unsafe code blocks are allowed",
      "recommendation": "Disable unsafe blocks unless absolutely necessary"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/SignalR/common/Protocols.MessagePack/src/Microsoft.AspNetCore.SignalR.Protocols.MessagePack.csproj",
      "line": 0,
      "type": "unsafe_blocks_allowed",
      "pattern": "AllowUnsafeBlocks>true",
      "code": "<AllowUnsafeBlocks>true</AllowUnsafeBlocks>",
      "severity": "HIGH",
      "description": "Unsafe code blocks are allowed",
      "recommendation": "Disable unsafe blocks unless absolutely necessary"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/SignalR/common/SignalR.Common/src/Microsoft.AspNetCore.SignalR.Common.csproj",
      "line": 0,
      "type": "unsafe_blocks_allowed",
      "pattern": "AllowUnsafeBlocks>true",
      "code": "<AllowUnsafeBlocks>true</AllowUnsafeBlocks>",
      "severity": "HIGH",
      "description": "Unsafe code blocks are allowed",
      "recommendation": "Disable unsafe blocks unless absolutely necessary"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/SignalR/common/Http.Connections/src/Microsoft.AspNetCore.Http.Connections.csproj",
      "line": 0,
      "type": "unsafe_blocks_allowed",
      "pattern": "AllowUnsafeBlocks>true",
      "code": "<AllowUnsafeBlocks>true</AllowUnsafeBlocks>",
      "severity": "HIGH",
      "description": "Unsafe code blocks are allowed",
      "recommendation": "Disable unsafe blocks unless absolutely necessary"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/SignalR/common/Protocols.NewtonsoftJson/src/Microsoft.AspNetCore.SignalR.Protocols.NewtonsoftJson.csproj",
      "line": 0,
      "type": "unsafe_blocks_allowed",
      "pattern": "AllowUnsafeBlocks>true",
      "code": "<AllowUnsafeBlocks>true</AllowUnsafeBlocks>",
      "severity": "HIGH",
      "description": "Unsafe code blocks are allowed",
      "recommendation": "Disable unsafe blocks unless absolutely necessary"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/JSInterop/Microsoft.JSInterop/src/Microsoft.JSInterop.csproj",
      "line": 0,
      "type": "unsafe_blocks_allowed",
      "pattern": "AllowUnsafeBlocks>true",
      "code": "<AllowUnsafeBlocks>true</AllowUnsafeBlocks>",
      "severity": "HIGH",
      "description": "Unsafe code blocks are allowed",
      "recommendation": "Disable unsafe blocks unless absolutely necessary"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Shared/test/Shared.Tests/Microsoft.AspNetCore.Shared.Tests.csproj",
      "line": 0,
      "type": "unsafe_blocks_allowed",
      "pattern": "AllowUnsafeBlocks>true",
      "code": "<AllowUnsafeBlocks>true</AllowUnsafeBlocks>",
      "severity": "HIGH",
      "description": "Unsafe code blocks are allowed",
      "recommendation": "Disable unsafe blocks unless absolutely necessary"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/OpenApi/src/Microsoft.AspNetCore.OpenApi.csproj",
      "line": 0,
      "type": "unsafe_blocks_allowed",
      "pattern": "AllowUnsafeBlocks>true",
      "code": "<AllowUnsafeBlocks>true</AllowUnsafeBlocks>",
      "severity": "HIGH",
      "description": "Unsafe code blocks are allowed",
      "recommendation": "Disable unsafe blocks unless absolutely necessary"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Components/Endpoints/src/Microsoft.AspNetCore.Components.Endpoints.csproj",
      "line": 0,
      "type": "unsafe_blocks_allowed",
      "pattern": "AllowUnsafeBlocks>true",
      "code": "<AllowUnsafeBlocks>true</AllowUnsafeBlocks>",
      "severity": "HIGH",
      "description": "Unsafe code blocks are allowed",
      "recommendation": "Disable unsafe blocks unless absolutely necessary"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Components/test/testassets/Components.WasmMinimal/Components.WasmMinimal.csproj",
      "line": 0,
      "type": "unsafe_blocks_allowed",
      "pattern": "AllowUnsafeBlocks>true",
      "code": "<AllowUnsafeBlocks>true</AllowUnsafeBlocks>",
      "severity": "HIGH",
      "description": "Unsafe code blocks are allowed",
      "recommendation": "Disable unsafe blocks unless absolutely necessary"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Components/Server/src/Microsoft.AspNetCore.Components.Server.csproj",
      "line": 0,
      "type": "unsafe_blocks_allowed",
      "pattern": "AllowUnsafeBlocks>true",
      "code": "<AllowUnsafeBlocks>true</AllowUnsafeBlocks>",
      "severity": "HIGH",
      "description": "Unsafe code blocks are allowed",
      "recommendation": "Disable unsafe blocks unless absolutely necessary"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Components/Components/perf/Microsoft.AspNetCore.Components.Performance.csproj",
      "line": 0,
      "type": "unsafe_blocks_allowed",
      "pattern": "AllowUnsafeBlocks>true",
      "code": "<AllowUnsafeBlocks>true</AllowUnsafeBlocks>",
      "severity": "HIGH",
      "description": "Unsafe code blocks are allowed",
      "recommendation": "Disable unsafe blocks unless absolutely necessary"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Components/Components/src/Microsoft.AspNetCore.Components.csproj",
      "line": 0,
      "type": "unsafe_blocks_allowed",
      "pattern": "AllowUnsafeBlocks>true",
      "code": "<AllowUnsafeBlocks>true</AllowUnsafeBlocks>",
      "severity": "HIGH",
      "description": "Unsafe code blocks are allowed",
      "recommendation": "Disable unsafe blocks unless absolutely necessary"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Components/WebAssembly/JSInterop/src/Microsoft.JSInterop.WebAssembly.csproj",
      "line": 0,
      "type": "unsafe_blocks_allowed",
      "pattern": "AllowUnsafeBlocks>true",
      "code": "<AllowUnsafeBlocks>true</AllowUnsafeBlocks>",
      "severity": "HIGH",
      "description": "Unsafe code blocks are allowed",
      "recommendation": "Disable unsafe blocks unless absolutely necessary"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Components/WebAssembly/WebAssembly/src/Microsoft.AspNetCore.Components.WebAssembly.csproj",
      "line": 0,
      "type": "unsafe_blocks_allowed",
      "pattern": "AllowUnsafeBlocks>true",
      "code": "<AllowUnsafeBlocks>true</AllowUnsafeBlocks>",
      "severity": "HIGH",
      "description": "Unsafe code blocks are allowed",
      "recommendation": "Disable unsafe blocks unless absolutely necessary"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Components/WebAssembly/WebAssembly.Authentication/src/Microsoft.AspNetCore.Components.WebAssembly.Authentication.csproj",
      "line": 0,
      "type": "unsafe_blocks_allowed",
      "pattern": "AllowUnsafeBlocks>true",
      "code": "<AllowUnsafeBlocks>true</AllowUnsafeBlocks>",
      "severity": "HIGH",
      "description": "Unsafe code blocks are allowed",
      "recommendation": "Disable unsafe blocks unless absolutely necessary"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/DataProtection/Cryptography.Internal/test/Microsoft.AspNetCore.Cryptography.Internal.Tests.csproj",
      "line": 0,
      "type": "unsafe_blocks_allowed",
      "pattern": "AllowUnsafeBlocks>true",
      "code": "<AllowUnsafeBlocks>true</AllowUnsafeBlocks>",
      "severity": "HIGH",
      "description": "Unsafe code blocks are allowed",
      "recommendation": "Disable unsafe blocks unless absolutely necessary"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/DataProtection/Cryptography.Internal/src/Microsoft.AspNetCore.Cryptography.Internal.csproj",
      "line": 0,
      "type": "unsafe_blocks_allowed",
      "pattern": "AllowUnsafeBlocks>true",
      "code": "<AllowUnsafeBlocks>true</AllowUnsafeBlocks>",
      "severity": "HIGH",
      "description": "Unsafe code blocks are allowed",
      "recommendation": "Disable unsafe blocks unless absolutely necessary"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/DataProtection/EntityFrameworkCore/src/Microsoft.AspNetCore.DataProtection.EntityFrameworkCore.csproj",
      "line": 0,
      "type": "unsafe_blocks_allowed",
      "pattern": "AllowUnsafeBlocks>true",
      "code": "<AllowUnsafeBlocks>true</AllowUnsafeBlocks>",
      "severity": "HIGH",
      "description": "Unsafe code blocks are allowed",
      "recommendation": "Disable unsafe blocks unless absolutely necessary"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/DataProtection/Cryptography.KeyDerivation/test/Microsoft.AspNetCore.Cryptography.KeyDerivation.Tests.csproj",
      "line": 0,
      "type": "unsafe_blocks_allowed",
      "pattern": "AllowUnsafeBlocks>true",
      "code": "<AllowUnsafeBlocks>true</AllowUnsafeBlocks>",
      "severity": "HIGH",
      "description": "Unsafe code blocks are allowed",
      "recommendation": "Disable unsafe blocks unless absolutely necessary"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/DataProtection/Cryptography.KeyDerivation/src/Microsoft.AspNetCore.Cryptography.KeyDerivation.csproj",
      "line": 0,
      "type": "unsafe_blocks_allowed",
      "pattern": "AllowUnsafeBlocks>true",
      "code": "<AllowUnsafeBlocks>true</AllowUnsafeBlocks>",
      "severity": "HIGH",
      "description": "Unsafe code blocks are allowed",
      "recommendation": "Disable unsafe blocks unless absolutely necessary"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/test/Microsoft.AspNetCore.DataProtection.Tests/Microsoft.AspNetCore.DataProtection.Tests.csproj",
      "line": 0,
      "type": "unsafe_blocks_allowed",
      "pattern": "AllowUnsafeBlocks>true",
      "code": "<AllowUnsafeBlocks>true</AllowUnsafeBlocks>",
      "severity": "HIGH",
      "description": "Unsafe code blocks are allowed",
      "recommendation": "Disable unsafe blocks unless absolutely necessary"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/DataProtection/DataProtection/src/Microsoft.AspNetCore.DataProtection.csproj",
      "line": 0,
      "type": "unsafe_blocks_allowed",
      "pattern": "AllowUnsafeBlocks>true",
      "code": "<AllowUnsafeBlocks>true</AllowUnsafeBlocks>",
      "severity": "HIGH",
      "description": "Unsafe code blocks are allowed",
      "recommendation": "Disable unsafe blocks unless absolutely necessary"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/DataProtection/StackExchangeRedis/src/Microsoft.AspNetCore.DataProtection.StackExchangeRedis.csproj",
      "line": 0,
      "type": "unsafe_blocks_allowed",
      "pattern": "AllowUnsafeBlocks>true",
      "code": "<AllowUnsafeBlocks>true</AllowUnsafeBlocks>",
      "severity": "HIGH",
      "description": "Unsafe code blocks are allowed",
      "recommendation": "Disable unsafe blocks unless absolutely necessary"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/DataProtection/Abstractions/src/Microsoft.AspNetCore.DataProtection.Abstractions.csproj",
      "line": 0,
      "type": "unsafe_blocks_allowed",
      "pattern": "AllowUnsafeBlocks>true",
      "code": "<AllowUnsafeBlocks>true</AllowUnsafeBlocks>",
      "severity": "HIGH",
      "description": "Unsafe code blocks are allowed",
      "recommendation": "Disable unsafe blocks unless absolutely necessary"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Http/Headers/src/Microsoft.Net.Http.Headers.csproj",
      "line": 0,
      "type": "unsafe_blocks_allowed",
      "pattern": "AllowUnsafeBlocks>true",
      "code": "<AllowUnsafeBlocks>true</AllowUnsafeBlocks>",
      "severity": "HIGH",
      "description": "Unsafe code blocks are allowed",
      "recommendation": "Disable unsafe blocks unless absolutely necessary"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Http/Http/test/Microsoft.AspNetCore.Http.Tests.csproj",
      "line": 0,
      "type": "unsafe_blocks_allowed",
      "pattern": "AllowUnsafeBlocks>true",
      "code": "<AllowUnsafeBlocks>true</AllowUnsafeBlocks>",
      "severity": "HIGH",
      "description": "Unsafe code blocks are allowed",
      "recommendation": "Disable unsafe blocks unless absolutely necessary"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Http/Http/perf/Microbenchmarks/Microsoft.AspNetCore.Http.Microbenchmarks.csproj",
      "line": 0,
      "type": "unsafe_blocks_allowed",
      "pattern": "AllowUnsafeBlocks>true",
      "code": "<AllowUnsafeBlocks>true</AllowUnsafeBlocks>",
      "severity": "HIGH",
      "description": "Unsafe code blocks are allowed",
      "recommendation": "Disable unsafe blocks unless absolutely necessary"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Http/Http/src/Microsoft.AspNetCore.Http.csproj",
      "line": 0,
      "type": "unsafe_blocks_allowed",
      "pattern": "AllowUnsafeBlocks>true",
      "code": "<AllowUnsafeBlocks>true</AllowUnsafeBlocks>",
      "severity": "HIGH",
      "description": "Unsafe code blocks are allowed",
      "recommendation": "Disable unsafe blocks unless absolutely necessary"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Http/WebUtilities/perf/Microbenchmarks/Microsoft.AspNetCore.WebUtilities.Microbenchmarks.csproj",
      "line": 0,
      "type": "unsafe_blocks_allowed",
      "pattern": "AllowUnsafeBlocks>true",
      "code": "<AllowUnsafeBlocks>true</AllowUnsafeBlocks>",
      "severity": "HIGH",
      "description": "Unsafe code blocks are allowed",
      "recommendation": "Disable unsafe blocks unless absolutely necessary"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Http/WebUtilities/src/Microsoft.AspNetCore.WebUtilities.csproj",
      "line": 0,
      "type": "unsafe_blocks_allowed",
      "pattern": "AllowUnsafeBlocks>true",
      "code": "<AllowUnsafeBlocks>true</AllowUnsafeBlocks>",
      "severity": "HIGH",
      "description": "Unsafe code blocks are allowed",
      "recommendation": "Disable unsafe blocks unless absolutely necessary"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Http/Routing/test/UnitTests/Microsoft.AspNetCore.Routing.Tests.csproj",
      "line": 0,
      "type": "unsafe_blocks_allowed",
      "pattern": "AllowUnsafeBlocks>true",
      "code": "<AllowUnsafeBlocks>true</AllowUnsafeBlocks>",
      "severity": "HIGH",
      "description": "Unsafe code blocks are allowed",
      "recommendation": "Disable unsafe blocks unless absolutely necessary"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Http/Routing/perf/Microbenchmarks/Microsoft.AspNetCore.Routing.Microbenchmarks.csproj",
      "line": 0,
      "type": "unsafe_blocks_allowed",
      "pattern": "AllowUnsafeBlocks>true",
      "code": "<AllowUnsafeBlocks>true</AllowUnsafeBlocks>",
      "severity": "HIGH",
      "description": "Unsafe code blocks are allowed",
      "recommendation": "Disable unsafe blocks unless absolutely necessary"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Http/Routing/src/Microsoft.AspNetCore.Routing.csproj",
      "line": 0,
      "type": "unsafe_blocks_allowed",
      "pattern": "AllowUnsafeBlocks>true",
      "code": "<AllowUnsafeBlocks>true</AllowUnsafeBlocks>",
      "severity": "HIGH",
      "description": "Unsafe code blocks are allowed",
      "recommendation": "Disable unsafe blocks unless absolutely necessary"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Http/Http.Extensions/src/Microsoft.AspNetCore.Http.Extensions.csproj",
      "line": 0,
      "type": "unsafe_blocks_allowed",
      "pattern": "AllowUnsafeBlocks>true",
      "code": "<AllowUnsafeBlocks>true</AllowUnsafeBlocks>",
      "severity": "HIGH",
      "description": "Unsafe code blocks are allowed",
      "recommendation": "Disable unsafe blocks unless absolutely necessary"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Caching/perf/MicroBenchmarks/Microsoft.Extensions.Caching.MicroBenchmarks/Microsoft.Extensions.Caching.MicroBenchmarks.csproj",
      "line": 0,
      "type": "unsafe_blocks_allowed",
      "pattern": "AllowUnsafeBlocks>true",
      "code": "<AllowUnsafeBlocks>true</AllowUnsafeBlocks>",
      "severity": "HIGH",
      "description": "Unsafe code blocks are allowed",
      "recommendation": "Disable unsafe blocks unless absolutely necessary"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/test/FunctionalTests/Microsoft.AspNetCore.Server.HttpSys.FunctionalTests.csproj",
      "line": 0,
      "type": "unsafe_blocks_allowed",
      "pattern": "AllowUnsafeBlocks>true",
      "code": "<AllowUnsafeBlocks>true</AllowUnsafeBlocks>",
      "severity": "HIGH",
      "description": "Unsafe code blocks are allowed",
      "recommendation": "Disable unsafe blocks unless absolutely necessary"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/test/Tests/Microsoft.AspNetCore.Server.HttpSys.Tests.csproj",
      "line": 0,
      "type": "unsafe_blocks_allowed",
      "pattern": "AllowUnsafeBlocks>true",
      "code": "<AllowUnsafeBlocks>true</AllowUnsafeBlocks>",
      "severity": "HIGH",
      "description": "Unsafe code blocks are allowed",
      "recommendation": "Disable unsafe blocks unless absolutely necessary"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/test/NonHelixTests/Microsoft.AspNetCore.Server.HttpSys.NonHelixTests.csproj",
      "line": 0,
      "type": "unsafe_blocks_allowed",
      "pattern": "AllowUnsafeBlocks>true",
      "code": "<AllowUnsafeBlocks>true</AllowUnsafeBlocks>",
      "severity": "HIGH",
      "description": "Unsafe code blocks are allowed",
      "recommendation": "Disable unsafe blocks unless absolutely necessary"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/perf/Microbenchmarks/Microsoft.AspNetCore.Server.HttpSys.Microbenchmarks.csproj",
      "line": 0,
      "type": "unsafe_blocks_allowed",
      "pattern": "AllowUnsafeBlocks>true",
      "code": "<AllowUnsafeBlocks>true</AllowUnsafeBlocks>",
      "severity": "HIGH",
      "description": "Unsafe code blocks are allowed",
      "recommendation": "Disable unsafe blocks unless absolutely necessary"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/HttpSys/src/Microsoft.AspNetCore.Server.HttpSys.csproj",
      "line": 0,
      "type": "unsafe_blocks_allowed",
      "pattern": "AllowUnsafeBlocks>true",
      "code": "<AllowUnsafeBlocks>true</AllowUnsafeBlocks>",
      "severity": "HIGH",
      "description": "Unsafe code blocks are allowed",
      "recommendation": "Disable unsafe blocks unless absolutely necessary"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/Kestrel/tools/CodeGenerator/CodeGenerator.csproj",
      "line": 0,
      "type": "unsafe_blocks_allowed",
      "pattern": "AllowUnsafeBlocks>true",
      "code": "<AllowUnsafeBlocks>true</AllowUnsafeBlocks>",
      "severity": "HIGH",
      "description": "Unsafe code blocks are allowed",
      "recommendation": "Disable unsafe blocks unless absolutely necessary"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/Kestrel/Core/test/Microsoft.AspNetCore.Server.Kestrel.Core.Tests.csproj",
      "line": 0,
      "type": "unsafe_blocks_allowed",
      "pattern": "AllowUnsafeBlocks>true",
      "code": "<AllowUnsafeBlocks>true</AllowUnsafeBlocks>",
      "severity": "HIGH",
      "description": "Unsafe code blocks are allowed",
      "recommendation": "Disable unsafe blocks unless absolutely necessary"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/Kestrel/Core/src/Microsoft.AspNetCore.Server.Kestrel.Core.csproj",
      "line": 0,
      "type": "unsafe_blocks_allowed",
      "pattern": "AllowUnsafeBlocks>true",
      "code": "<AllowUnsafeBlocks>true</AllowUnsafeBlocks>",
      "severity": "HIGH",
      "description": "Unsafe code blocks are allowed",
      "recommendation": "Disable unsafe blocks unless absolutely necessary"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/Kestrel/test/InMemory.FunctionalTests/InMemory.FunctionalTests.csproj",
      "line": 0,
      "type": "unsafe_blocks_allowed",
      "pattern": "AllowUnsafeBlocks>true",
      "code": "<AllowUnsafeBlocks>true</AllowUnsafeBlocks>",
      "severity": "HIGH",
      "description": "Unsafe code blocks are allowed",
      "recommendation": "Disable unsafe blocks unless absolutely necessary"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/Kestrel/test/Interop.FunctionalTests/Interop.FunctionalTests.csproj",
      "line": 0,
      "type": "unsafe_blocks_allowed",
      "pattern": "AllowUnsafeBlocks>true",
      "code": "<AllowUnsafeBlocks>true</AllowUnsafeBlocks>",
      "severity": "HIGH",
      "description": "Unsafe code blocks are allowed",
      "recommendation": "Disable unsafe blocks unless absolutely necessary"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/Kestrel/Transport.Sockets/src/Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.csproj",
      "line": 0,
      "type": "unsafe_blocks_allowed",
      "pattern": "AllowUnsafeBlocks>true",
      "code": "<AllowUnsafeBlocks>true</AllowUnsafeBlocks>",
      "severity": "HIGH",
      "description": "Unsafe code blocks are allowed",
      "recommendation": "Disable unsafe blocks unless absolutely necessary"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/Kestrel/Transport.NamedPipes/test/Microsoft.AspNetCore.Server.Kestrel.Transport.NamedPipes.Tests.csproj",
      "line": 0,
      "type": "unsafe_blocks_allowed",
      "pattern": "AllowUnsafeBlocks>true",
      "code": "<AllowUnsafeBlocks>true</AllowUnsafeBlocks>",
      "severity": "HIGH",
      "description": "Unsafe code blocks are allowed",
      "recommendation": "Disable unsafe blocks unless absolutely necessary"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/Kestrel/Transport.NamedPipes/src/Microsoft.AspNetCore.Server.Kestrel.Transport.NamedPipes.csproj",
      "line": 0,
      "type": "unsafe_blocks_allowed",
      "pattern": "AllowUnsafeBlocks>true",
      "code": "<AllowUnsafeBlocks>true</AllowUnsafeBlocks>",
      "severity": "HIGH",
      "description": "Unsafe code blocks are allowed",
      "recommendation": "Disable unsafe blocks unless absolutely necessary"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/Kestrel/samples/http2cat/http2cat.csproj",
      "line": 0,
      "type": "unsafe_blocks_allowed",
      "pattern": "AllowUnsafeBlocks>true",
      "code": "<AllowUnsafeBlocks>true</AllowUnsafeBlocks>",
      "severity": "HIGH",
      "description": "Unsafe code blocks are allowed",
      "recommendation": "Disable unsafe blocks unless absolutely necessary"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/Kestrel/perf/Microbenchmarks/Microsoft.AspNetCore.Server.Kestrel.Microbenchmarks.csproj",
      "line": 0,
      "type": "unsafe_blocks_allowed",
      "pattern": "AllowUnsafeBlocks>true",
      "code": "<AllowUnsafeBlocks>true</AllowUnsafeBlocks>",
      "severity": "HIGH",
      "description": "Unsafe code blocks are allowed",
      "recommendation": "Disable unsafe blocks unless absolutely necessary"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/Kestrel/Transport.Quic/test/Microsoft.AspNetCore.Server.Kestrel.Transport.Quic.Tests.csproj",
      "line": 0,
      "type": "unsafe_blocks_allowed",
      "pattern": "AllowUnsafeBlocks>true",
      "code": "<AllowUnsafeBlocks>true</AllowUnsafeBlocks>",
      "severity": "HIGH",
      "description": "Unsafe code blocks are allowed",
      "recommendation": "Disable unsafe blocks unless absolutely necessary"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/Kestrel/Transport.Quic/src/Microsoft.AspNetCore.Server.Kestrel.Transport.Quic.csproj",
      "line": 0,
      "type": "unsafe_blocks_allowed",
      "pattern": "AllowUnsafeBlocks>true",
      "code": "<AllowUnsafeBlocks>true</AllowUnsafeBlocks>",
      "severity": "HIGH",
      "description": "Unsafe code blocks are allowed",
      "recommendation": "Disable unsafe blocks unless absolutely necessary"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/IIS/IISIntegration/src/Microsoft.AspNetCore.Server.IISIntegration.csproj",
      "line": 0,
      "type": "unsafe_blocks_allowed",
      "pattern": "AllowUnsafeBlocks>true",
      "code": "<AllowUnsafeBlocks>true</AllowUnsafeBlocks>",
      "severity": "HIGH",
      "description": "Unsafe code blocks are allowed",
      "recommendation": "Disable unsafe blocks unless absolutely necessary"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/IIS/IntegrationTesting.IIS/src/Microsoft.AspNetCore.Server.IntegrationTesting.IIS.csproj",
      "line": 0,
      "type": "unsafe_blocks_allowed",
      "pattern": "AllowUnsafeBlocks>true",
      "code": "<AllowUnsafeBlocks>true</AllowUnsafeBlocks>",
      "severity": "HIGH",
      "description": "Unsafe code blocks are allowed",
      "recommendation": "Disable unsafe blocks unless absolutely necessary"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/IIS/IIS/test/IIS.FunctionalTests/IIS.FunctionalTests.csproj",
      "line": 0,
      "type": "unsafe_blocks_allowed",
      "pattern": "AllowUnsafeBlocks>true",
      "code": "<AllowUnsafeBlocks>true</AllowUnsafeBlocks>",
      "severity": "HIGH",
      "description": "Unsafe code blocks are allowed",
      "recommendation": "Disable unsafe blocks unless absolutely necessary"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/IIS/IIS/test/IISExpress.FunctionalTests/IISExpress.FunctionalTests.csproj",
      "line": 0,
      "type": "unsafe_blocks_allowed",
      "pattern": "AllowUnsafeBlocks>true",
      "code": "<AllowUnsafeBlocks>true</AllowUnsafeBlocks>",
      "severity": "HIGH",
      "description": "Unsafe code blocks are allowed",
      "recommendation": "Disable unsafe blocks unless absolutely necessary"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/IIS/IIS/test/IIS.NewHandler.FunctionalTests/IIS.NewHandler.FunctionalTests.csproj",
      "line": 0,
      "type": "unsafe_blocks_allowed",
      "pattern": "AllowUnsafeBlocks>true",
      "code": "<AllowUnsafeBlocks>true</AllowUnsafeBlocks>",
      "severity": "HIGH",
      "description": "Unsafe code blocks are allowed",
      "recommendation": "Disable unsafe blocks unless absolutely necessary"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/IIS/IIS/test/IIS.LongTests/IIS.LongTests.csproj",
      "line": 0,
      "type": "unsafe_blocks_allowed",
      "pattern": "AllowUnsafeBlocks>true",
      "code": "<AllowUnsafeBlocks>true</AllowUnsafeBlocks>",
      "severity": "HIGH",
      "description": "Unsafe code blocks are allowed",
      "recommendation": "Disable unsafe blocks unless absolutely necessary"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/IIS/IIS/test/IIS.ShadowCopy.Tests/IIS.ShadowCopy.Tests.csproj",
      "line": 0,
      "type": "unsafe_blocks_allowed",
      "pattern": "AllowUnsafeBlocks>true",
      "code": "<AllowUnsafeBlocks>true</AllowUnsafeBlocks>",
      "severity": "HIGH",
      "description": "Unsafe code blocks are allowed",
      "recommendation": "Disable unsafe blocks unless absolutely necessary"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/IIS/IIS/test/testassets/InProcessWebSite/InProcessWebSite.csproj",
      "line": 0,
      "type": "unsafe_blocks_allowed",
      "pattern": "AllowUnsafeBlocks>true",
      "code": "<AllowUnsafeBlocks>true</AllowUnsafeBlocks>",
      "severity": "HIGH",
      "description": "Unsafe code blocks are allowed",
      "recommendation": "Disable unsafe blocks unless absolutely necessary"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/IIS/IIS/test/testassets/InProcessNewShimWebSite/InProcessNewShimWebSite.csproj",
      "line": 0,
      "type": "unsafe_blocks_allowed",
      "pattern": "AllowUnsafeBlocks>true",
      "code": "<AllowUnsafeBlocks>true</AllowUnsafeBlocks>",
      "severity": "HIGH",
      "description": "Unsafe code blocks are allowed",
      "recommendation": "Disable unsafe blocks unless absolutely necessary"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/IIS/IIS/test/IIS.Tests/IIS.Tests.csproj",
      "line": 0,
      "type": "unsafe_blocks_allowed",
      "pattern": "AllowUnsafeBlocks>true",
      "code": "<AllowUnsafeBlocks>true</AllowUnsafeBlocks>",
      "severity": "HIGH",
      "description": "Unsafe code blocks are allowed",
      "recommendation": "Disable unsafe blocks unless absolutely necessary"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/IIS/IIS/test/IIS.NewShim.FunctionalTests/IIS.NewShim.FunctionalTests.csproj",
      "line": 0,
      "type": "unsafe_blocks_allowed",
      "pattern": "AllowUnsafeBlocks>true",
      "code": "<AllowUnsafeBlocks>true</AllowUnsafeBlocks>",
      "severity": "HIGH",
      "description": "Unsafe code blocks are allowed",
      "recommendation": "Disable unsafe blocks unless absolutely necessary"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/IIS/IIS/perf/Microbenchmarks/IIS.Microbenchmarks.csproj",
      "line": 0,
      "type": "unsafe_blocks_allowed",
      "pattern": "AllowUnsafeBlocks>true",
      "code": "<AllowUnsafeBlocks>true</AllowUnsafeBlocks>",
      "severity": "HIGH",
      "description": "Unsafe code blocks are allowed",
      "recommendation": "Disable unsafe blocks unless absolutely necessary"
    },
    {
      "file": "/tmp/aspnetcore_analysis/src/Servers/IIS/IIS/src/Microsoft.AspNetCore.Server.IIS.csproj",
      "line": 0,
      "type": "unsafe_blocks_allowed",
      "pattern": "AllowUnsafeBlocks>true",
      "code": "<AllowUnsafeBlocks>true</AllowUnsafeBlocks>",
      "severity": "HIGH",
      "description": "Unsafe code blocks are allowed",
      "recommendation": "Disable unsafe blocks unless absolutely necessary"
    }
  ],
  "summary": {
    "critical_issues": 703,
    "high_issues": 801,
    "total_files_analyzed": 584,
    "most_common_vulnerability": "dangerous_api"
  }
}