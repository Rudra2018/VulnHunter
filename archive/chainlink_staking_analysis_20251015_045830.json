{
  "repository_url": "https://github.com/smartcontractkit/staking-v0.1",
  "analysis_timestamp": "2025-10-15T04:58:28.496440",
  "contracts_analyzed": 35,
  "total_vulnerabilities": 307,
  "vulnerability_breakdown": {
    "by_type": {
      "price_manipulation": 53,
      "integer_overflow": 98,
      "reentrancy": 32,
      "timestamp_dependency": 35,
      "gas_limit": 46,
      "missing_events": 14,
      "access_control": 29
    },
    "by_severity": {
      "CRITICAL": 85,
      "HIGH": 127,
      "MEDIUM": 95,
      "LOW": 0
    }
  },
  "static_analysis_results": [
    {
      "contract_file": "/tmp/test_staking_analysis/test/BaseTest.t.sol",
      "line_number": 8,
      "vulnerability_type": "price_manipulation",
      "severity": "CRITICAL",
      "description": "Price oracle manipulation risk",
      "code_snippet": "import '@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol';",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Use multiple price feeds and implement price deviation checks"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/BaseTest.t.sol",
      "line_number": 19,
      "vulnerability_type": "integer_overflow",
      "severity": "HIGH",
      "description": "Integer overflow/underflow risk",
      "code_snippet": "uint256 internal constant INITIAL_MAX_POOL_SIZE = MAX_POOL_SIZE * 1e18;",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": true,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Use SafeMath library or Solidity 0.8+ overflow protection"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/BaseTest.t.sol",
      "line_number": 28,
      "vulnerability_type": "integer_overflow",
      "severity": "HIGH",
      "description": "Integer overflow/underflow risk",
      "code_snippet": "uint256 internal constant ONE_MONTH = 30 * 24 * 60 * 60;",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": true,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Use SafeMath library or Solidity 0.8+ overflow protection"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/BaseTest.t.sol",
      "line_number": 29,
      "vulnerability_type": "integer_overflow",
      "severity": "HIGH",
      "description": "Integer overflow/underflow risk",
      "code_snippet": "uint256 internal constant REWARD_DURATION = ONE_MONTH * 6;",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": true,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Use SafeMath library or Solidity 0.8+ overflow protection"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/BaseTest.t.sol",
      "line_number": 58,
      "vulnerability_type": "price_manipulation",
      "severity": "CRITICAL",
      "description": "Price oracle manipulation risk",
      "code_snippet": "AggregatorV3Interface internal constant FEED =",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.9,
      "mitigation": "Use multiple price feeds and implement price deviation checks"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/BaseTest.t.sol",
      "line_number": 59,
      "vulnerability_type": "price_manipulation",
      "severity": "CRITICAL",
      "description": "Price oracle manipulation risk",
      "code_snippet": "AggregatorV3Interface(STRANGER);",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Use multiple price feeds and implement price deviation checks"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/gas/Gas_AfterStake_AsOperator.t.sol",
      "line_number": 16,
      "vulnerability_type": "reentrancy",
      "severity": "CRITICAL",
      "description": "Potential reentrancy vulnerability detected",
      "code_snippet": "s_link.transfer(OPERATOR, INITIAL_MAX_OPERATOR_STAKE);",
      "gas_cost_impact": null,
      "reentrancy_risk": true,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.9,
      "mitigation": "Use ReentrancyGuard or checks-effects-interactions pattern"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/gas/Gas_AfterStake_AsOperator.t.sol",
      "line_number": 71,
      "vulnerability_type": "price_manipulation",
      "severity": "CRITICAL",
      "description": "Price oracle manipulation risk",
      "code_snippet": "abi.encodeWithSelector(AggregatorV3Interface.latestRoundData.selector),",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Use multiple price feeds and implement price deviation checks"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/gas/Gas_AfterStake_AsOperator.t.sol",
      "line_number": 71,
      "vulnerability_type": "price_manipulation",
      "severity": "CRITICAL",
      "description": "Price oracle manipulation risk",
      "code_snippet": "abi.encodeWithSelector(AggregatorV3Interface.latestRoundData.selector),",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Use multiple price feeds and implement price deviation checks"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/gas/Gas_AfterStake_AsOperator.t.sol",
      "line_number": 76,
      "vulnerability_type": "timestamp_dependency",
      "severity": "MEDIUM",
      "description": "Timestamp dependency detected",
      "code_snippet": "uint128(block.timestamp),",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Use block.number or external oracle for timing"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/gas/Gas_AfterStake_AsOperator.t.sol",
      "line_number": 94,
      "vulnerability_type": "reentrancy",
      "severity": "CRITICAL",
      "description": "Potential reentrancy vulnerability detected",
      "code_snippet": "s_link.transfer(COMMUNITY_STAKER, INITIAL_MIN_COMMUNITY_STAKE);",
      "gas_cost_impact": null,
      "reentrancy_risk": true,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.9,
      "mitigation": "Use ReentrancyGuard or checks-effects-interactions pattern"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/gas/Gas_AfterStake_AsOperator.t.sol",
      "line_number": 109,
      "vulnerability_type": "integer_overflow",
      "severity": "HIGH",
      "description": "Integer overflow/underflow risk",
      "code_snippet": "for (uint256 i = 1; i < operators.length; i++) {",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": true,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Use SafeMath library or Solidity 0.8+ overflow protection"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/gas/Gas_AfterStake_AsOperator.t.sol",
      "line_number": 109,
      "vulnerability_type": "integer_overflow",
      "severity": "HIGH",
      "description": "Integer overflow/underflow risk",
      "code_snippet": "for (uint256 i = 1; i < operators.length; i++) {",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": true,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Use SafeMath library or Solidity 0.8+ overflow protection"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/gas/Gas_AfterStake_AsOperator.t.sol",
      "line_number": 109,
      "vulnerability_type": "gas_limit",
      "severity": "MEDIUM",
      "description": "Gas limit DoS vulnerability potential",
      "code_snippet": "for (uint256 i = 1; i < operators.length; i++) {",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Implement pagination or gas-efficient loops"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/gas/Gas_AfterStake_AsOperator.t.sol",
      "line_number": 109,
      "vulnerability_type": "gas_limit",
      "severity": "MEDIUM",
      "description": "Gas limit DoS vulnerability potential",
      "code_snippet": "for (uint256 i = 1; i < operators.length; i++) {",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Implement pagination or gas-efficient loops"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/gas/Gas_AfterStake_AsOperator.t.sol",
      "line_number": 112,
      "vulnerability_type": "reentrancy",
      "severity": "CRITICAL",
      "description": "Potential reentrancy vulnerability detected",
      "code_snippet": "s_link.transfer(operator, INITIAL_MAX_OPERATOR_STAKE);",
      "gas_cost_impact": null,
      "reentrancy_risk": true,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.9,
      "mitigation": "Use ReentrancyGuard or checks-effects-interactions pattern"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/gas/Gas_AfterStake_AsOperator.t.sol",
      "line_number": 123,
      "vulnerability_type": "integer_overflow",
      "severity": "HIGH",
      "description": "Integer overflow/underflow risk",
      "code_snippet": "uint256 timeFeedGoesDown = block.timestamp + 14 days;",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": true,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.9,
      "mitigation": "Use SafeMath library or Solidity 0.8+ overflow protection"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/gas/Gas_AfterStake_AsOperator.t.sol",
      "line_number": 123,
      "vulnerability_type": "timestamp_dependency",
      "severity": "MEDIUM",
      "description": "Timestamp dependency detected",
      "code_snippet": "uint256 timeFeedGoesDown = block.timestamp + 14 days;",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.9,
      "mitigation": "Use block.number or external oracle for timing"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/gas/Gas_AfterStake_AsOperator.t.sol",
      "line_number": 128,
      "vulnerability_type": "price_manipulation",
      "severity": "CRITICAL",
      "description": "Price oracle manipulation risk",
      "code_snippet": "abi.encodeWithSelector(AggregatorV3Interface.latestRoundData.selector),",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Use multiple price feeds and implement price deviation checks"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/gas/Gas_AfterStake_AsOperator.t.sol",
      "line_number": 128,
      "vulnerability_type": "price_manipulation",
      "severity": "CRITICAL",
      "description": "Price oracle manipulation risk",
      "code_snippet": "abi.encodeWithSelector(AggregatorV3Interface.latestRoundData.selector),",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Use multiple price feeds and implement price deviation checks"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/gas/Gas_AfterStake_AsOperator.t.sol",
      "line_number": 1,
      "vulnerability_type": "missing_events",
      "severity": "MEDIUM",
      "description": "Critical functions should emit events for transparency",
      "code_snippet": "Contract structure analysis",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.7,
      "mitigation": "Add appropriate event emissions for state changes"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/gas/Gas_AfterConcluded.t.sol",
      "line_number": 14,
      "vulnerability_type": "reentrancy",
      "severity": "CRITICAL",
      "description": "Potential reentrancy vulnerability detected",
      "code_snippet": "s_link.transfer(COMMUNITY_STAKER, INITIAL_MAX_OPERATOR_STAKE);",
      "gas_cost_impact": null,
      "reentrancy_risk": true,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.9,
      "mitigation": "Use ReentrancyGuard or checks-effects-interactions pattern"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/gas/Gas_AfterConcluded.t.sol",
      "line_number": 27,
      "vulnerability_type": "timestamp_dependency",
      "severity": "MEDIUM",
      "description": "Timestamp dependency detected",
      "code_snippet": "vm.warp(block.timestamp + ONE_MONTH + 1);",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Use block.number or external oracle for timing"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/gas/Gas_AfterConcluded.t.sol",
      "line_number": 34,
      "vulnerability_type": "timestamp_dependency",
      "severity": "MEDIUM",
      "description": "Timestamp dependency detected",
      "code_snippet": "vm.warp(block.timestamp + 7 days);",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Use block.number or external oracle for timing"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/gas/Gas_AfterConcluded.t.sol",
      "line_number": 67,
      "vulnerability_type": "reentrancy",
      "severity": "CRITICAL",
      "description": "Potential reentrancy vulnerability detected",
      "code_snippet": "s_link.transfer(OPERATOR, INITIAL_MAX_OPERATOR_STAKE);",
      "gas_cost_impact": null,
      "reentrancy_risk": true,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.9,
      "mitigation": "Use ReentrancyGuard or checks-effects-interactions pattern"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/gas/Gas_AfterConcluded.t.sol",
      "line_number": 79,
      "vulnerability_type": "timestamp_dependency",
      "severity": "MEDIUM",
      "description": "Timestamp dependency detected",
      "code_snippet": "vm.warp(block.timestamp + ONE_MONTH + 1);",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Use block.number or external oracle for timing"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/gas/Gas_AfterConcluded.t.sol",
      "line_number": 86,
      "vulnerability_type": "timestamp_dependency",
      "severity": "MEDIUM",
      "description": "Timestamp dependency detected",
      "code_snippet": "vm.warp(block.timestamp + 7 days);",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Use block.number or external oracle for timing"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/gas/Gas_AfterConcluded.t.sol",
      "line_number": 1,
      "vulnerability_type": "missing_events",
      "severity": "MEDIUM",
      "description": "Critical functions should emit events for transparency",
      "code_snippet": "Contract structure analysis",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.7,
      "mitigation": "Add appropriate event emissions for state changes"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/gas/Gas_AfterStake_AsCommunityStaker.t.sol",
      "line_number": 16,
      "vulnerability_type": "reentrancy",
      "severity": "CRITICAL",
      "description": "Potential reentrancy vulnerability detected",
      "code_snippet": "s_link.transfer(COMMUNITY_STAKER, INITIAL_MAX_OPERATOR_STAKE);",
      "gas_cost_impact": null,
      "reentrancy_risk": true,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.9,
      "mitigation": "Use ReentrancyGuard or checks-effects-interactions pattern"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/gas/Gas_AfterStake_AsCommunityStaker.t.sol",
      "line_number": 80,
      "vulnerability_type": "price_manipulation",
      "severity": "CRITICAL",
      "description": "Price oracle manipulation risk",
      "code_snippet": "abi.encodeWithSelector(AggregatorV3Interface.latestRoundData.selector),",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Use multiple price feeds and implement price deviation checks"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/gas/Gas_AfterStake_AsCommunityStaker.t.sol",
      "line_number": 80,
      "vulnerability_type": "price_manipulation",
      "severity": "CRITICAL",
      "description": "Price oracle manipulation risk",
      "code_snippet": "abi.encodeWithSelector(AggregatorV3Interface.latestRoundData.selector),",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Use multiple price feeds and implement price deviation checks"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/gas/Gas_AfterStake_AsCommunityStaker.t.sol",
      "line_number": 85,
      "vulnerability_type": "timestamp_dependency",
      "severity": "MEDIUM",
      "description": "Timestamp dependency detected",
      "code_snippet": "uint128(block.timestamp),",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Use block.number or external oracle for timing"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/gas/Gas_AfterStake_AsCommunityStaker.t.sol",
      "line_number": 103,
      "vulnerability_type": "reentrancy",
      "severity": "CRITICAL",
      "description": "Potential reentrancy vulnerability detected",
      "code_snippet": "s_link.transfer(COMMUNITY_STAKER, INITIAL_MIN_COMMUNITY_STAKE);",
      "gas_cost_impact": null,
      "reentrancy_risk": true,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.9,
      "mitigation": "Use ReentrancyGuard or checks-effects-interactions pattern"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/gas/Gas_AfterStake_AsCommunityStaker.t.sol",
      "line_number": 118,
      "vulnerability_type": "integer_overflow",
      "severity": "HIGH",
      "description": "Integer overflow/underflow risk",
      "code_snippet": "for (uint256 i = 1; i < operators.length; i++) {",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": true,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Use SafeMath library or Solidity 0.8+ overflow protection"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/gas/Gas_AfterStake_AsCommunityStaker.t.sol",
      "line_number": 118,
      "vulnerability_type": "integer_overflow",
      "severity": "HIGH",
      "description": "Integer overflow/underflow risk",
      "code_snippet": "for (uint256 i = 1; i < operators.length; i++) {",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": true,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Use SafeMath library or Solidity 0.8+ overflow protection"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/gas/Gas_AfterStake_AsCommunityStaker.t.sol",
      "line_number": 118,
      "vulnerability_type": "gas_limit",
      "severity": "MEDIUM",
      "description": "Gas limit DoS vulnerability potential",
      "code_snippet": "for (uint256 i = 1; i < operators.length; i++) {",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Implement pagination or gas-efficient loops"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/gas/Gas_AfterStake_AsCommunityStaker.t.sol",
      "line_number": 118,
      "vulnerability_type": "gas_limit",
      "severity": "MEDIUM",
      "description": "Gas limit DoS vulnerability potential",
      "code_snippet": "for (uint256 i = 1; i < operators.length; i++) {",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Implement pagination or gas-efficient loops"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/gas/Gas_AfterStake_AsCommunityStaker.t.sol",
      "line_number": 121,
      "vulnerability_type": "reentrancy",
      "severity": "CRITICAL",
      "description": "Potential reentrancy vulnerability detected",
      "code_snippet": "s_link.transfer(operator, INITIAL_MAX_OPERATOR_STAKE);",
      "gas_cost_impact": null,
      "reentrancy_risk": true,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.9,
      "mitigation": "Use ReentrancyGuard or checks-effects-interactions pattern"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/gas/Gas_AfterStake_AsCommunityStaker.t.sol",
      "line_number": 132,
      "vulnerability_type": "integer_overflow",
      "severity": "HIGH",
      "description": "Integer overflow/underflow risk",
      "code_snippet": "uint256 timeFeedGoesDown = block.timestamp + 14 days;",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": true,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.9,
      "mitigation": "Use SafeMath library or Solidity 0.8+ overflow protection"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/gas/Gas_AfterStake_AsCommunityStaker.t.sol",
      "line_number": 132,
      "vulnerability_type": "timestamp_dependency",
      "severity": "MEDIUM",
      "description": "Timestamp dependency detected",
      "code_snippet": "uint256 timeFeedGoesDown = block.timestamp + 14 days;",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.9,
      "mitigation": "Use block.number or external oracle for timing"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/gas/Gas_AfterStake_AsCommunityStaker.t.sol",
      "line_number": 137,
      "vulnerability_type": "price_manipulation",
      "severity": "CRITICAL",
      "description": "Price oracle manipulation risk",
      "code_snippet": "abi.encodeWithSelector(AggregatorV3Interface.latestRoundData.selector),",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Use multiple price feeds and implement price deviation checks"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/gas/Gas_AfterStake_AsCommunityStaker.t.sol",
      "line_number": 137,
      "vulnerability_type": "price_manipulation",
      "severity": "CRITICAL",
      "description": "Price oracle manipulation risk",
      "code_snippet": "abi.encodeWithSelector(AggregatorV3Interface.latestRoundData.selector),",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Use multiple price feeds and implement price deviation checks"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/gas/Gas_AfterStake_AsCommunityStaker.t.sol",
      "line_number": 1,
      "vulnerability_type": "missing_events",
      "severity": "MEDIUM",
      "description": "Critical functions should emit events for transparency",
      "code_snippet": "Contract structure analysis",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.7,
      "mitigation": "Add appropriate event emissions for state changes"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/gas/Gas_AfterInit.t.sol",
      "line_number": 19,
      "vulnerability_type": "reentrancy",
      "severity": "CRITICAL",
      "description": "Potential reentrancy vulnerability detected",
      "code_snippet": "s_link.transfer(STRANGER, INITIAL_MAX_COMMUNITY_STAKE);",
      "gas_cost_impact": null,
      "reentrancy_risk": true,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.9,
      "mitigation": "Use ReentrancyGuard or checks-effects-interactions pattern"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/gas/Gas_AfterInit.t.sol",
      "line_number": 24,
      "vulnerability_type": "reentrancy",
      "severity": "CRITICAL",
      "description": "Potential reentrancy vulnerability detected",
      "code_snippet": "s_link.transfer(COMMUNITY_STAKER, INITIAL_MAX_COMMUNITY_STAKE);",
      "gas_cost_impact": null,
      "reentrancy_risk": true,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.9,
      "mitigation": "Use ReentrancyGuard or checks-effects-interactions pattern"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/gas/Gas_AfterInit.t.sol",
      "line_number": 30,
      "vulnerability_type": "price_manipulation",
      "severity": "CRITICAL",
      "description": "Price oracle manipulation risk",
      "code_snippet": "abi.encodeWithSelector(AggregatorV3Interface.latestRoundData.selector),",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Use multiple price feeds and implement price deviation checks"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/gas/Gas_AfterInit.t.sol",
      "line_number": 30,
      "vulnerability_type": "price_manipulation",
      "severity": "CRITICAL",
      "description": "Price oracle manipulation risk",
      "code_snippet": "abi.encodeWithSelector(AggregatorV3Interface.latestRoundData.selector),",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Use multiple price feeds and implement price deviation checks"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/gas/Gas_AfterInit.t.sol",
      "line_number": 35,
      "vulnerability_type": "timestamp_dependency",
      "severity": "MEDIUM",
      "description": "Timestamp dependency detected",
      "code_snippet": "uint128(block.timestamp),",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Use block.number or external oracle for timing"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/gas/Gas_AfterInit.t.sol",
      "line_number": 107,
      "vulnerability_type": "reentrancy",
      "severity": "CRITICAL",
      "description": "Potential reentrancy vulnerability detected",
      "code_snippet": "s_link.transfer(STRANGER, INITIAL_MAX_COMMUNITY_STAKE);",
      "gas_cost_impact": null,
      "reentrancy_risk": true,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.9,
      "mitigation": "Use ReentrancyGuard or checks-effects-interactions pattern"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/gas/Gas_AfterInit.t.sol",
      "line_number": 112,
      "vulnerability_type": "reentrancy",
      "severity": "CRITICAL",
      "description": "Potential reentrancy vulnerability detected",
      "code_snippet": "s_link.transfer(OPERATOR, INITIAL_MAX_OPERATOR_STAKE);",
      "gas_cost_impact": null,
      "reentrancy_risk": true,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.9,
      "mitigation": "Use ReentrancyGuard or checks-effects-interactions pattern"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/gas/Gas_AfterInit.t.sol",
      "line_number": 117,
      "vulnerability_type": "price_manipulation",
      "severity": "CRITICAL",
      "description": "Price oracle manipulation risk",
      "code_snippet": "abi.encodeWithSelector(AggregatorV3Interface.latestRoundData.selector),",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Use multiple price feeds and implement price deviation checks"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/gas/Gas_AfterInit.t.sol",
      "line_number": 117,
      "vulnerability_type": "price_manipulation",
      "severity": "CRITICAL",
      "description": "Price oracle manipulation risk",
      "code_snippet": "abi.encodeWithSelector(AggregatorV3Interface.latestRoundData.selector),",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Use multiple price feeds and implement price deviation checks"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/gas/Gas_AfterInit.t.sol",
      "line_number": 122,
      "vulnerability_type": "timestamp_dependency",
      "severity": "MEDIUM",
      "description": "Timestamp dependency detected",
      "code_snippet": "uint128(block.timestamp),",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Use block.number or external oracle for timing"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/gas/Gas_AfterInit.t.sol",
      "line_number": 1,
      "vulnerability_type": "missing_events",
      "severity": "MEDIUM",
      "description": "Critical functions should emit events for transparency",
      "code_snippet": "Contract structure analysis",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.7,
      "mitigation": "Add appropriate event emissions for state changes"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/fuzzing/foundry/Staking_FuzzCommunityStaking.t.sol",
      "line_number": 14,
      "vulnerability_type": "reentrancy",
      "severity": "CRITICAL",
      "description": "Potential reentrancy vulnerability detected",
      "code_snippet": "s_link.transfer(STRANGER, INITIAL_MAX_COMMUNITY_STAKE);",
      "gas_cost_impact": null,
      "reentrancy_risk": true,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.9,
      "mitigation": "Use ReentrancyGuard or checks-effects-interactions pattern"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/fuzzing/foundry/Staking_FuzzCommunityStaking.t.sol",
      "line_number": 15,
      "vulnerability_type": "reentrancy",
      "severity": "CRITICAL",
      "description": "Potential reentrancy vulnerability detected",
      "code_snippet": "s_link.transfer(COMMUNITY_STAKER, s_link.balanceOf(OWNER));",
      "gas_cost_impact": null,
      "reentrancy_risk": true,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.9,
      "mitigation": "Use ReentrancyGuard or checks-effects-interactions pattern"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/fuzzing/foundry/Staking_FuzzCommunityStaking.t.sol",
      "line_number": 85,
      "vulnerability_type": "integer_overflow",
      "severity": "HIGH",
      "description": "Integer overflow/underflow risk",
      "code_snippet": "uint256 customMaxOperatorStake = INITIAL_MAX_OPERATOR_STAKE * 16;",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": true,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.9,
      "mitigation": "Use SafeMath library or Solidity 0.8+ overflow protection"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/fuzzing/foundry/Staking_FuzzCommunityStaking.t.sol",
      "line_number": 99,
      "vulnerability_type": "reentrancy",
      "severity": "CRITICAL",
      "description": "Potential reentrancy vulnerability detected",
      "code_snippet": "s_link.transfer(COMMUNITY_STAKER, communityStakerMaxStakeAmount);",
      "gas_cost_impact": null,
      "reentrancy_risk": true,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.9,
      "mitigation": "Use ReentrancyGuard or checks-effects-interactions pattern"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/fuzzing/foundry/Staking_FuzzCommunityStaking.t.sol",
      "line_number": 108,
      "vulnerability_type": "reentrancy",
      "severity": "CRITICAL",
      "description": "Potential reentrancy vulnerability detected",
      "code_snippet": "s_link.transfer(STAKER, INITIAL_MAX_COMMUNITY_STAKE);",
      "gas_cost_impact": null,
      "reentrancy_risk": true,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.9,
      "mitigation": "Use ReentrancyGuard or checks-effects-interactions pattern"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/fuzzing/foundry/Staking_FuzzCommunityStaking.t.sol",
      "line_number": 1,
      "vulnerability_type": "missing_events",
      "severity": "MEDIUM",
      "description": "Critical functions should emit events for transparency",
      "code_snippet": "Contract structure analysis",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.7,
      "mitigation": "Add appropriate event emissions for state changes"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/fuzzing/foundry/Staking_FuzzAdminFunctions.t.sol",
      "line_number": 57,
      "vulnerability_type": "integer_overflow",
      "severity": "HIGH",
      "description": "Integer overflow/underflow risk",
      "code_snippet": "for (uint256 i; i < newOperatorCount; ++i)",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": true,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Use SafeMath library or Solidity 0.8+ overflow protection"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/fuzzing/foundry/Staking_FuzzAdminFunctions.t.sol",
      "line_number": 57,
      "vulnerability_type": "integer_overflow",
      "severity": "HIGH",
      "description": "Integer overflow/underflow risk",
      "code_snippet": "for (uint256 i; i < newOperatorCount; ++i)",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": true,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Use SafeMath library or Solidity 0.8+ overflow protection"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/fuzzing/foundry/Staking_FuzzAdminFunctions.t.sol",
      "line_number": 57,
      "vulnerability_type": "gas_limit",
      "severity": "MEDIUM",
      "description": "Gas limit DoS vulnerability potential",
      "code_snippet": "for (uint256 i; i < newOperatorCount; ++i)",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Implement pagination or gas-efficient loops"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/fuzzing/foundry/Staking_FuzzAdminFunctions.t.sol",
      "line_number": 58,
      "vulnerability_type": "integer_overflow",
      "severity": "HIGH",
      "description": "Integer overflow/underflow risk",
      "code_snippet": "newOperators[i] = address(uint160(200 + i));",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": true,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Use SafeMath library or Solidity 0.8+ overflow protection"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/fuzzing/foundry/Staking_FuzzOperatorStaking.t.sol",
      "line_number": 14,
      "vulnerability_type": "reentrancy",
      "severity": "CRITICAL",
      "description": "Potential reentrancy vulnerability detected",
      "code_snippet": "s_link.transfer(STRANGER, INITIAL_MAX_COMMUNITY_STAKE);",
      "gas_cost_impact": null,
      "reentrancy_risk": true,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.9,
      "mitigation": "Use ReentrancyGuard or checks-effects-interactions pattern"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/fuzzing/foundry/Staking_FuzzOperatorStaking.t.sol",
      "line_number": 15,
      "vulnerability_type": "reentrancy",
      "severity": "CRITICAL",
      "description": "Potential reentrancy vulnerability detected",
      "code_snippet": "s_link.transfer(OPERATOR, s_link.balanceOf(OWNER));",
      "gas_cost_impact": null,
      "reentrancy_risk": true,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.9,
      "mitigation": "Use ReentrancyGuard or checks-effects-interactions pattern"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/fuzzing/foundry/Staking_FuzzOperatorStaking.t.sol",
      "line_number": 1,
      "vulnerability_type": "missing_events",
      "severity": "MEDIUM",
      "description": "Critical functions should emit events for transparency",
      "code_snippet": "Contract structure analysis",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.7,
      "mitigation": "Add appropriate event emissions for state changes"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/fuzzing/foundry/Staking_RoundingErrors.t.sol",
      "line_number": 23,
      "vulnerability_type": "reentrancy",
      "severity": "CRITICAL",
      "description": "Potential reentrancy vulnerability detected",
      "code_snippet": "s_link.transfer(OPERATOR, INITIAL_MIN_OPERATOR_STAKE);",
      "gas_cost_impact": null,
      "reentrancy_risk": true,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.9,
      "mitigation": "Use ReentrancyGuard or checks-effects-interactions pattern"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/fuzzing/foundry/Staking_RoundingErrors.t.sol",
      "line_number": 24,
      "vulnerability_type": "reentrancy",
      "severity": "CRITICAL",
      "description": "Potential reentrancy vulnerability detected",
      "code_snippet": "s_link.transfer(OPERATOR_2, INITIAL_MIN_OPERATOR_STAKE);",
      "gas_cost_impact": null,
      "reentrancy_risk": true,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.9,
      "mitigation": "Use ReentrancyGuard or checks-effects-interactions pattern"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/fuzzing/foundry/Staking_RoundingErrors.t.sol",
      "line_number": 25,
      "vulnerability_type": "reentrancy",
      "severity": "CRITICAL",
      "description": "Potential reentrancy vulnerability detected",
      "code_snippet": "s_link.transfer(COMMUNITY_STAKER, INITIAL_MIN_OPERATOR_STAKE);",
      "gas_cost_impact": null,
      "reentrancy_risk": true,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.9,
      "mitigation": "Use ReentrancyGuard or checks-effects-interactions pattern"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/fuzzing/foundry/Staking_RoundingErrors.t.sol",
      "line_number": 53,
      "vulnerability_type": "integer_overflow",
      "severity": "HIGH",
      "description": "Integer overflow/underflow risk",
      "code_snippet": "uint256 addmore_amount = 1e12 + 10;",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": true,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Use SafeMath library or Solidity 0.8+ overflow protection"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/fuzzing/foundry/Staking_RoundingErrors.t.sol",
      "line_number": 55,
      "vulnerability_type": "integer_overflow",
      "severity": "HIGH",
      "description": "Integer overflow/underflow risk",
      "code_snippet": "for (uint256 i = 0; i < 10; i++) {",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": true,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Use SafeMath library or Solidity 0.8+ overflow protection"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/fuzzing/foundry/Staking_RoundingErrors.t.sol",
      "line_number": 55,
      "vulnerability_type": "integer_overflow",
      "severity": "HIGH",
      "description": "Integer overflow/underflow risk",
      "code_snippet": "for (uint256 i = 0; i < 10; i++) {",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": true,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Use SafeMath library or Solidity 0.8+ overflow protection"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/fuzzing/foundry/Staking_RoundingErrors.t.sol",
      "line_number": 55,
      "vulnerability_type": "gas_limit",
      "severity": "MEDIUM",
      "description": "Gas limit DoS vulnerability potential",
      "code_snippet": "for (uint256 i = 0; i < 10; i++) {",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Implement pagination or gas-efficient loops"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/fuzzing/foundry/Staking_RoundingErrors.t.sol",
      "line_number": 1,
      "vulnerability_type": "missing_events",
      "severity": "MEDIUM",
      "description": "Critical functions should emit events for transparency",
      "code_snippet": "Contract structure analysis",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.7,
      "mitigation": "Add appropriate event emissions for state changes"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/fuzzing/foundry/SafeTest.t.sol",
      "line_number": 9,
      "vulnerability_type": "reentrancy",
      "severity": "CRITICAL",
      "description": "Potential reentrancy vulnerability detected",
      "code_snippet": "payable(msg.sender).transfer(address(this).balance);",
      "gas_cost_impact": null,
      "reentrancy_risk": true,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.9,
      "mitigation": "Use ReentrancyGuard or checks-effects-interactions pattern"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/fuzzing/foundry/SafeTest.t.sol",
      "line_number": 23,
      "vulnerability_type": "reentrancy",
      "severity": "CRITICAL",
      "description": "Potential reentrancy vulnerability detected",
      "code_snippet": "payable(address(s_safe)).transfer(balance);",
      "gas_cost_impact": null,
      "reentrancy_risk": true,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.9,
      "mitigation": "Use ReentrancyGuard or checks-effects-interactions pattern"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/fuzzing/foundry/SafeTest.t.sol",
      "line_number": 1,
      "vulnerability_type": "missing_events",
      "severity": "MEDIUM",
      "description": "Critical functions should emit events for transparency",
      "code_snippet": "Contract structure analysis",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.7,
      "mitigation": "Add appropriate event emissions for state changes"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/invariants/InvariantsBase.t.sol",
      "line_number": 6,
      "vulnerability_type": "price_manipulation",
      "severity": "CRITICAL",
      "description": "Price oracle manipulation risk",
      "code_snippet": "import {AggregatorV3Interface} from '@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol';",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Use multiple price feeds and implement price deviation checks"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/invariants/Constants.t.sol",
      "line_number": 4,
      "vulnerability_type": "price_manipulation",
      "severity": "CRITICAL",
      "description": "Price oracle manipulation risk",
      "code_snippet": "import {AggregatorV3Interface} from '@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol';",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Use multiple price feeds and implement price deviation checks"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/invariants/Constants.t.sol",
      "line_number": 15,
      "vulnerability_type": "integer_overflow",
      "severity": "HIGH",
      "description": "Integer overflow/underflow risk",
      "code_snippet": "uint256 internal constant INITIAL_MAX_POOL_SIZE = MAX_POOL_SIZE * 1e18;",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": true,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Use SafeMath library or Solidity 0.8+ overflow protection"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/invariants/Constants.t.sol",
      "line_number": 24,
      "vulnerability_type": "integer_overflow",
      "severity": "HIGH",
      "description": "Integer overflow/underflow risk",
      "code_snippet": "uint256 internal constant ONE_MONTH = 30 * 24 * 60 * 60;",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": true,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Use SafeMath library or Solidity 0.8+ overflow protection"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/invariants/Constants.t.sol",
      "line_number": 25,
      "vulnerability_type": "integer_overflow",
      "severity": "HIGH",
      "description": "Integer overflow/underflow risk",
      "code_snippet": "uint256 internal constant REWARD_DURATION = ONE_MONTH * 6;",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": true,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Use SafeMath library or Solidity 0.8+ overflow protection"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/invariants/Constants.t.sol",
      "line_number": 50,
      "vulnerability_type": "price_manipulation",
      "severity": "CRITICAL",
      "description": "Price oracle manipulation risk",
      "code_snippet": "AggregatorV3Interface internal constant FEED =",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.9,
      "mitigation": "Use multiple price feeds and implement price deviation checks"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/invariants/Constants.t.sol",
      "line_number": 51,
      "vulnerability_type": "price_manipulation",
      "severity": "CRITICAL",
      "description": "Price oracle manipulation risk",
      "code_snippet": "AggregatorV3Interface(STRANGER);",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Use multiple price feeds and implement price deviation checks"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/invariants/Invariants.t.sol",
      "line_number": 5,
      "vulnerability_type": "price_manipulation",
      "severity": "CRITICAL",
      "description": "Price oracle manipulation risk",
      "code_snippet": "import {AggregatorV3Interface} from '@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol';",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Use multiple price feeds and implement price deviation checks"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/invariants/Invariants.t.sol",
      "line_number": 11,
      "vulnerability_type": "price_manipulation",
      "severity": "CRITICAL",
      "description": "Price oracle manipulation risk",
      "code_snippet": "import {MockAggregator} from './helpers/MockAggregator.t.sol';",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Use multiple price feeds and implement price deviation checks"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/invariants/Invariants.t.sol",
      "line_number": 38,
      "vulnerability_type": "timestamp_dependency",
      "severity": "MEDIUM",
      "description": "Timestamp dependency detected",
      "code_snippet": "MockAggregator agg = new MockAggregator(1, block.timestamp);",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Use block.number or external oracle for timing"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/invariants/Invariants.t.sol",
      "line_number": 38,
      "vulnerability_type": "price_manipulation",
      "severity": "CRITICAL",
      "description": "Price oracle manipulation risk",
      "code_snippet": "MockAggregator agg = new MockAggregator(1, block.timestamp);",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Use multiple price feeds and implement price deviation checks"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/invariants/Invariants.t.sol",
      "line_number": 45,
      "vulnerability_type": "price_manipulation",
      "severity": "CRITICAL",
      "description": "Price oracle manipulation risk",
      "code_snippet": "monitoredFeed: AggregatorV3Interface(address(agg)),",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.9,
      "mitigation": "Use multiple price feeds and implement price deviation checks"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/invariants/Invariants.t.sol",
      "line_number": 145,
      "vulnerability_type": "timestamp_dependency",
      "severity": "MEDIUM",
      "description": "Timestamp dependency detected",
      "code_snippet": "uint256 remainingTime = block.timestamp < endTimestamp",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Use block.number or external oracle for timing"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/invariants/Invariants.t.sol",
      "line_number": 146,
      "vulnerability_type": "timestamp_dependency",
      "severity": "MEDIUM",
      "description": "Timestamp dependency detected",
      "code_snippet": "? endTimestamp - block.timestamp",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Use block.number or external oracle for timing"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/invariants/Invariants.t.sol",
      "line_number": 162,
      "vulnerability_type": "integer_overflow",
      "severity": "HIGH",
      "description": "Integer overflow/underflow risk",
      "code_snippet": "uint256 rewardsPlusStaked = s_staking.getTotalStakedAmount() +",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": true,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.9,
      "mitigation": "Use SafeMath library or Solidity 0.8+ overflow protection"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/invariants/Invariants.t.sol",
      "line_number": 166,
      "vulnerability_type": "timestamp_dependency",
      "severity": "MEDIUM",
      "description": "Timestamp dependency detected",
      "code_snippet": "if (block.timestamp < endTimestamp) {",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Use block.number or external oracle for timing"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/invariants/Invariants.t.sol",
      "line_number": 167,
      "vulnerability_type": "timestamp_dependency",
      "severity": "MEDIUM",
      "description": "Timestamp dependency detected",
      "code_snippet": "uint256 remainingTime = endTimestamp - block.timestamp;",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Use block.number or external oracle for timing"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/invariants/Invariants.t.sol",
      "line_number": 169,
      "vulnerability_type": "integer_overflow",
      "severity": "HIGH",
      "description": "Integer overflow/underflow risk",
      "code_snippet": "rewardsPlusStaked += remainingTime * rewardRate;",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": true,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.9,
      "mitigation": "Use SafeMath library or Solidity 0.8+ overflow protection"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/invariants/actors/ActorOwner.t.sol",
      "line_number": 32,
      "vulnerability_type": "timestamp_dependency",
      "severity": "MEDIUM",
      "description": "Timestamp dependency detected",
      "code_snippet": "if (rewardStartTimestamp + 90 days > block.timestamp) return _warp(seed);",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Use block.number or external oracle for timing"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/invariants/actors/ActorOwner.t.sol",
      "line_number": 50,
      "vulnerability_type": "gas_limit",
      "severity": "MEDIUM",
      "description": "Gas limit DoS vulnerability potential",
      "code_snippet": "if (i_actorManager.getOperators().length <= 3) {",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Implement pagination or gas-efficient loops"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/invariants/actors/ActorOwner.t.sol",
      "line_number": 61,
      "vulnerability_type": "gas_limit",
      "severity": "MEDIUM",
      "description": "Gas limit DoS vulnerability potential",
      "code_snippet": "if (feedOperators.length < operatorsCount) return _warp(seed);",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.9,
      "mitigation": "Implement pagination or gas-efficient loops"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/invariants/actors/ActorOwner.t.sol",
      "line_number": 63,
      "vulnerability_type": "integer_overflow",
      "severity": "HIGH",
      "description": "Integer overflow/underflow risk",
      "code_snippet": "for (uint256 i; i < operatorsCount; i++) {",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": true,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Use SafeMath library or Solidity 0.8+ overflow protection"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/invariants/actors/ActorOwner.t.sol",
      "line_number": 63,
      "vulnerability_type": "integer_overflow",
      "severity": "HIGH",
      "description": "Integer overflow/underflow risk",
      "code_snippet": "for (uint256 i; i < operatorsCount; i++) {",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": true,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Use SafeMath library or Solidity 0.8+ overflow protection"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/invariants/actors/ActorOwner.t.sol",
      "line_number": 63,
      "vulnerability_type": "gas_limit",
      "severity": "MEDIUM",
      "description": "Gas limit DoS vulnerability potential",
      "code_snippet": "for (uint256 i; i < operatorsCount; i++) {",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Implement pagination or gas-efficient loops"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/invariants/actors/ActorOwner.t.sol",
      "line_number": 70,
      "vulnerability_type": "gas_limit",
      "severity": "MEDIUM",
      "description": "Gas limit DoS vulnerability potential",
      "code_snippet": "feedOperators.length - operatorsCount",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.9,
      "mitigation": "Implement pagination or gas-efficient loops"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/invariants/actors/ActorOwner.t.sol",
      "line_number": 72,
      "vulnerability_type": "integer_overflow",
      "severity": "HIGH",
      "description": "Integer overflow/underflow risk",
      "code_snippet": "for (uint256 i; i < newFeedOperators.length; i++) {",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": true,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.9,
      "mitigation": "Use SafeMath library or Solidity 0.8+ overflow protection"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/invariants/actors/ActorOwner.t.sol",
      "line_number": 72,
      "vulnerability_type": "integer_overflow",
      "severity": "HIGH",
      "description": "Integer overflow/underflow risk",
      "code_snippet": "for (uint256 i; i < newFeedOperators.length; i++) {",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": true,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.9,
      "mitigation": "Use SafeMath library or Solidity 0.8+ overflow protection"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/invariants/actors/ActorOwner.t.sol",
      "line_number": 72,
      "vulnerability_type": "gas_limit",
      "severity": "MEDIUM",
      "description": "Gas limit DoS vulnerability potential",
      "code_snippet": "for (uint256 i; i < newFeedOperators.length; i++) {",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.9,
      "mitigation": "Implement pagination or gas-efficient loops"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/invariants/actors/ActorOwner.t.sol",
      "line_number": 72,
      "vulnerability_type": "gas_limit",
      "severity": "MEDIUM",
      "description": "Gas limit DoS vulnerability potential",
      "code_snippet": "for (uint256 i; i < newFeedOperators.length; i++) {",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.9,
      "mitigation": "Implement pagination or gas-efficient loops"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/invariants/actors/ActorOwner.t.sol",
      "line_number": 83,
      "vulnerability_type": "gas_limit",
      "severity": "MEDIUM",
      "description": "Gas limit DoS vulnerability potential",
      "code_snippet": "uint256 operatorsCount = bound(seed, 0, activeOperators.length);",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Implement pagination or gas-efficient loops"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/invariants/actors/ActorOwner.t.sol",
      "line_number": 86,
      "vulnerability_type": "integer_overflow",
      "severity": "HIGH",
      "description": "Integer overflow/underflow risk",
      "code_snippet": "for (uint256 i; i < operatorsCount; i++) {",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": true,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Use SafeMath library or Solidity 0.8+ overflow protection"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/invariants/actors/ActorOwner.t.sol",
      "line_number": 86,
      "vulnerability_type": "integer_overflow",
      "severity": "HIGH",
      "description": "Integer overflow/underflow risk",
      "code_snippet": "for (uint256 i; i < operatorsCount; i++) {",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": true,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Use SafeMath library or Solidity 0.8+ overflow protection"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/invariants/actors/ActorOwner.t.sol",
      "line_number": 86,
      "vulnerability_type": "gas_limit",
      "severity": "MEDIUM",
      "description": "Gas limit DoS vulnerability potential",
      "code_snippet": "for (uint256 i; i < operatorsCount; i++) {",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Implement pagination or gas-efficient loops"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/invariants/actors/ActorOwner.t.sol",
      "line_number": 163,
      "vulnerability_type": "timestamp_dependency",
      "severity": "MEDIUM",
      "description": "Timestamp dependency detected",
      "code_snippet": "vm.warp(bound(seed, block.timestamp + 1, block.timestamp + 30 days));",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Use block.number or external oracle for timing"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/invariants/actors/ActorOwner.t.sol",
      "line_number": 166,
      "vulnerability_type": "access_control",
      "severity": "HIGH",
      "description": "Access control mechanism detected - verify implementation",
      "code_snippet": "modifier asOwner() {",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": true,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Implement proper role-based access control"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/invariants/actors/ActorOperator.t.sol",
      "line_number": 9,
      "vulnerability_type": "price_manipulation",
      "severity": "CRITICAL",
      "description": "Price oracle manipulation risk",
      "code_snippet": "import {MockAggregator} from '../helpers/MockAggregator.t.sol';",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Use multiple price feeds and implement price deviation checks"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/invariants/actors/ActorOperator.t.sol",
      "line_number": 15,
      "vulnerability_type": "price_manipulation",
      "severity": "CRITICAL",
      "description": "Price oracle manipulation risk",
      "code_snippet": "MockAggregator private immutable i_aggregator;",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Use multiple price feeds and implement price deviation checks"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/invariants/actors/ActorOperator.t.sol",
      "line_number": 21,
      "vulnerability_type": "price_manipulation",
      "severity": "CRITICAL",
      "description": "Price oracle manipulation risk",
      "code_snippet": "MockAggregator aggregator",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Use multiple price feeds and implement price deviation checks"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/invariants/actors/ActorOperator.t.sol",
      "line_number": 26,
      "vulnerability_type": "price_manipulation",
      "severity": "CRITICAL",
      "description": "Price oracle manipulation risk",
      "code_snippet": "i_aggregator = aggregator;",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Use multiple price feeds and implement price deviation checks"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/invariants/actors/ActorOperator.t.sol",
      "line_number": 69,
      "vulnerability_type": "price_manipulation",
      "severity": "CRITICAL",
      "description": "Price oracle manipulation risk",
      "code_snippet": "uint256 roundId = i_aggregator.getRoundId();",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Use multiple price feeds and implement price deviation checks"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/invariants/actors/ActorOperator.t.sol",
      "line_number": 78,
      "vulnerability_type": "timestamp_dependency",
      "severity": "MEDIUM",
      "description": "Timestamp dependency detected",
      "code_snippet": "block.timestamp - i_aggregator.getUpdatedAt() <",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Use block.number or external oracle for timing"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/invariants/actors/ActorOperator.t.sol",
      "line_number": 78,
      "vulnerability_type": "price_manipulation",
      "severity": "CRITICAL",
      "description": "Price oracle manipulation risk",
      "code_snippet": "block.timestamp - i_aggregator.getUpdatedAt() <",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Use multiple price feeds and implement price deviation checks"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/invariants/actors/ActorOperator.t.sol",
      "line_number": 82,
      "vulnerability_type": "price_manipulation",
      "severity": "CRITICAL",
      "description": "Price oracle manipulation risk",
      "code_snippet": "if (i_actorManager.getLastAlertRoundId() == i_aggregator.getRoundId())",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Use multiple price feeds and implement price deviation checks"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/invariants/actors/ActorOperator.t.sol",
      "line_number": 120,
      "vulnerability_type": "reentrancy",
      "severity": "CRITICAL",
      "description": "Potential reentrancy vulnerability detected",
      "code_snippet": "i_link.transfer(operator, amount);",
      "gas_cost_impact": null,
      "reentrancy_risk": true,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.9,
      "mitigation": "Use ReentrancyGuard or checks-effects-interactions pattern"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/invariants/actors/ActorOperator.t.sol",
      "line_number": 1,
      "vulnerability_type": "missing_events",
      "severity": "MEDIUM",
      "description": "Critical functions should emit events for transparency",
      "code_snippet": "Contract structure analysis",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.7,
      "mitigation": "Add appropriate event emissions for state changes"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/invariants/actors/ActorOperator.t.sol",
      "line_number": 29,
      "vulnerability_type": "access_control",
      "severity": "HIGH",
      "description": "Public critical function stake lacks access control",
      "code_snippet": "function stake(uint256 seed, uint256 amount) public {",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": true,
      "function_name": "stake",
      "confidence_score": 0.85,
      "mitigation": "Add appropriate access control modifiers"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/invariants/actors/ActorOperator.t.sol",
      "line_number": 38,
      "vulnerability_type": "access_control",
      "severity": "HIGH",
      "description": "Public critical function unstake lacks access control",
      "code_snippet": "function unstake(uint256 seed, uint256 amount) public {",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": true,
      "function_name": "unstake",
      "confidence_score": 0.85,
      "mitigation": "Add appropriate access control modifiers"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/invariants/actors/ActorCommunityStaker.t.sol",
      "line_number": 9,
      "vulnerability_type": "price_manipulation",
      "severity": "CRITICAL",
      "description": "Price oracle manipulation risk",
      "code_snippet": "import {MockAggregator} from '../helpers/MockAggregator.t.sol';",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Use multiple price feeds and implement price deviation checks"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/invariants/actors/ActorCommunityStaker.t.sol",
      "line_number": 15,
      "vulnerability_type": "price_manipulation",
      "severity": "CRITICAL",
      "description": "Price oracle manipulation risk",
      "code_snippet": "MockAggregator private immutable i_aggregator;",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Use multiple price feeds and implement price deviation checks"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/invariants/actors/ActorCommunityStaker.t.sol",
      "line_number": 21,
      "vulnerability_type": "price_manipulation",
      "severity": "CRITICAL",
      "description": "Price oracle manipulation risk",
      "code_snippet": "MockAggregator aggregator",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Use multiple price feeds and implement price deviation checks"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/invariants/actors/ActorCommunityStaker.t.sol",
      "line_number": 26,
      "vulnerability_type": "price_manipulation",
      "severity": "CRITICAL",
      "description": "Price oracle manipulation risk",
      "code_snippet": "i_aggregator = aggregator;",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Use multiple price feeds and implement price deviation checks"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/invariants/actors/ActorCommunityStaker.t.sol",
      "line_number": 50,
      "vulnerability_type": "price_manipulation",
      "severity": "CRITICAL",
      "description": "Price oracle manipulation risk",
      "code_snippet": "uint256 roundId = i_aggregator.getRoundId();",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Use multiple price feeds and implement price deviation checks"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/invariants/actors/ActorCommunityStaker.t.sol",
      "line_number": 59,
      "vulnerability_type": "timestamp_dependency",
      "severity": "MEDIUM",
      "description": "Timestamp dependency detected",
      "code_snippet": "block.timestamp - i_aggregator.getUpdatedAt() <",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Use block.number or external oracle for timing"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/invariants/actors/ActorCommunityStaker.t.sol",
      "line_number": 59,
      "vulnerability_type": "price_manipulation",
      "severity": "CRITICAL",
      "description": "Price oracle manipulation risk",
      "code_snippet": "block.timestamp - i_aggregator.getUpdatedAt() <",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Use multiple price feeds and implement price deviation checks"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/invariants/actors/ActorCommunityStaker.t.sol",
      "line_number": 63,
      "vulnerability_type": "price_manipulation",
      "severity": "CRITICAL",
      "description": "Price oracle manipulation risk",
      "code_snippet": "if (i_actorManager.getLastAlertRoundId() == i_aggregator.getRoundId())",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Use multiple price feeds and implement price deviation checks"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/invariants/actors/ActorCommunityStaker.t.sol",
      "line_number": 101,
      "vulnerability_type": "reentrancy",
      "severity": "CRITICAL",
      "description": "Potential reentrancy vulnerability detected",
      "code_snippet": "i_link.transfer(communityStaker, amount);",
      "gas_cost_impact": null,
      "reentrancy_risk": true,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.9,
      "mitigation": "Use ReentrancyGuard or checks-effects-interactions pattern"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/invariants/actors/ActorCommunityStaker.t.sol",
      "line_number": 1,
      "vulnerability_type": "missing_events",
      "severity": "MEDIUM",
      "description": "Critical functions should emit events for transparency",
      "code_snippet": "Contract structure analysis",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.7,
      "mitigation": "Add appropriate event emissions for state changes"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/invariants/actors/ActorCommunityStaker.t.sol",
      "line_number": 29,
      "vulnerability_type": "access_control",
      "severity": "HIGH",
      "description": "Public critical function stake lacks access control",
      "code_snippet": "function stake(uint256 seed) public {",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": true,
      "function_name": "stake",
      "confidence_score": 0.85,
      "mitigation": "Add appropriate access control modifiers"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/invariants/actors/ActorCommunityStaker.t.sol",
      "line_number": 38,
      "vulnerability_type": "access_control",
      "severity": "HIGH",
      "description": "Public critical function unstake lacks access control",
      "code_snippet": "function unstake(uint256 seed) public {",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": true,
      "function_name": "unstake",
      "confidence_score": 0.85,
      "mitigation": "Add appropriate access control modifiers"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/invariants/helpers/OperatorLib.t.sol",
      "line_number": 34,
      "vulnerability_type": "gas_limit",
      "severity": "MEDIUM",
      "description": "Gas limit DoS vulnerability potential",
      "code_snippet": "operators._details[newOperatorAddress].index = operators._addresses.length;",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Implement pagination or gas-efficient loops"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/invariants/helpers/OperatorLib.t.sol",
      "line_number": 57,
      "vulnerability_type": "integer_overflow",
      "severity": "HIGH",
      "description": "Integer overflow/underflow risk",
      "code_snippet": "operators._details[operatorAddress].stake += amount;",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": true,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.9,
      "mitigation": "Use SafeMath library or Solidity 0.8+ overflow protection"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/invariants/helpers/OperatorLib.t.sol",
      "line_number": 74,
      "vulnerability_type": "integer_overflow",
      "severity": "HIGH",
      "description": "Integer overflow/underflow risk",
      "code_snippet": "for (uint256 i; i < operators._removedOperatorsWithStake.length; i++) {",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": true,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.9,
      "mitigation": "Use SafeMath library or Solidity 0.8+ overflow protection"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/invariants/helpers/OperatorLib.t.sol",
      "line_number": 74,
      "vulnerability_type": "integer_overflow",
      "severity": "HIGH",
      "description": "Integer overflow/underflow risk",
      "code_snippet": "for (uint256 i; i < operators._removedOperatorsWithStake.length; i++) {",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": true,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.9,
      "mitigation": "Use SafeMath library or Solidity 0.8+ overflow protection"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/invariants/helpers/OperatorLib.t.sol",
      "line_number": 74,
      "vulnerability_type": "gas_limit",
      "severity": "MEDIUM",
      "description": "Gas limit DoS vulnerability potential",
      "code_snippet": "for (uint256 i; i < operators._removedOperatorsWithStake.length; i++) {",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.9,
      "mitigation": "Implement pagination or gas-efficient loops"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/invariants/helpers/OperatorLib.t.sol",
      "line_number": 74,
      "vulnerability_type": "gas_limit",
      "severity": "MEDIUM",
      "description": "Gas limit DoS vulnerability potential",
      "code_snippet": "for (uint256 i; i < operators._removedOperatorsWithStake.length; i++) {",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.9,
      "mitigation": "Implement pagination or gas-efficient loops"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/invariants/helpers/OperatorLib.t.sol",
      "line_number": 78,
      "vulnerability_type": "gas_limit",
      "severity": "MEDIUM",
      "description": "Gas limit DoS vulnerability potential",
      "code_snippet": "operators._removedOperatorsWithStake.length - 1",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.9,
      "mitigation": "Implement pagination or gas-efficient loops"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/invariants/helpers/OperatorLib.t.sol",
      "line_number": 52,
      "vulnerability_type": "access_control",
      "severity": "HIGH",
      "description": "Public critical function stake lacks access control",
      "code_snippet": "function stake(\n    Operators storage operators,\n    address operatorAddress,\n    uint256 amount\n  ) public {",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": true,
      "function_name": "stake",
      "confidence_score": 0.85,
      "mitigation": "Add appropriate access control modifiers"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/invariants/helpers/OperatorLib.t.sol",
      "line_number": 61,
      "vulnerability_type": "access_control",
      "severity": "HIGH",
      "description": "Public critical function unstake lacks access control",
      "code_snippet": "function unstake(Operators storage operators, address operatorAddress)\n    public\n  {",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": true,
      "function_name": "unstake",
      "confidence_score": 0.85,
      "mitigation": "Add appropriate access control modifiers"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/invariants/helpers/ActorManager.t.sol",
      "line_number": 44,
      "vulnerability_type": "integer_overflow",
      "severity": "HIGH",
      "description": "Integer overflow/underflow risk",
      "code_snippet": "for (uint256 i; i < newOperatorsCount; i++) {",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": true,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Use SafeMath library or Solidity 0.8+ overflow protection"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/invariants/helpers/ActorManager.t.sol",
      "line_number": 44,
      "vulnerability_type": "integer_overflow",
      "severity": "HIGH",
      "description": "Integer overflow/underflow risk",
      "code_snippet": "for (uint256 i; i < newOperatorsCount; i++) {",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": true,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Use SafeMath library or Solidity 0.8+ overflow protection"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/invariants/helpers/ActorManager.t.sol",
      "line_number": 44,
      "vulnerability_type": "gas_limit",
      "severity": "MEDIUM",
      "description": "Gas limit DoS vulnerability potential",
      "code_snippet": "for (uint256 i; i < newOperatorsCount; i++) {",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Implement pagination or gas-efficient loops"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/invariants/helpers/ActorManager.t.sol",
      "line_number": 45,
      "vulnerability_type": "integer_overflow",
      "severity": "HIGH",
      "description": "Integer overflow/underflow risk",
      "code_snippet": "address newOperatorAddress = address(uint160(operatorAddressIndex + 100));",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": true,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Use SafeMath library or Solidity 0.8+ overflow protection"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/invariants/helpers/ActorManager.t.sol",
      "line_number": 46,
      "vulnerability_type": "integer_overflow",
      "severity": "HIGH",
      "description": "Integer overflow/underflow risk",
      "code_snippet": "operatorAddressIndex++;",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": true,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Use SafeMath library or Solidity 0.8+ overflow protection"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/invariants/helpers/ActorManager.t.sol",
      "line_number": 51,
      "vulnerability_type": "reentrancy",
      "severity": "CRITICAL",
      "description": "Potential reentrancy vulnerability detected",
      "code_snippet": "i_link.transfer(newOperatorAddress, INITIAL_MAX_OPERATOR_STAKE * 2);",
      "gas_cost_impact": null,
      "reentrancy_risk": true,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.9,
      "mitigation": "Use ReentrancyGuard or checks-effects-interactions pattern"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/invariants/helpers/ActorManager.t.sol",
      "line_number": 80,
      "vulnerability_type": "integer_overflow",
      "severity": "HIGH",
      "description": "Integer overflow/underflow risk",
      "code_snippet": "for (uint256 i; i < newCommunityStakersCount; i++) {",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": true,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.9,
      "mitigation": "Use SafeMath library or Solidity 0.8+ overflow protection"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/invariants/helpers/ActorManager.t.sol",
      "line_number": 80,
      "vulnerability_type": "integer_overflow",
      "severity": "HIGH",
      "description": "Integer overflow/underflow risk",
      "code_snippet": "for (uint256 i; i < newCommunityStakersCount; i++) {",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": true,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.9,
      "mitigation": "Use SafeMath library or Solidity 0.8+ overflow protection"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/invariants/helpers/ActorManager.t.sol",
      "line_number": 80,
      "vulnerability_type": "gas_limit",
      "severity": "MEDIUM",
      "description": "Gas limit DoS vulnerability potential",
      "code_snippet": "for (uint256 i; i < newCommunityStakersCount; i++) {",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.9,
      "mitigation": "Implement pagination or gas-efficient loops"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/invariants/helpers/ActorManager.t.sol",
      "line_number": 82,
      "vulnerability_type": "integer_overflow",
      "severity": "HIGH",
      "description": "Integer overflow/underflow risk",
      "code_snippet": "uint160(communityStakerAddressIndex + 100_000)",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": true,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.9,
      "mitigation": "Use SafeMath library or Solidity 0.8+ overflow protection"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/invariants/helpers/ActorManager.t.sol",
      "line_number": 84,
      "vulnerability_type": "integer_overflow",
      "severity": "HIGH",
      "description": "Integer overflow/underflow risk",
      "code_snippet": "communityStakerAddressIndex++;",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": true,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.9,
      "mitigation": "Use SafeMath library or Solidity 0.8+ overflow protection"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/invariants/helpers/ActorManager.t.sol",
      "line_number": 89,
      "vulnerability_type": "reentrancy",
      "severity": "CRITICAL",
      "description": "Potential reentrancy vulnerability detected",
      "code_snippet": "i_link.transfer(newCommunityStakerAddress, INITIAL_MAX_COMMUNITY_STAKE);",
      "gas_cost_impact": null,
      "reentrancy_risk": true,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.9,
      "mitigation": "Use ReentrancyGuard or checks-effects-interactions pattern"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/invariants/helpers/ActorManager.t.sol",
      "line_number": 116,
      "vulnerability_type": "gas_limit",
      "severity": "MEDIUM",
      "description": "Gas limit DoS vulnerability potential",
      "code_snippet": "uint256 operatorsCount = s_operators.getOperators().length - 1;",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Implement pagination or gas-efficient loops"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/invariants/helpers/ActorManager.t.sol",
      "line_number": 128,
      "vulnerability_type": "gas_limit",
      "severity": "MEDIUM",
      "description": "Gas limit DoS vulnerability potential",
      "code_snippet": "if (removedOperators.length == 0) return address(0);",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Implement pagination or gas-efficient loops"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/invariants/helpers/ActorManager.t.sol",
      "line_number": 130,
      "vulnerability_type": "gas_limit",
      "severity": "MEDIUM",
      "description": "Gas limit DoS vulnerability potential",
      "code_snippet": "uint256 operatorsCount = removedOperators.length - 1;",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Implement pagination or gas-efficient loops"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/invariants/helpers/ActorManager.t.sol",
      "line_number": 139,
      "vulnerability_type": "gas_limit",
      "severity": "MEDIUM",
      "description": "Gas limit DoS vulnerability potential",
      "code_snippet": "if (operatorsWithStake.length == 0) return address(0);",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.9,
      "mitigation": "Implement pagination or gas-efficient loops"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/invariants/helpers/ActorManager.t.sol",
      "line_number": 141,
      "vulnerability_type": "gas_limit",
      "severity": "MEDIUM",
      "description": "Gas limit DoS vulnerability potential",
      "code_snippet": "uint256 operatorsWithStakeCount = operatorsWithStake.length - 1;",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.9,
      "mitigation": "Implement pagination or gas-efficient loops"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/invariants/helpers/ActorManager.t.sol",
      "line_number": 163,
      "vulnerability_type": "gas_limit",
      "severity": "MEDIUM",
      "description": "Gas limit DoS vulnerability potential",
      "code_snippet": "if (communityStakers.length == 0) return address(0);",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.9,
      "mitigation": "Implement pagination or gas-efficient loops"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/invariants/helpers/ActorManager.t.sol",
      "line_number": 165,
      "vulnerability_type": "gas_limit",
      "severity": "MEDIUM",
      "description": "Gas limit DoS vulnerability potential",
      "code_snippet": "uint256 communityStakersCount = communityStakers.length - 1;",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.9,
      "mitigation": "Implement pagination or gas-efficient loops"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/invariants/helpers/ActorManager.t.sol",
      "line_number": 175,
      "vulnerability_type": "gas_limit",
      "severity": "MEDIUM",
      "description": "Gas limit DoS vulnerability potential",
      "code_snippet": "if (communityStakers.length == 0) return address(0);",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.9,
      "mitigation": "Implement pagination or gas-efficient loops"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/invariants/helpers/ActorManager.t.sol",
      "line_number": 177,
      "vulnerability_type": "gas_limit",
      "severity": "MEDIUM",
      "description": "Gas limit DoS vulnerability potential",
      "code_snippet": "uint256 communityStakersCount = communityStakers.length - 1;",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.9,
      "mitigation": "Implement pagination or gas-efficient loops"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/invariants/helpers/ActorManager.t.sol",
      "line_number": 1,
      "vulnerability_type": "missing_events",
      "severity": "MEDIUM",
      "description": "Critical functions should emit events for transparency",
      "code_snippet": "Contract structure analysis",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.7,
      "mitigation": "Add appropriate event emissions for state changes"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/invariants/helpers/CommunityStakerLib.t.sol",
      "line_number": 37,
      "vulnerability_type": "integer_overflow",
      "severity": "HIGH",
      "description": "Integer overflow/underflow risk",
      "code_snippet": "communityStakers._details[stakerAddress].stake += amount;",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": true,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.9,
      "mitigation": "Use SafeMath library or Solidity 0.8+ overflow protection"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/invariants/helpers/CommunityStakerLib.t.sol",
      "line_number": 32,
      "vulnerability_type": "access_control",
      "severity": "HIGH",
      "description": "Public critical function stake lacks access control",
      "code_snippet": "function stake(\n    CommunityStakers storage communityStakers,\n    address stakerAddress,\n    uint256 amount\n  ) public {",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": true,
      "function_name": "stake",
      "confidence_score": 0.85,
      "mitigation": "Add appropriate access control modifiers"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/invariants/helpers/CommunityStakerLib.t.sol",
      "line_number": 41,
      "vulnerability_type": "access_control",
      "severity": "HIGH",
      "description": "Public critical function unstake lacks access control",
      "code_snippet": "function unstake(\n    CommunityStakers storage communityStakers,\n    address stakerAddress\n  ) public {",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": true,
      "function_name": "unstake",
      "confidence_score": 0.85,
      "mitigation": "Add appropriate access control modifiers"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/invariants/helpers/MockAggregator.t.sol",
      "line_number": 4,
      "vulnerability_type": "price_manipulation",
      "severity": "CRITICAL",
      "description": "Price oracle manipulation risk",
      "code_snippet": "import {AggregatorV3Interface} from '@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol';",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Use multiple price feeds and implement price deviation checks"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/invariants/helpers/MockAggregator.t.sol",
      "line_number": 6,
      "vulnerability_type": "price_manipulation",
      "severity": "CRITICAL",
      "description": "Price oracle manipulation risk",
      "code_snippet": "contract MockAggregator is AggregatorV3Interface {",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Use multiple price feeds and implement price deviation checks"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/invariants/helpers/MockAggregator.t.sol",
      "line_number": 16,
      "vulnerability_type": "integer_overflow",
      "severity": "HIGH",
      "description": "Integer overflow/underflow risk",
      "code_snippet": "s_roundId++;",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": true,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Use SafeMath library or Solidity 0.8+ overflow protection"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/invariants/helpers/MockAggregator.t.sol",
      "line_number": 33,
      "vulnerability_type": "price_manipulation",
      "severity": "CRITICAL",
      "description": "Price oracle manipulation risk",
      "code_snippet": "return 'MockAggregator';",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Use multiple price feeds and implement price deviation checks"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/invariants/helpers/MockAggregator.t.sol",
      "line_number": 57,
      "vulnerability_type": "price_manipulation",
      "severity": "CRITICAL",
      "description": "Price oracle manipulation risk",
      "code_snippet": "function latestRoundData()",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Use multiple price feeds and implement price deviation checks"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/invariants/helpers/TimeWarper.t.sol",
      "line_number": 6,
      "vulnerability_type": "price_manipulation",
      "severity": "CRITICAL",
      "description": "Price oracle manipulation risk",
      "code_snippet": "import {MockAggregator} from './MockAggregator.t.sol';",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Use multiple price feeds and implement price deviation checks"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/invariants/helpers/TimeWarper.t.sol",
      "line_number": 9,
      "vulnerability_type": "price_manipulation",
      "severity": "CRITICAL",
      "description": "Price oracle manipulation risk",
      "code_snippet": "MockAggregator private s_aggregator;",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Use multiple price feeds and implement price deviation checks"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/invariants/helpers/TimeWarper.t.sol",
      "line_number": 11,
      "vulnerability_type": "price_manipulation",
      "severity": "CRITICAL",
      "description": "Price oracle manipulation risk",
      "code_snippet": "constructor(MockAggregator aggregator) {",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Use multiple price feeds and implement price deviation checks"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/invariants/helpers/TimeWarper.t.sol",
      "line_number": 12,
      "vulnerability_type": "price_manipulation",
      "severity": "CRITICAL",
      "description": "Price oracle manipulation risk",
      "code_snippet": "s_aggregator = aggregator;",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Use multiple price feeds and implement price deviation checks"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/invariants/helpers/TimeWarper.t.sol",
      "line_number": 15,
      "vulnerability_type": "price_manipulation",
      "severity": "CRITICAL",
      "description": "Price oracle manipulation risk",
      "code_snippet": "function warp(bool warpAggregator, uint256 amount) external {",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.95,
      "mitigation": "Use multiple price feeds and implement price deviation checks"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/invariants/helpers/TimeWarper.t.sol",
      "line_number": 16,
      "vulnerability_type": "price_manipulation",
      "severity": "CRITICAL",
      "description": "Price oracle manipulation risk",
      "code_snippet": "if (warpAggregator) {",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Use multiple price feeds and implement price deviation checks"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/invariants/helpers/TimeWarper.t.sol",
      "line_number": 18,
      "vulnerability_type": "price_manipulation",
      "severity": "CRITICAL",
      "description": "Price oracle manipulation risk",
      "code_snippet": "s_aggregator.setUpdatedAt(",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Use multiple price feeds and implement price deviation checks"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/invariants/helpers/TimeWarper.t.sol",
      "line_number": 19,
      "vulnerability_type": "timestamp_dependency",
      "severity": "MEDIUM",
      "description": "Timestamp dependency detected",
      "code_snippet": "block.timestamp -",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Use block.number or external oracle for timing"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/test/invariants/helpers/TimeWarper.t.sol",
      "line_number": 23,
      "vulnerability_type": "timestamp_dependency",
      "severity": "MEDIUM",
      "description": "Timestamp dependency detected",
      "code_snippet": "vm.warp(bound(amount, block.timestamp + 1, block.timestamp + 30 days));",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Use block.number or external oracle for timing"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/contracts/StakingPoolLib.sol",
      "line_number": 214,
      "vulnerability_type": "integer_overflow",
      "severity": "HIGH",
      "description": "Integer overflow/underflow risk",
      "code_snippet": "uint256(poolState.totalCommunityStakedAmount) +",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": true,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.9,
      "mitigation": "Use SafeMath library or Solidity 0.8+ overflow protection"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/contracts/StakingPoolLib.sol",
      "line_number": 230,
      "vulnerability_type": "integer_overflow",
      "severity": "HIGH",
      "description": "Integer overflow/underflow risk",
      "code_snippet": "(uint256(poolState.operatorsCount) *",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": true,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Use SafeMath library or Solidity 0.8+ overflow protection"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/contracts/StakingPoolLib.sol",
      "line_number": 244,
      "vulnerability_type": "integer_overflow",
      "severity": "HIGH",
      "description": "Integer overflow/underflow risk",
      "code_snippet": "uint256 requiredReservedPoolSpace = operators.length *",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": true,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Use SafeMath library or Solidity 0.8+ overflow protection"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/contracts/StakingPoolLib.sol",
      "line_number": 244,
      "vulnerability_type": "gas_limit",
      "severity": "MEDIUM",
      "description": "Gas limit DoS vulnerability potential",
      "code_snippet": "uint256 requiredReservedPoolSpace = operators.length *",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Implement pagination or gas-efficient loops"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/contracts/StakingPoolLib.sol",
      "line_number": 253,
      "vulnerability_type": "integer_overflow",
      "severity": "HIGH",
      "description": "Integer overflow/underflow risk",
      "code_snippet": "for (uint256 i; i < operators.length; i++) {",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": true,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Use SafeMath library or Solidity 0.8+ overflow protection"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/contracts/StakingPoolLib.sol",
      "line_number": 253,
      "vulnerability_type": "integer_overflow",
      "severity": "HIGH",
      "description": "Integer overflow/underflow risk",
      "code_snippet": "for (uint256 i; i < operators.length; i++) {",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": true,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Use SafeMath library or Solidity 0.8+ overflow protection"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/contracts/StakingPoolLib.sol",
      "line_number": 253,
      "vulnerability_type": "gas_limit",
      "severity": "MEDIUM",
      "description": "Gas limit DoS vulnerability potential",
      "code_snippet": "for (uint256 i; i < operators.length; i++) {",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Implement pagination or gas-efficient loops"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/contracts/StakingPoolLib.sol",
      "line_number": 253,
      "vulnerability_type": "gas_limit",
      "severity": "MEDIUM",
      "description": "Gas limit DoS vulnerability potential",
      "code_snippet": "for (uint256 i; i < operators.length; i++) {",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Implement pagination or gas-efficient loops"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/contracts/StakingPoolLib.sol",
      "line_number": 269,
      "vulnerability_type": "gas_limit",
      "severity": "MEDIUM",
      "description": "Gas limit DoS vulnerability potential",
      "code_snippet": "operators.length._toUint8();",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Implement pagination or gas-efficient loops"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/contracts/StakingPoolLib.sol",
      "line_number": 277,
      "vulnerability_type": "integer_overflow",
      "severity": "HIGH",
      "description": "Integer overflow/underflow risk",
      "code_snippet": "for (uint256 i; i < pool.feedOperators.length; i++) {",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": true,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.9,
      "mitigation": "Use SafeMath library or Solidity 0.8+ overflow protection"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/contracts/StakingPoolLib.sol",
      "line_number": 277,
      "vulnerability_type": "integer_overflow",
      "severity": "HIGH",
      "description": "Integer overflow/underflow risk",
      "code_snippet": "for (uint256 i; i < pool.feedOperators.length; i++) {",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": true,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.9,
      "mitigation": "Use SafeMath library or Solidity 0.8+ overflow protection"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/contracts/StakingPoolLib.sol",
      "line_number": 277,
      "vulnerability_type": "gas_limit",
      "severity": "MEDIUM",
      "description": "Gas limit DoS vulnerability potential",
      "code_snippet": "for (uint256 i; i < pool.feedOperators.length; i++) {",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.9,
      "mitigation": "Implement pagination or gas-efficient loops"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/contracts/StakingPoolLib.sol",
      "line_number": 277,
      "vulnerability_type": "gas_limit",
      "severity": "MEDIUM",
      "description": "Gas limit DoS vulnerability potential",
      "code_snippet": "for (uint256 i; i < pool.feedOperators.length; i++) {",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.9,
      "mitigation": "Implement pagination or gas-efficient loops"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/contracts/StakingPoolLib.sol",
      "line_number": 282,
      "vulnerability_type": "integer_overflow",
      "severity": "HIGH",
      "description": "Integer overflow/underflow risk",
      "code_snippet": "for (uint256 i; i < operators.length; i++) {",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": true,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Use SafeMath library or Solidity 0.8+ overflow protection"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/contracts/StakingPoolLib.sol",
      "line_number": 282,
      "vulnerability_type": "integer_overflow",
      "severity": "HIGH",
      "description": "Integer overflow/underflow risk",
      "code_snippet": "for (uint256 i; i < operators.length; i++) {",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": true,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Use SafeMath library or Solidity 0.8+ overflow protection"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/contracts/StakingPoolLib.sol",
      "line_number": 282,
      "vulnerability_type": "gas_limit",
      "severity": "MEDIUM",
      "description": "Gas limit DoS vulnerability potential",
      "code_snippet": "for (uint256 i; i < operators.length; i++) {",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Implement pagination or gas-efficient loops"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/contracts/StakingPoolLib.sol",
      "line_number": 282,
      "vulnerability_type": "gas_limit",
      "severity": "MEDIUM",
      "description": "Gas limit DoS vulnerability potential",
      "code_snippet": "for (uint256 i; i < operators.length; i++) {",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Implement pagination or gas-efficient loops"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/contracts/RewardLib.sol",
      "line_number": 128,
      "vulnerability_type": "timestamp_dependency",
      "severity": "MEDIUM",
      "description": "Timestamp dependency detected",
      "code_snippet": "uint32 blockTimestamp = block.timestamp._toUint32();",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Use block.number or external oracle for timing"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/contracts/RewardLib.sol",
      "line_number": 153,
      "vulnerability_type": "timestamp_dependency",
      "severity": "MEDIUM",
      "description": "Timestamp dependency detected",
      "code_snippet": "return reward.endTimestamp <= block.timestamp;",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Use block.number or external oracle for timing"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/contracts/RewardLib.sol",
      "line_number": 162,
      "vulnerability_type": "integer_overflow",
      "severity": "HIGH",
      "description": "Integer overflow/underflow risk",
      "code_snippet": "reward.base.cumulativePerMicroLINK += (uint256(reward.base.rate) *",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": true,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Use SafeMath library or Solidity 0.8+ overflow protection"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/contracts/RewardLib.sol",
      "line_number": 162,
      "vulnerability_type": "integer_overflow",
      "severity": "HIGH",
      "description": "Integer overflow/underflow risk",
      "code_snippet": "reward.base.cumulativePerMicroLINK += (uint256(reward.base.rate) *",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": true,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Use SafeMath library or Solidity 0.8+ overflow protection"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/contracts/RewardLib.sol",
      "line_number": 193,
      "vulnerability_type": "integer_overflow",
      "severity": "HIGH",
      "description": "Integer overflow/underflow risk",
      "code_snippet": "return (amount * uint256(reward.base.rate) * duration) / REWARD_PRECISION;",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": true,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Use SafeMath library or Solidity 0.8+ overflow protection"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/contracts/RewardLib.sol",
      "line_number": 207,
      "vulnerability_type": "timestamp_dependency",
      "severity": "MEDIUM",
      "description": "Timestamp dependency detected",
      "code_snippet": ": block.timestamp - uint256(reward.delegated.lastAccumulateTimestamp);",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Use block.number or external oracle for timing"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/contracts/RewardLib.sol",
      "line_number": 210,
      "vulnerability_type": "integer_overflow",
      "severity": "HIGH",
      "description": "Integer overflow/underflow risk",
      "code_snippet": "uint256(reward.delegated.cumulativePerDelegate) +",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": true,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Use SafeMath library or Solidity 0.8+ overflow protection"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/contracts/RewardLib.sol",
      "line_number": 234,
      "vulnerability_type": "timestamp_dependency",
      "severity": "MEDIUM",
      "description": "Timestamp dependency detected",
      "code_snippet": ": block.timestamp - uint256(reward.base.lastAccumulateTimestamp);",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Use block.number or external oracle for timing"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/contracts/RewardLib.sol",
      "line_number": 238,
      "vulnerability_type": "integer_overflow",
      "severity": "HIGH",
      "description": "Integer overflow/underflow risk",
      "code_snippet": "(uint256(reward.base.cumulativePerMicroLINK) +",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": true,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Use SafeMath library or Solidity 0.8+ overflow protection"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/contracts/RewardLib.sol",
      "line_number": 239,
      "vulnerability_type": "integer_overflow",
      "severity": "HIGH",
      "description": "Integer overflow/underflow risk",
      "code_snippet": "uint256(reward.base.rate) *",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": true,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Use SafeMath library or Solidity 0.8+ overflow protection"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/contracts/RewardLib.sol",
      "line_number": 293,
      "vulnerability_type": "integer_overflow",
      "severity": "HIGH",
      "description": "Integer overflow/underflow risk",
      "code_snippet": "if (baseRewardAmount % REWARD_PRECISION > 0) deltaBaseReward++;",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": true,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Use SafeMath library or Solidity 0.8+ overflow protection"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/contracts/RewardLib.sol",
      "line_number": 294,
      "vulnerability_type": "integer_overflow",
      "severity": "HIGH",
      "description": "Integer overflow/underflow risk",
      "code_snippet": "if (delegatedRewardAmount % REWARD_PRECISION > 0) deltaDelegatedReward++;",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": true,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Use SafeMath library or Solidity 0.8+ overflow protection"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/contracts/RewardLib.sol",
      "line_number": 296,
      "vulnerability_type": "integer_overflow",
      "severity": "HIGH",
      "description": "Integer overflow/underflow risk",
      "code_snippet": "reward.reserved.base += deltaBaseReward;",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": true,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Use SafeMath library or Solidity 0.8+ overflow protection"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/contracts/RewardLib.sol",
      "line_number": 297,
      "vulnerability_type": "integer_overflow",
      "severity": "HIGH",
      "description": "Integer overflow/underflow risk",
      "code_snippet": "reward.reserved.delegated += deltaDelegatedReward;",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": true,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Use SafeMath library or Solidity 0.8+ overflow protection"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/contracts/RewardLib.sol",
      "line_number": 299,
      "vulnerability_type": "integer_overflow",
      "severity": "HIGH",
      "description": "Integer overflow/underflow risk",
      "code_snippet": "reward.reserved.base -= deltaBaseReward;",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": true,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Use SafeMath library or Solidity 0.8+ overflow protection"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/contracts/RewardLib.sol",
      "line_number": 300,
      "vulnerability_type": "integer_overflow",
      "severity": "HIGH",
      "description": "Integer overflow/underflow risk",
      "code_snippet": "reward.reserved.delegated -= deltaDelegatedReward;",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": true,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Use SafeMath library or Solidity 0.8+ overflow protection"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/contracts/RewardLib.sol",
      "line_number": 355,
      "vulnerability_type": "timestamp_dependency",
      "severity": "MEDIUM",
      "description": "Timestamp dependency detected",
      "code_snippet": "reward.endTimestamp = block.timestamp;",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Use block.number or external oracle for timing"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/contracts/RewardLib.sol",
      "line_number": 384,
      "vulnerability_type": "timestamp_dependency",
      "severity": "MEDIUM",
      "description": "Timestamp dependency detected",
      "code_snippet": "return _isDepleted(reward) ? 0 : reward.endTimestamp - block.timestamp;",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Use block.number or external oracle for timing"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/contracts/RewardLib.sol",
      "line_number": 422,
      "vulnerability_type": "integer_overflow",
      "severity": "HIGH",
      "description": "Integer overflow/underflow risk",
      "code_snippet": "uint256 availableRewardDuration = (remainingRewards * REWARD_PRECISION) /",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": true,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Use SafeMath library or Solidity 0.8+ overflow protection"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/contracts/RewardLib.sol",
      "line_number": 446,
      "vulnerability_type": "timestamp_dependency",
      "severity": "MEDIUM",
      "description": "Timestamp dependency detected",
      "code_snippet": "reward.endTimestamp = block.timestamp + availableRewardDuration;",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Use block.number or external oracle for timing"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/contracts/RewardLib.sol",
      "line_number": 507,
      "vulnerability_type": "gas_limit",
      "severity": "MEDIUM",
      "description": "Gas limit DoS vulnerability potential",
      "code_snippet": "uint256[] memory slashedBaseAmounts = new uint256[](feedOperators.length);",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.9,
      "mitigation": "Implement pagination or gas-efficient loops"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/contracts/RewardLib.sol",
      "line_number": 509,
      "vulnerability_type": "gas_limit",
      "severity": "MEDIUM",
      "description": "Gas limit DoS vulnerability potential",
      "code_snippet": "feedOperators.length",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.9,
      "mitigation": "Implement pagination or gas-efficient loops"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/contracts/RewardLib.sol",
      "line_number": 512,
      "vulnerability_type": "integer_overflow",
      "severity": "HIGH",
      "description": "Integer overflow/underflow risk",
      "code_snippet": "for (uint256 i; i < feedOperators.length; i++) {",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": true,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.9,
      "mitigation": "Use SafeMath library or Solidity 0.8+ overflow protection"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/contracts/RewardLib.sol",
      "line_number": 512,
      "vulnerability_type": "integer_overflow",
      "severity": "HIGH",
      "description": "Integer overflow/underflow risk",
      "code_snippet": "for (uint256 i; i < feedOperators.length; i++) {",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": true,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.9,
      "mitigation": "Use SafeMath library or Solidity 0.8+ overflow protection"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/contracts/RewardLib.sol",
      "line_number": 512,
      "vulnerability_type": "gas_limit",
      "severity": "MEDIUM",
      "description": "Gas limit DoS vulnerability potential",
      "code_snippet": "for (uint256 i; i < feedOperators.length; i++) {",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.9,
      "mitigation": "Implement pagination or gas-efficient loops"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/contracts/RewardLib.sol",
      "line_number": 512,
      "vulnerability_type": "gas_limit",
      "severity": "MEDIUM",
      "description": "Gas limit DoS vulnerability potential",
      "code_snippet": "for (uint256 i; i < feedOperators.length; i++) {",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.9,
      "mitigation": "Implement pagination or gas-efficient loops"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/contracts/RewardLib.sol",
      "line_number": 528,
      "vulnerability_type": "integer_overflow",
      "severity": "HIGH",
      "description": "Integer overflow/underflow risk",
      "code_snippet": "totalSlashedBaseReward += slashedBaseAmounts[i];",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": true,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Use SafeMath library or Solidity 0.8+ overflow protection"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/contracts/RewardLib.sol",
      "line_number": 529,
      "vulnerability_type": "integer_overflow",
      "severity": "HIGH",
      "description": "Integer overflow/underflow risk",
      "code_snippet": "totalSlashedDelegatedReward += slashedDelegatedAmounts[i];",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": true,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Use SafeMath library or Solidity 0.8+ overflow protection"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/contracts/RewardLib.sol",
      "line_number": 531,
      "vulnerability_type": "integer_overflow",
      "severity": "HIGH",
      "description": "Integer overflow/underflow risk",
      "code_snippet": "reward.reserved.base -= totalSlashedBaseReward._toUint96();",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": true,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Use SafeMath library or Solidity 0.8+ overflow protection"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/contracts/RewardLib.sol",
      "line_number": 532,
      "vulnerability_type": "integer_overflow",
      "severity": "HIGH",
      "description": "Integer overflow/underflow risk",
      "code_snippet": "reward.reserved.delegated -= totalSlashedDelegatedReward._toUint96();",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": true,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Use SafeMath library or Solidity 0.8+ overflow protection"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/contracts/RewardLib.sol",
      "line_number": 584,
      "vulnerability_type": "integer_overflow",
      "severity": "HIGH",
      "description": "Integer overflow/underflow risk",
      "code_snippet": "reward.missed[operator].base += slashedRewards._toUint96();",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": true,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Use SafeMath library or Solidity 0.8+ overflow protection"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/contracts/RewardLib.sol",
      "line_number": 604,
      "vulnerability_type": "integer_overflow",
      "severity": "HIGH",
      "description": "Integer overflow/underflow risk",
      "code_snippet": "reward.missed[operator].delegated += slashedRewards._toUint96();",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": true,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Use SafeMath library or Solidity 0.8+ overflow protection"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/contracts/RewardLib.sol",
      "line_number": 641,
      "vulnerability_type": "timestamp_dependency",
      "severity": "MEDIUM",
      "description": "Timestamp dependency detected",
      "code_snippet": "return Math.min(uint256(reward.endTimestamp), block.timestamp);",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Use block.number or external oracle for timing"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/contracts/Staking.sol",
      "line_number": 6,
      "vulnerability_type": "price_manipulation",
      "severity": "CRITICAL",
      "description": "Price oracle manipulation risk",
      "code_snippet": "import {AggregatorV3Interface} from '@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol';",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Use multiple price feeds and implement price deviation checks"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/contracts/Staking.sol",
      "line_number": 40,
      "vulnerability_type": "price_manipulation",
      "severity": "CRITICAL",
      "description": "Price oracle manipulation risk",
      "code_snippet": "AggregatorV3Interface monitoredFeed;",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.9,
      "mitigation": "Use multiple price feeds and implement price deviation checks"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/contracts/Staking.sol",
      "line_number": 81,
      "vulnerability_type": "price_manipulation",
      "severity": "CRITICAL",
      "description": "Price oracle manipulation risk",
      "code_snippet": "AggregatorV3Interface private immutable i_monitoredFeed;",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.9,
      "mitigation": "Use multiple price feeds and implement price deviation checks"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/contracts/Staking.sol",
      "line_number": 180,
      "vulnerability_type": "access_control",
      "severity": "HIGH",
      "description": "Access control mechanism detected - verify implementation",
      "code_snippet": "function setMerkleRoot(bytes32 newMerkleRoot) external override onlyOwner {",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": true,
      "function_name": null,
      "confidence_score": 0.95,
      "mitigation": "Implement proper role-based access control"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/contracts/Staking.sol",
      "line_number": 199,
      "vulnerability_type": "access_control",
      "severity": "HIGH",
      "description": "Access control mechanism detected - verify implementation",
      "code_snippet": ") external override(IStakingOwner) onlyOwner whenActive {",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": true,
      "function_name": null,
      "confidence_score": 0.95,
      "mitigation": "Implement proper role-based access control"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/contracts/Staking.sol",
      "line_number": 220,
      "vulnerability_type": "access_control",
      "severity": "HIGH",
      "description": "Access control mechanism detected - verify implementation",
      "code_snippet": "onlyOwner",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": true,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Implement proper role-based access control"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/contracts/Staking.sol",
      "line_number": 229,
      "vulnerability_type": "access_control",
      "severity": "HIGH",
      "description": "Access control mechanism detected - verify implementation",
      "code_snippet": "onlyOwner",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": true,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Implement proper role-based access control"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/contracts/Staking.sol",
      "line_number": 248,
      "vulnerability_type": "access_control",
      "severity": "HIGH",
      "description": "Access control mechanism detected - verify implementation",
      "code_snippet": "function conclude() external override(IStakingOwner) onlyOwner whenActive {",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": true,
      "function_name": null,
      "confidence_score": 0.95,
      "mitigation": "Implement proper role-based access control"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/contracts/Staking.sol",
      "line_number": 261,
      "vulnerability_type": "access_control",
      "severity": "HIGH",
      "description": "Access control mechanism detected - verify implementation",
      "code_snippet": "onlyOwner",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": true,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Implement proper role-based access control"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/contracts/Staking.sol",
      "line_number": 284,
      "vulnerability_type": "access_control",
      "severity": "HIGH",
      "description": "Access control mechanism detected - verify implementation",
      "code_snippet": "onlyOwner",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": true,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Implement proper role-based access control"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/contracts/Staking.sol",
      "line_number": 293,
      "vulnerability_type": "reentrancy",
      "severity": "CRITICAL",
      "description": "Potential reentrancy vulnerability detected",
      "code_snippet": "i_LINK.transfer(msg.sender, unusedRewards);",
      "gas_cost_impact": null,
      "reentrancy_risk": true,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.9,
      "mitigation": "Use ReentrancyGuard or checks-effects-interactions pattern"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/contracts/Staking.sol",
      "line_number": 306,
      "vulnerability_type": "access_control",
      "severity": "HIGH",
      "description": "Access control mechanism detected - verify implementation",
      "code_snippet": "onlyOwner",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": true,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Implement proper role-based access control"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/contracts/Staking.sol",
      "line_number": 320,
      "vulnerability_type": "access_control",
      "severity": "HIGH",
      "description": "Access control mechanism detected - verify implementation",
      "code_snippet": "onlyOwner",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": true,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Implement proper role-based access control"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/contracts/Staking.sol",
      "line_number": 327,
      "vulnerability_type": "integer_overflow",
      "severity": "HIGH",
      "description": "Integer overflow/underflow risk",
      "code_snippet": "for (uint256 i; i < operators.length; i++) {",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": true,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Use SafeMath library or Solidity 0.8+ overflow protection"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/contracts/Staking.sol",
      "line_number": 327,
      "vulnerability_type": "integer_overflow",
      "severity": "HIGH",
      "description": "Integer overflow/underflow risk",
      "code_snippet": "for (uint256 i; i < operators.length; i++) {",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": true,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Use SafeMath library or Solidity 0.8+ overflow protection"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/contracts/Staking.sol",
      "line_number": 327,
      "vulnerability_type": "gas_limit",
      "severity": "MEDIUM",
      "description": "Gas limit DoS vulnerability potential",
      "code_snippet": "for (uint256 i; i < operators.length; i++) {",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Implement pagination or gas-efficient loops"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/contracts/Staking.sol",
      "line_number": 327,
      "vulnerability_type": "gas_limit",
      "severity": "MEDIUM",
      "description": "Gas limit DoS vulnerability potential",
      "code_snippet": "for (uint256 i; i < operators.length; i++) {",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Implement pagination or gas-efficient loops"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/contracts/Staking.sol",
      "line_number": 343,
      "vulnerability_type": "integer_overflow",
      "severity": "HIGH",
      "description": "Integer overflow/underflow risk",
      "code_snippet": "s_reward.reserved.base -= getBaseReward(operator)._toUint96();",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": true,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Use SafeMath library or Solidity 0.8+ overflow protection"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/contracts/Staking.sol",
      "line_number": 345,
      "vulnerability_type": "integer_overflow",
      "severity": "HIGH",
      "description": "Integer overflow/underflow risk",
      "code_snippet": "s_reward.reserved.base -= s_reward",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": true,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Use SafeMath library or Solidity 0.8+ overflow protection"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/contracts/Staking.sol",
      "line_number": 352,
      "vulnerability_type": "integer_overflow",
      "severity": "HIGH",
      "description": "Integer overflow/underflow risk",
      "code_snippet": "s_reward.reserved.delegated -= getDelegationReward(operator)",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": true,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Use SafeMath library or Solidity 0.8+ overflow protection"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/contracts/Staking.sol",
      "line_number": 355,
      "vulnerability_type": "integer_overflow",
      "severity": "HIGH",
      "description": "Integer overflow/underflow risk",
      "code_snippet": "s_reward.delegated.delegatesCount -= 1;",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": true,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Use SafeMath library or Solidity 0.8+ overflow protection"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/contracts/Staking.sol",
      "line_number": 358,
      "vulnerability_type": "integer_overflow",
      "severity": "HIGH",
      "description": "Integer overflow/underflow risk",
      "code_snippet": "s_pool.state.totalOperatorStakedAmount -= castPrincipal;",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": true,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.9,
      "mitigation": "Use SafeMath library or Solidity 0.8+ overflow protection"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/contracts/Staking.sol",
      "line_number": 361,
      "vulnerability_type": "integer_overflow",
      "severity": "HIGH",
      "description": "Integer overflow/underflow risk",
      "code_snippet": "s_pool.totalOperatorRemovedAmount += castPrincipal;",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": true,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Use SafeMath library or Solidity 0.8+ overflow protection"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/contracts/Staking.sol",
      "line_number": 374,
      "vulnerability_type": "integer_overflow",
      "severity": "HIGH",
      "description": "Integer overflow/underflow risk",
      "code_snippet": "s_pool.state.operatorsCount -= operators.length._toUint8();",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": true,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Use SafeMath library or Solidity 0.8+ overflow protection"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/contracts/Staking.sol",
      "line_number": 374,
      "vulnerability_type": "gas_limit",
      "severity": "MEDIUM",
      "description": "Gas limit DoS vulnerability potential",
      "code_snippet": "s_pool.state.operatorsCount -= operators.length._toUint8();",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Implement pagination or gas-efficient loops"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/contracts/Staking.sol",
      "line_number": 381,
      "vulnerability_type": "access_control",
      "severity": "HIGH",
      "description": "Access control mechanism detected - verify implementation",
      "code_snippet": "onlyOwner",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": true,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Implement proper role-based access control"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/contracts/Staking.sol",
      "line_number": 403,
      "vulnerability_type": "access_control",
      "severity": "HIGH",
      "description": "Access control mechanism detected - verify implementation",
      "code_snippet": "function emergencyPause() external override(IStakingOwner) onlyOwner {",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": true,
      "function_name": null,
      "confidence_score": 0.95,
      "mitigation": "Implement proper role-based access control"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/contracts/Staking.sol",
      "line_number": 408,
      "vulnerability_type": "access_control",
      "severity": "HIGH",
      "description": "Access control mechanism detected - verify implementation",
      "code_snippet": "function emergencyUnpause() external override(IStakingOwner) onlyOwner {",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": true,
      "function_name": null,
      "confidence_score": 0.95,
      "mitigation": "Implement proper role-based access control"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/contracts/Staking.sol",
      "line_number": 440,
      "vulnerability_type": "access_control",
      "severity": "HIGH",
      "description": "Access control mechanism detected - verify implementation",
      "code_snippet": "onlyOwner",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": true,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Implement proper role-based access control"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/contracts/Staking.sol",
      "line_number": 443,
      "vulnerability_type": "gas_limit",
      "severity": "MEDIUM",
      "description": "Gas limit DoS vulnerability potential",
      "code_snippet": "migrationTarget.code.length == 0 ||",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Implement pagination or gas-efficient loops"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/contracts/Staking.sol",
      "line_number": 452,
      "vulnerability_type": "timestamp_dependency",
      "severity": "MEDIUM",
      "description": "Timestamp dependency detected",
      "code_snippet": "s_proposedMigrationTargetAt = block.timestamp;",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Use block.number or external oracle for timing"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/contracts/Staking.sol",
      "line_number": 457,
      "vulnerability_type": "access_control",
      "severity": "HIGH",
      "description": "Access control mechanism detected - verify implementation",
      "code_snippet": "function acceptMigrationTarget() external override(IMigratable) onlyOwner {",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": true,
      "function_name": null,
      "confidence_score": 0.95,
      "mitigation": "Implement proper role-based access control"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/contracts/Staking.sol",
      "line_number": 461,
      "vulnerability_type": "integer_overflow",
      "severity": "HIGH",
      "description": "Integer overflow/underflow risk",
      "code_snippet": "if (block.timestamp < (uint256(s_proposedMigrationTargetAt) + 7 days))",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": true,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Use SafeMath library or Solidity 0.8+ overflow protection"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/contracts/Staking.sol",
      "line_number": 461,
      "vulnerability_type": "timestamp_dependency",
      "severity": "MEDIUM",
      "description": "Timestamp dependency detected",
      "code_snippet": "if (block.timestamp < (uint256(s_proposedMigrationTargetAt) + 7 days))",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Use block.number or external oracle for timing"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/contracts/Staking.sol",
      "line_number": 485,
      "vulnerability_type": "integer_overflow",
      "severity": "HIGH",
      "description": "Integer overflow/underflow risk",
      "code_snippet": "uint256(amount + baseReward + delegationReward),",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": true,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Use SafeMath library or Solidity 0.8+ overflow protection"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/contracts/Staking.sol",
      "line_number": 500,
      "vulnerability_type": "price_manipulation",
      "severity": "CRITICAL",
      "description": "Price oracle manipulation risk",
      "code_snippet": ".latestRoundData();",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Use multiple price feeds and implement price deviation checks"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/contracts/Staking.sol",
      "line_number": 504,
      "vulnerability_type": "timestamp_dependency",
      "severity": "MEDIUM",
      "description": "Timestamp dependency detected",
      "code_snippet": "if (block.timestamp < lastFeedUpdatedAt + i_priorityPeriodThreshold)",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.9,
      "mitigation": "Use block.number or external oracle for timing"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/contracts/Staking.sol",
      "line_number": 507,
      "vulnerability_type": "timestamp_dependency",
      "severity": "MEDIUM",
      "description": "Timestamp dependency detected",
      "code_snippet": "bool isInPriorityPeriod = block.timestamp <",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Use block.number or external oracle for timing"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/contracts/Staking.sol",
      "line_number": 535,
      "vulnerability_type": "reentrancy",
      "severity": "CRITICAL",
      "description": "Potential reentrancy vulnerability detected",
      "code_snippet": "i_LINK.transfer(msg.sender, rewardAmount);",
      "gas_cost_impact": null,
      "reentrancy_risk": true,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.9,
      "mitigation": "Use ReentrancyGuard or checks-effects-interactions pattern"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/contracts/Staking.sol",
      "line_number": 565,
      "vulnerability_type": "price_manipulation",
      "severity": "CRITICAL",
      "description": "Price oracle manipulation risk",
      "code_snippet": ".latestRoundData();",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Use multiple price feeds and implement price deviation checks"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/contracts/Staking.sol",
      "line_number": 569,
      "vulnerability_type": "timestamp_dependency",
      "severity": "MEDIUM",
      "description": "Timestamp dependency detected",
      "code_snippet": "if (block.timestamp < updatedAt + i_priorityPeriodThreshold) return false;",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Use block.number or external oracle for timing"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/contracts/Staking.sol",
      "line_number": 572,
      "vulnerability_type": "timestamp_dependency",
      "severity": "MEDIUM",
      "description": "Timestamp dependency detected",
      "code_snippet": "if (block.timestamp >= updatedAt + i_regularPeriodThreshold) return true;",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Use block.number or external oracle for timing"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/contracts/Staking.sol",
      "line_number": 587,
      "vulnerability_type": "reentrancy",
      "severity": "CRITICAL",
      "description": "Potential reentrancy vulnerability detected",
      "code_snippet": "i_LINK.transfer(msg.sender, amount + baseReward + delegationReward);",
      "gas_cost_impact": null,
      "reentrancy_risk": true,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.9,
      "mitigation": "Use ReentrancyGuard or checks-effects-interactions pattern"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/contracts/Staking.sol",
      "line_number": 595,
      "vulnerability_type": "integer_overflow",
      "severity": "HIGH",
      "description": "Integer overflow/underflow risk",
      "code_snippet": "s_pool.totalOperatorRemovedAmount -= amount;",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": true,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Use SafeMath library or Solidity 0.8+ overflow protection"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/contracts/Staking.sol",
      "line_number": 598,
      "vulnerability_type": "reentrancy",
      "severity": "CRITICAL",
      "description": "Potential reentrancy vulnerability detected",
      "code_snippet": "i_LINK.transfer(msg.sender, amount);",
      "gas_cost_impact": null,
      "reentrancy_risk": true,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.9,
      "mitigation": "Use ReentrancyGuard or checks-effects-interactions pattern"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/contracts/Staking.sol",
      "line_number": 855,
      "vulnerability_type": "integer_overflow",
      "severity": "HIGH",
      "description": "Integer overflow/underflow risk",
      "code_snippet": "amount -= remainder;",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": true,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Use SafeMath library or Solidity 0.8+ overflow protection"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/contracts/Staking.sol",
      "line_number": 856,
      "vulnerability_type": "reentrancy",
      "severity": "CRITICAL",
      "description": "Potential reentrancy vulnerability detected",
      "code_snippet": "i_LINK.transfer(sender, remainder);",
      "gas_cost_impact": null,
      "reentrancy_risk": true,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.9,
      "mitigation": "Use ReentrancyGuard or checks-effects-interactions pattern"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/contracts/Staking.sol",
      "line_number": 865,
      "vulnerability_type": "gas_limit",
      "severity": "MEDIUM",
      "description": "Gas limit DoS vulnerability potential",
      "code_snippet": "if (data.length == 0) revert AccessForbidden();",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Implement pagination or gas-efficient loops"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/contracts/Staking.sol",
      "line_number": 891,
      "vulnerability_type": "integer_overflow",
      "severity": "HIGH",
      "description": "Integer overflow/underflow risk",
      "code_snippet": "uint256 newStakedAmount = currentStakedAmount + amount;",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": true,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.9,
      "mitigation": "Use SafeMath library or Solidity 0.8+ overflow protection"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/contracts/Staking.sol",
      "line_number": 916,
      "vulnerability_type": "integer_overflow",
      "severity": "HIGH",
      "description": "Integer overflow/underflow risk",
      "code_snippet": "s_reward.missed[staker].base += s_reward",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": true,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.9,
      "mitigation": "Use SafeMath library or Solidity 0.8+ overflow protection"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/contracts/Staking.sol",
      "line_number": 923,
      "vulnerability_type": "integer_overflow",
      "severity": "HIGH",
      "description": "Integer overflow/underflow risk",
      "code_snippet": "s_pool.state.totalCommunityStakedAmount += amount._toUint96();",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": true,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.9,
      "mitigation": "Use SafeMath library or Solidity 0.8+ overflow protection"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/contracts/Staking.sol",
      "line_number": 942,
      "vulnerability_type": "integer_overflow",
      "severity": "HIGH",
      "description": "Integer overflow/underflow risk",
      "code_snippet": "uint256 newStakedAmount = currentStakedAmount + amount;",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": true,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.9,
      "mitigation": "Use SafeMath library or Solidity 0.8+ overflow protection"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/contracts/Staking.sol",
      "line_number": 971,
      "vulnerability_type": "integer_overflow",
      "severity": "HIGH",
      "description": "Integer overflow/underflow risk",
      "code_snippet": "s_reward.reserved.delegated -= s_reward.delegated.cumulativePerDelegate;",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": true,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Use SafeMath library or Solidity 0.8+ overflow protection"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/contracts/Staking.sol",
      "line_number": 982,
      "vulnerability_type": "integer_overflow",
      "severity": "HIGH",
      "description": "Integer overflow/underflow risk",
      "code_snippet": "s_reward.missed[staker].base += s_reward",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": true,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.9,
      "mitigation": "Use SafeMath library or Solidity 0.8+ overflow protection"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/contracts/Staking.sol",
      "line_number": 985,
      "vulnerability_type": "integer_overflow",
      "severity": "HIGH",
      "description": "Integer overflow/underflow risk",
      "code_snippet": "s_pool.state.totalOperatorStakedAmount += amount._toUint96();",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": true,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.9,
      "mitigation": "Use SafeMath library or Solidity 0.8+ overflow protection"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/contracts/Staking.sol",
      "line_number": 1019,
      "vulnerability_type": "integer_overflow",
      "severity": "HIGH",
      "description": "Integer overflow/underflow risk",
      "code_snippet": "s_pool.state.totalOperatorStakedAmount -= stakerAccount.stakedAmount;",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": true,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.9,
      "mitigation": "Use SafeMath library or Solidity 0.8+ overflow protection"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/contracts/Staking.sol",
      "line_number": 1030,
      "vulnerability_type": "integer_overflow",
      "severity": "HIGH",
      "description": "Integer overflow/underflow risk",
      "code_snippet": "s_reward.reserved.base -= baseReward._toUint96();",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": true,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Use SafeMath library or Solidity 0.8+ overflow protection"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/contracts/Staking.sol",
      "line_number": 1031,
      "vulnerability_type": "integer_overflow",
      "severity": "HIGH",
      "description": "Integer overflow/underflow risk",
      "code_snippet": "s_reward.reserved.delegated -= delegationReward._toUint96();",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": true,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Use SafeMath library or Solidity 0.8+ overflow protection"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/contracts/Staking.sol",
      "line_number": 1034,
      "vulnerability_type": "integer_overflow",
      "severity": "HIGH",
      "description": "Integer overflow/underflow risk",
      "code_snippet": "s_pool.state.totalCommunityStakedAmount -= stakerAccount.stakedAmount;",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": true,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.9,
      "mitigation": "Use SafeMath library or Solidity 0.8+ overflow protection"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/contracts/Staking.sol",
      "line_number": 1044,
      "vulnerability_type": "integer_overflow",
      "severity": "HIGH",
      "description": "Integer overflow/underflow risk",
      "code_snippet": "s_reward.reserved.base -= baseReward._toUint96();",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": true,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Use SafeMath library or Solidity 0.8+ overflow protection"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/contracts/Staking.sol",
      "line_number": 1077,
      "vulnerability_type": "access_control",
      "severity": "HIGH",
      "description": "Access control mechanism detected - verify implementation",
      "code_snippet": "modifier whenActive() {",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": true,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Implement proper role-based access control"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/contracts/Staking.sol",
      "line_number": 1084,
      "vulnerability_type": "access_control",
      "severity": "HIGH",
      "description": "Access control mechanism detected - verify implementation",
      "code_snippet": "modifier whenInactive() {",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": true,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Implement proper role-based access control"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/contracts/Staking.sol",
      "line_number": 1091,
      "vulnerability_type": "access_control",
      "severity": "HIGH",
      "description": "Access control mechanism detected - verify implementation",
      "code_snippet": "modifier validateFromLINK() {",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": true,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Implement proper role-based access control"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/contracts/tests/MockLinkToken.sol",
      "line_number": 9,
      "vulnerability_type": "integer_overflow",
      "severity": "HIGH",
      "description": "Integer overflow/underflow risk",
      "code_snippet": "uint256 /**_value**/",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": true,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Use SafeMath library or Solidity 0.8+ overflow protection"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/contracts/tests/MockLinkToken.sol",
      "line_number": 18,
      "vulnerability_type": "integer_overflow",
      "severity": "HIGH",
      "description": "Integer overflow/underflow risk",
      "code_snippet": "uint256 /**_value**/",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": true,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Use SafeMath library or Solidity 0.8+ overflow protection"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/contracts/tests/MockLinkToken.sol",
      "line_number": 26,
      "vulnerability_type": "integer_overflow",
      "severity": "HIGH",
      "description": "Integer overflow/underflow risk",
      "code_snippet": "uint256, /**_value */",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": true,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Use SafeMath library or Solidity 0.8+ overflow protection"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/contracts/tests/MockLinkToken.sol",
      "line_number": 1,
      "vulnerability_type": "missing_events",
      "severity": "MEDIUM",
      "description": "Critical functions should emit events for transparency",
      "code_snippet": "Contract structure analysis",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.7,
      "mitigation": "Add appropriate event emissions for state changes"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/contracts/tests/MockLinkToken.sol",
      "line_number": 7,
      "vulnerability_type": "access_control",
      "severity": "HIGH",
      "description": "Public critical function transfer lacks access control",
      "code_snippet": "function transfer(\n    address, /**_to**/\n    uint256 /**_value**/\n  ) public returns (bool success) {",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": true,
      "function_name": "transfer",
      "confidence_score": 0.85,
      "mitigation": "Add appropriate access control modifiers"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/contracts/tests/MockLinkToken.sol",
      "line_number": 15,
      "vulnerability_type": "access_control",
      "severity": "HIGH",
      "description": "Public critical function transferFrom lacks access control",
      "code_snippet": "function transferFrom(\n    address, /**_from**/\n    address, /**_to**/\n    uint256 /**_value**/\n  ) public returns (bool success) {",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": true,
      "function_name": "transferFrom",
      "confidence_score": 0.85,
      "mitigation": "Add appropriate access control modifiers"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/contracts/tests/ConfirmedOwnerTestHelper.sol",
      "line_number": 11,
      "vulnerability_type": "access_control",
      "severity": "HIGH",
      "description": "Access control mechanism detected - verify implementation",
      "code_snippet": "function modifierOnlyOwner() public onlyOwner {",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": true,
      "function_name": null,
      "confidence_score": 0.8,
      "mitigation": "Implement proper role-based access control"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/contracts/tests/MockMigrationTarget.sol",
      "line_number": 1,
      "vulnerability_type": "missing_events",
      "severity": "MEDIUM",
      "description": "Critical functions should emit events for transparency",
      "code_snippet": "Contract structure analysis",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.7,
      "mitigation": "Add appropriate event emissions for state changes"
    },
    {
      "contract_file": "/tmp/test_staking_analysis/contracts/interfaces/IStakingOwner.sol",
      "line_number": 1,
      "vulnerability_type": "missing_events",
      "severity": "MEDIUM",
      "description": "Critical functions should emit events for transparency",
      "code_snippet": "Contract structure analysis",
      "gas_cost_impact": null,
      "reentrancy_risk": false,
      "overflow_risk": false,
      "access_control_issue": false,
      "function_name": null,
      "confidence_score": 0.7,
      "mitigation": "Add appropriate event emissions for state changes"
    }
  ],
  "dynamic_test_results": [
    {
      "test_type": "existing_test",
      "test_name": "allows updates",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "emits MerkleRootChanged event",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "gets correctly set to the empty root",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "does not allow updates ",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "emits an OperatorAdded event",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "reverts",
      "security_focus": "general",
      "priority": "HIGH"
    },
    {
      "test_type": "existing_test",
      "test_name": "reverts",
      "security_focus": "general",
      "priority": "HIGH"
    },
    {
      "test_type": "existing_test",
      "test_name": "reverts",
      "security_focus": "general",
      "priority": "HIGH"
    },
    {
      "test_type": "existing_test",
      "test_name": "reverts",
      "security_focus": "general",
      "priority": "HIGH"
    },
    {
      "test_type": "existing_test",
      "test_name": "reverts",
      "security_focus": "general",
      "priority": "HIGH"
    },
    {
      "test_type": "existing_test",
      "test_name": "reverts",
      "security_focus": "general",
      "priority": "HIGH"
    },
    {
      "test_type": "existing_test",
      "test_name": "emits an OperatorRemoved event",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "an operator is removed",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "reverts",
      "security_focus": "general",
      "priority": "HIGH"
    },
    {
      "test_type": "existing_test",
      "test_name": "allows replacing an operator",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "does not change other operators",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "clears principal",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "clears base reward",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "clears delegation reward",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "unreserves rewards going to the removed Operator",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "emits an OperatorRemoved event with principal",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "decrements delegates count",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "reverts",
      "security_focus": "general",
      "priority": "HIGH"
    },
    {
      "test_type": "existing_test",
      "test_name": "reverts",
      "security_focus": "general",
      "priority": "HIGH"
    },
    {
      "test_type": "existing_test",
      "test_name": "total staked amount should be decreased by operator\u2019s removed principal",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "total removed amount should be increased by operator\u2019s removed principal",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "reverts",
      "security_focus": "general",
      "priority": "HIGH"
    },
    {
      "test_type": "existing_test",
      "test_name": "emits an event",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "the operator\u2019s principal amount in LINK is transferred from the staking pool",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "the operator\u2019s principal amount in LINK is transferred to the operator",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "total removed amount should decrease by operator\u2019s principal",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "reverts",
      "security_focus": "general",
      "priority": "HIGH"
    },
    {
      "test_type": "existing_test",
      "test_name": "pool size is updated and emits event",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "updates the Operator stake size and emits an event",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "reverts",
      "security_focus": "general",
      "priority": "HIGH"
    },
    {
      "test_type": "existing_test",
      "test_name": "reverts",
      "security_focus": "general",
      "priority": "HIGH"
    },
    {
      "test_type": "existing_test",
      "test_name": "updates the max community staker stake size and emits an event",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "pool configuration is NOT updated",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "pool configuration is NOT updated",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "pool configuration is NOT updated",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "updates the pool size",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "correctly extends the reward duration",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "reverts",
      "security_focus": "general",
      "priority": "HIGH"
    },
    {
      "test_type": "existing_test",
      "test_name": "reverts",
      "security_focus": "general",
      "priority": "HIGH"
    },
    {
      "test_type": "existing_test",
      "test_name": "reverts",
      "security_focus": "general",
      "priority": "HIGH"
    },
    {
      "test_type": "existing_test",
      "test_name": "emits an event",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "sets the list of on-feed operators",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "overwrites previous list of on-feed operators",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "reverts",
      "security_focus": "general",
      "priority": "HIGH"
    },
    {
      "test_type": "existing_test",
      "test_name": "reverts",
      "security_focus": "general",
      "priority": "HIGH"
    },
    {
      "test_type": "existing_test",
      "test_name": "reverts",
      "security_focus": "general",
      "priority": "HIGH"
    },
    {
      "test_type": "existing_test",
      "test_name": "reverts",
      "security_focus": "general",
      "priority": "HIGH"
    },
    {
      "test_type": "existing_test",
      "test_name": "reverts",
      "security_focus": "general",
      "priority": "HIGH"
    },
    {
      "test_type": "existing_test",
      "test_name": "increases the available rewards, sets the start and end timestamps",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "opens the pool",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "transfers LINK to the staking contract",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "emits an event",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "reverts",
      "security_focus": "general",
      "priority": "HIGH"
    },
    {
      "test_type": "existing_test",
      "test_name": "stops rewards accumulation",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "closes the pool",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "emits a PoolConcluded event",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "closes the pool",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "reverts",
      "security_focus": "general",
      "priority": "HIGH"
    },
    {
      "test_type": "existing_test",
      "test_name": "reverts",
      "security_focus": "general",
      "priority": "HIGH"
    },
    {
      "test_type": "existing_test",
      "test_name": "reverts",
      "security_focus": "general",
      "priority": "HIGH"
    },
    {
      "test_type": "existing_test",
      "test_name": "reduces the available rewards by the unused amount",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "transfers the unused LINK reward to the owner address",
      "security_focus": "access_control",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "emits a RewardWithdrawn event",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "reduces the available rewards by the unused amount",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "transfers the unused LINK reward to the owner address",
      "security_focus": "access_control",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "emits a RewardWithdrawn event",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "reduces the available rewards",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "reduces the available rewards",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "reduces the available rewards",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "reduces the available rewards by the unused amount",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "transfers the unused LINK reward to the owner address",
      "security_focus": "access_control",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "emits a RewardWithdrawn event",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "reverts",
      "security_focus": "general",
      "priority": "HIGH"
    },
    {
      "test_type": "existing_test",
      "test_name": "transfers LINK to the staking contract",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "updates the available rewards balance",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "correctly extends the reward end time",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "should emit an event",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "correctly extends the reward duration",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "reverts",
      "security_focus": "general",
      "priority": "HIGH"
    },
    {
      "test_type": "existing_test",
      "test_name": "sets the reward rate",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "emits an event",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "reverts",
      "security_focus": "general",
      "priority": "HIGH"
    },
    {
      "test_type": "existing_test",
      "test_name": "increases the reward duration",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "decreases the reward duration",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "reverts",
      "security_focus": "general",
      "priority": "HIGH"
    },
    {
      "test_type": "existing_test",
      "test_name": "correctly updates reward duration",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "correctly calculates operator 1 delegation rewards",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "correctly calculates operator 1 base rewards",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "correctly calculates operator 1 delegation rewards",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "correctly calculates community staker 1 rewards",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "correctly decreases the reward duration",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "reverts",
      "security_focus": "general",
      "priority": "HIGH"
    },
    {
      "test_type": "existing_test",
      "test_name": "correctly increases the reward duration",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "correctly decreases the reward duration",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "reverts",
      "security_focus": "general",
      "priority": "HIGH"
    },
    {
      "test_type": "existing_test",
      "test_name": "correctly increases the reward duration",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "reverts",
      "security_focus": "general",
      "priority": "HIGH"
    },
    {
      "test_type": "existing_test",
      "test_name": "reverts",
      "security_focus": "general",
      "priority": "HIGH"
    },
    {
      "test_type": "existing_test",
      "test_name": "reverts",
      "security_focus": "general",
      "priority": "HIGH"
    },
    {
      "test_type": "existing_test",
      "test_name": "emits an event",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "renounces previous migration target",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "reverts",
      "security_focus": "general",
      "priority": "HIGH"
    },
    {
      "test_type": "existing_test",
      "test_name": "reverts",
      "security_focus": "general",
      "priority": "HIGH"
    },
    {
      "test_type": "existing_test",
      "test_name": "reverts",
      "security_focus": "general",
      "priority": "HIGH"
    },
    {
      "test_type": "existing_test",
      "test_name": "reverts",
      "security_focus": "general",
      "priority": "HIGH"
    },
    {
      "test_type": "existing_test",
      "test_name": "reverts",
      "security_focus": "general",
      "priority": "HIGH"
    },
    {
      "test_type": "existing_test",
      "test_name": "reverts",
      "security_focus": "general",
      "priority": "HIGH"
    },
    {
      "test_type": "existing_test",
      "test_name": "emits an event",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "reverts",
      "security_focus": "general",
      "priority": "HIGH"
    },
    {
      "test_type": "existing_test",
      "test_name": "sets migration target",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "emits an event",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "reverts",
      "security_focus": "general",
      "priority": "HIGH"
    },
    {
      "test_type": "existing_test",
      "test_name": "pauses the pool",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "unpauses the pool",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "returns true",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "returns no rewards",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "returns no rewards just after staking",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "returns a correct amount of rewards",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "returns 1 second worth of rewards",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "returns the correct reward amount",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "returns the correct reward amount",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "returns 10 seconds worth of rewards for initial stake",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "returns correct rewards",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "staked amount is added to the principal balance",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "should emit an event",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "increases delegates count",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "staking does not increase delegates count",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "the staked amount in LINK tokens is added to the staking contract",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "additional staked amounts are added to the principal balance",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "reverts when called from a non-LINK address",
      "security_focus": "general",
      "priority": "HIGH"
    },
    {
      "test_type": "existing_test",
      "test_name": "reverts",
      "security_focus": "general",
      "priority": "HIGH"
    },
    {
      "test_type": "existing_test",
      "test_name": "reverts",
      "security_focus": "general",
      "priority": "HIGH"
    },
    {
      "test_type": "existing_test",
      "test_name": "reverts",
      "security_focus": "general",
      "priority": "HIGH"
    },
    {
      "test_type": "existing_test",
      "test_name": "returns 1 second worth of reward with 6 decimal precision",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "reverts",
      "security_focus": "general",
      "priority": "HIGH"
    },
    {
      "test_type": "existing_test",
      "test_name": "transfers the principal and rewards from the staking contract",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "transfers the principal and rewards to the staker",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "transfers the principal and rewards from the staking contract",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "transfers the principal and rewards to the staker",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "should emit an event",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "should still return the correct amount of earned delegated rewards",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "should still return the correct amount of earned delegated rewards",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "returns the correct delegation reward",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "returns the correct delegation reward",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "delegation reward does not change as community stakers unstake",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "works after unstake",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "should return the principal amount",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "returns no rewards",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "returns no rewards just after staking",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "returns a correct amount of rewards",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "returns 1 second worth of rewards after 1 second has passed",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "returns the correct reward amount",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "returns 10 seconds worth of rewards for initial stake",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "returns correct rewards",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "staked amount is added to the principal balance",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "should emit an event",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "the staked amount in LINK tokens is added to the staking contract",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "additional staked amounts are added to the principal balance",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "reverts when called from a non-LINK address",
      "security_focus": "general",
      "priority": "HIGH"
    },
    {
      "test_type": "existing_test",
      "test_name": "delegates reward amount specified bythe delegation rate",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "reverts",
      "security_focus": "general",
      "priority": "HIGH"
    },
    {
      "test_type": "existing_test",
      "test_name": "reverts",
      "security_focus": "general",
      "priority": "HIGH"
    },
    {
      "test_type": "existing_test",
      "test_name": "reverts",
      "security_focus": "general",
      "priority": "HIGH"
    },
    {
      "test_type": "existing_test",
      "test_name": "reverts",
      "security_focus": "general",
      "priority": "HIGH"
    },
    {
      "test_type": "existing_test",
      "test_name": "returns 1 second worth of reward with 6 decimal precision",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "allows staking when near but not over capacity",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "reverts when new amount takes it over capacity",
      "security_focus": "general",
      "priority": "HIGH"
    },
    {
      "test_type": "existing_test",
      "test_name": "reverts",
      "security_focus": "general",
      "priority": "HIGH"
    },
    {
      "test_type": "existing_test",
      "test_name": "reverts",
      "security_focus": "general",
      "priority": "HIGH"
    },
    {
      "test_type": "existing_test",
      "test_name": "principal and rewards are transferred from the staking contract",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "transfers the principal and rewards to the staker",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "transfers the principal and rewards from the staking contract",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "transfers the principal and rewards to the staker",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "should emit an event",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "returns 0",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "has a limited public interface [ @skip-coverage ]",
      "security_focus": "gas_optimization",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "reverts when the monitored feed is zero",
      "security_focus": "general",
      "priority": "HIGH"
    },
    {
      "test_type": "existing_test",
      "test_name": "reverts when LINK address is zero",
      "security_focus": "general",
      "priority": "HIGH"
    },
    {
      "test_type": "existing_test",
      "test_name": "reverts when delegation rate is zero",
      "security_focus": "general",
      "priority": "HIGH"
    },
    {
      "test_type": "existing_test",
      "test_name": "reverts when REWARD_PRECISION is not a multiple of the delegation rate denominator",
      "security_focus": "general",
      "priority": "HIGH"
    },
    {
      "test_type": "existing_test",
      "test_name": "reverts when regular period threshold is <= priority period threshold",
      "security_focus": "general",
      "priority": "HIGH"
    },
    {
      "test_type": "existing_test",
      "test_name": "reverts when min operator stake amount 0",
      "security_focus": "general",
      "priority": "HIGH"
    },
    {
      "test_type": "existing_test",
      "test_name": "reverts when min operator stake amount is more than initial max operator stake amount",
      "security_focus": "general",
      "priority": "HIGH"
    },
    {
      "test_type": "existing_test",
      "test_name": "reverts when min operator stake amount is more than initial max operator stake amount",
      "security_focus": "general",
      "priority": "HIGH"
    },
    {
      "test_type": "existing_test",
      "test_name": "reverts when max alerting amount is more than max operator stake amount",
      "security_focus": "general",
      "priority": "HIGH"
    },
    {
      "test_type": "existing_test",
      "test_name": "the staking pool is closed",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "#getChainlinkToken returns the LINK address",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "sets the correct monitored feed address",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "sets initial values correctly and emits events ",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "returns true",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "returns false",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "returns false",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "returns the correct version number",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "returns the total amount staked by the community stakers",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "#getDelegationRateDenominator returns the delegation rate",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "returns 0",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "returns 0",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "returns the total earned delegated rewards",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "returns the total earned delegated rewards",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "returns reduced delegated rewards",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "returns the total earned delegated rewards",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "has a limited public interface [ @skip-coverage ]",
      "security_focus": "gas_optimization",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "successfully calls the method",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "reverts",
      "security_focus": "general",
      "priority": "HIGH"
    },
    {
      "test_type": "existing_test",
      "test_name": "reverts",
      "security_focus": "general",
      "priority": "HIGH"
    },
    {
      "test_type": "existing_test",
      "test_name": "reverts",
      "security_focus": "general",
      "priority": "HIGH"
    },
    {
      "test_type": "existing_test",
      "test_name": "reverts",
      "security_focus": "general",
      "priority": "HIGH"
    },
    {
      "test_type": "existing_test",
      "test_name": "reverts",
      "security_focus": "general",
      "priority": "HIGH"
    },
    {
      "test_type": "existing_test",
      "test_name": "reverts",
      "security_focus": "general",
      "priority": "HIGH"
    },
    {
      "test_type": "existing_test",
      "test_name": "reverts",
      "security_focus": "general",
      "priority": "HIGH"
    },
    {
      "test_type": "existing_test",
      "test_name": "emits an event",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "transfers alerter LINK rewards from the staking pool",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "transfers alerter LINK rewards to the alerter",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "reduces the available rewards",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "reduces the reward duration",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "reverts",
      "security_focus": "general",
      "priority": "HIGH"
    },
    {
      "test_type": "existing_test",
      "test_name": "emits an event",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "emits an event",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "reverts",
      "security_focus": "general",
      "priority": "HIGH"
    },
    {
      "test_type": "existing_test",
      "test_name": "does not slash more than the earned base reward amount",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "does not slash more than the earned delegation reward amount",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "does not slash the base rewards for an on feed operator who has not staked",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "does not slash the delegated rewards an on feed operator who has not staked",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "does not emit an event for an operator who has not staked",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "slashes 90 days worth of base rewards for an on feed operator",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "slashes 90 days worth of delegation rewards for an on feed operator",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "emits an event",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "does not slash a non feed operator",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "does not slash a non feed operator",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "does not slash the base rewards for an on feed operator who has not staked",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "does not slash the delegated rewards an on feed operator who has not staked",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "does not emit an event for an operator who has not staked",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "raises an alert, but does not slash",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "returns false",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "returns false",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "returns true",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "returns false",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "returns false",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "returns false",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "returns true",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "returns false",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "returns true",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "returns false",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "returns the correct value",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "reverts",
      "security_focus": "general",
      "priority": "HIGH"
    },
    {
      "test_type": "existing_test",
      "test_name": "returns the correct value",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "reverts",
      "security_focus": "general",
      "priority": "HIGH"
    },
    {
      "test_type": "existing_test",
      "test_name": "returns the correct value",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "reverts",
      "security_focus": "general",
      "priority": "HIGH"
    },
    {
      "test_type": "existing_test",
      "test_name": "returns the correct value",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "reverts",
      "security_focus": "general",
      "priority": "HIGH"
    },
    {
      "test_type": "existing_test",
      "test_name": "return true for an invalid proof",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "return true for an invalid address",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "return true for a valid proof",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "return false for an invalid proof",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "return false for an invalid address",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "return true for a valid proof",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "reverts",
      "security_focus": "general",
      "priority": "HIGH"
    },
    {
      "test_type": "existing_test",
      "test_name": "reverts",
      "security_focus": "general",
      "priority": "HIGH"
    },
    {
      "test_type": "existing_test",
      "test_name": "increases the staked balance",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "increases the staked balance",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "increases the staked balance",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "pool size is returned",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "min and max amounts are returned",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "min and max amounts are returned",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "does not change the earned base reward",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "does not change the earned base reward",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "returns earned base rewards",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "returns false",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "reverts",
      "security_focus": "general",
      "priority": "HIGH"
    },
    {
      "test_type": "existing_test",
      "test_name": "reverts",
      "security_focus": "general",
      "priority": "HIGH"
    },
    {
      "test_type": "existing_test",
      "test_name": "reverts",
      "security_focus": "general",
      "priority": "HIGH"
    },
    {
      "test_type": "existing_test",
      "test_name": "reverts",
      "security_focus": "general",
      "priority": "HIGH"
    },
    {
      "test_type": "existing_test",
      "test_name": "reverts",
      "security_focus": "general",
      "priority": "HIGH"
    },
    {
      "test_type": "existing_test",
      "test_name": "reverts",
      "security_focus": "general",
      "priority": "HIGH"
    },
    {
      "test_type": "existing_test",
      "test_name": "reverts",
      "security_focus": "general",
      "priority": "HIGH"
    },
    {
      "test_type": "existing_test",
      "test_name": "reverts",
      "security_focus": "general",
      "priority": "HIGH"
    },
    {
      "test_type": "existing_test",
      "test_name": "reverts",
      "security_focus": "general",
      "priority": "HIGH"
    },
    {
      "test_type": "existing_test",
      "test_name": "reverts",
      "security_focus": "general",
      "priority": "HIGH"
    },
    {
      "test_type": "existing_test",
      "test_name": "reverts",
      "security_focus": "general",
      "priority": "HIGH"
    },
    {
      "test_type": "existing_test",
      "test_name": "reverts",
      "security_focus": "general",
      "priority": "HIGH"
    },
    {
      "test_type": "existing_test",
      "test_name": "reverts",
      "security_focus": "general",
      "priority": "HIGH"
    },
    {
      "test_type": "existing_test",
      "test_name": "reverts",
      "security_focus": "general",
      "priority": "HIGH"
    },
    {
      "test_type": "existing_test",
      "test_name": "returns the fixed priority period reward",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "returns half of the staked amount",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "caps the reward at the priority period alerter reward amount",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "returns a merkle tree",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "existing_test",
      "test_name": "verifies a valid merkle proof",
      "security_focus": "general",
      "priority": "MEDIUM"
    },
    {
      "test_type": "security_generated",
      "test_name": "Reentrancy Attack Simulation",
      "description": "Test contract resilience against reentrancy attacks",
      "attack_vector": "reentrancy",
      "priority": "CRITICAL",
      "test_script": "\n        // Reentrancy attack test\n        contract ReentrancyAttacker {\n            uint public reentryCount = 0;\n\n            function attack(address target) external payable {\n                (bool success,) = target.call{value: msg.value}(\"\");\n                require(success, \"Attack failed\");\n            }\n\n            receive() external payable {\n                reentryCount++;\n                if (reentryCount < 3) {\n                    (bool success,) = msg.sender.call(\"\");\n                    require(success, \"Reentry failed\");\n                }\n            }\n        }\n        "
    },
    {
      "test_type": "security_generated",
      "test_name": "Integer Overflow/Underflow Test",
      "description": "Test arithmetic operations for overflow/underflow",
      "attack_vector": "integer_overflow",
      "priority": "HIGH",
      "test_script": "\n        // Integer overflow test\n        function testOverflow(uint256 value) external {\n            uint256 maxValue = type(uint256).max;\n            // Test overflow\n            try this.unsafeAdd(maxValue, value) {\n                // Should revert in Solidity 0.8+\n                revert(\"Overflow protection failed\");\n            } catch {\n                // Expected behavior\n            }\n        }\n        "
    },
    {
      "test_type": "security_generated",
      "test_name": "Access Control Bypass Test",
      "description": "Test unauthorized access to restricted functions",
      "attack_vector": "access_control",
      "priority": "HIGH",
      "test_script": "\n        // Access control bypass test\n        function testUnauthorizedAccess() external {\n            address unauthorizedUser = address(0x123);\n            vm.prank(unauthorizedUser);\n\n            try target.restrictedFunction() {\n                revert(\"Access control bypass detected\");\n            } catch {\n                // Expected behavior - access denied\n            }\n        }\n        "
    },
    {
      "test_type": "security_generated",
      "test_name": "Gas Limit DoS Test",
      "description": "Test contract behavior under gas limit conditions",
      "attack_vector": "gas_limit",
      "priority": "MEDIUM",
      "test_script": "\n        // Gas limit DoS test\n        function testGasLimitDoS() external {\n            uint256 gasLimit = block.gaslimit;\n            uint256 gasUsed = 0;\n\n            while (gasUsed < gasLimit * 80 / 100) {\n                gasUsed = gasleft();\n                // Perform expensive operation\n                keccak256(abi.encode(block.timestamp, block.number));\n            }\n        }\n        "
    }
  ],
  "behavioral_validation": {
    "unexpected_behaviors": [
      {
        "file": "/tmp/test_staking_analysis/test/gas/Gas_AfterStake_AsOperator.t.sol",
        "line": 109,
        "issue_type": "unbounded_loops",
        "code_snippet": "for (uint256 i = 1; i < operators.length;",
        "severity": "MEDIUM"
      },
      {
        "file": "/tmp/test_staking_analysis/test/gas/Gas_AfterStake_AsOperator.t.sol",
        "line": 109,
        "issue_type": "external_calls_in_loops",
        "code_snippet": "for (uint256 i = 1; i < operators.length; i++) {\n      changePrank(OWNER);\n      address operator = operators[i];\n      s_link.transfer(operator, INITIAL_MAX_OPERATOR_STAKE);\n      changePrank(operator);\n      s_link.transfer",
        "severity": "HIGH"
      },
      {
        "file": "/tmp/test_staking_analysis/test/gas/Gas_AfterStake_AsCommunityStaker.t.sol",
        "line": 118,
        "issue_type": "unbounded_loops",
        "code_snippet": "for (uint256 i = 1; i < operators.length;",
        "severity": "MEDIUM"
      },
      {
        "file": "/tmp/test_staking_analysis/test/gas/Gas_AfterStake_AsCommunityStaker.t.sol",
        "line": 118,
        "issue_type": "external_calls_in_loops",
        "code_snippet": "for (uint256 i = 1; i < operators.length; i++) {\n      changePrank(OWNER);\n      address operator = operators[i];\n      s_link.transfer(operator, INITIAL_MAX_OPERATOR_STAKE);\n      changePrank(operator);\n      s_link.transfer",
        "severity": "HIGH"
      },
      {
        "file": "/tmp/test_staking_analysis/test/fuzzing/foundry/Staking_RoundingErrors.t.sol",
        "line": 55,
        "issue_type": "external_calls_in_loops",
        "code_snippet": "for (uint256 i = 0; i < 10; i++) {\n      s_link.transfer",
        "severity": "HIGH"
      },
      {
        "file": "/tmp/test_staking_analysis/test/invariants/actors/ActorOwner.t.sol",
        "line": 72,
        "issue_type": "unbounded_loops",
        "code_snippet": "for (uint256 i; i < newFeedOperators.length;",
        "severity": "MEDIUM"
      },
      {
        "file": "/tmp/test_staking_analysis/test/invariants/helpers/OperatorLib.t.sol",
        "line": 74,
        "issue_type": "unbounded_loops",
        "code_snippet": "for (uint256 i; i < operators._removedOperatorsWithStake.length;",
        "severity": "MEDIUM"
      },
      {
        "file": "/tmp/test_staking_analysis/test/invariants/helpers/ActorManager.t.sol",
        "line": 44,
        "issue_type": "external_calls_in_loops",
        "code_snippet": "for (uint256 i; i < newOperatorsCount; i++) {\n      address newOperatorAddress = address(uint160(operatorAddressIndex + 100));\n      operatorAddressIndex++;\n\n      s_operators.create(newOperatorAddress);\n\n      vm.deal(newOperatorAddress, 100 ether);\n      i_link.transfer",
        "severity": "HIGH"
      },
      {
        "file": "/tmp/test_staking_analysis/test/invariants/helpers/ActorManager.t.sol",
        "line": 80,
        "issue_type": "external_calls_in_loops",
        "code_snippet": "for (uint256 i; i < newCommunityStakersCount; i++) {\n      address newCommunityStakerAddress = address(\n        uint160(communityStakerAddressIndex + 100_000)\n      );\n      communityStakerAddressIndex++;\n\n      s_communityStakers.create(newCommunityStakerAddress);\n\n      vm.deal(newCommunityStakerAddress, 100 ether);\n      i_link.transfer",
        "severity": "HIGH"
      },
      {
        "file": "/tmp/test_staking_analysis/contracts/StakingPoolLib.sol",
        "line": 253,
        "issue_type": "unbounded_loops",
        "code_snippet": "for (uint256 i; i < operators.length;",
        "severity": "MEDIUM"
      },
      {
        "file": "/tmp/test_staking_analysis/contracts/StakingPoolLib.sol",
        "line": 277,
        "issue_type": "unbounded_loops",
        "code_snippet": "for (uint256 i; i < pool.feedOperators.length;",
        "severity": "MEDIUM"
      },
      {
        "file": "/tmp/test_staking_analysis/contracts/StakingPoolLib.sol",
        "line": 282,
        "issue_type": "unbounded_loops",
        "code_snippet": "for (uint256 i; i < operators.length;",
        "severity": "MEDIUM"
      },
      {
        "file": "/tmp/test_staking_analysis/contracts/RewardLib.sol",
        "line": 512,
        "issue_type": "unbounded_loops",
        "code_snippet": "for (uint256 i; i < feedOperators.length;",
        "severity": "MEDIUM"
      },
      {
        "file": "/tmp/test_staking_analysis/contracts/Staking.sol",
        "line": 327,
        "issue_type": "unbounded_loops",
        "code_snippet": "for (uint256 i; i < operators.length;",
        "severity": "MEDIUM"
      }
    ],
    "state_consistency_issues": [],
    "gas_optimization_opportunities": [],
    "compliance_issues": []
  },
  "risk_assessment": {
    "risk_level": "CRITICAL",
    "score": 1675,
    "reasoning": "307 total vulnerabilities: 85 critical, 127 high severity",
    "immediate_action_required": true
  },
  "recommendations": [
    {
      "priority": "CRITICAL",
      "category": "Reentrancy Protection",
      "recommendation": "Implement ReentrancyGuard or use checks-effects-interactions pattern",
      "affected_files": 12,
      "implementation": "Add OpenZeppelin ReentrancyGuard modifier to vulnerable functions"
    },
    {
      "priority": "HIGH",
      "category": "Access Control",
      "recommendation": "Implement comprehensive role-based access control",
      "affected_files": 8,
      "implementation": "Use OpenZeppelin AccessControl or Ownable contracts"
    },
    {
      "priority": "HIGH",
      "category": "Testing",
      "recommendation": "Implement comprehensive security testing suite",
      "implementation": "Add unit tests, integration tests, and formal verification"
    },
    {
      "priority": "MEDIUM",
      "category": "Monitoring",
      "recommendation": "Implement runtime monitoring and alerting",
      "implementation": "Add event logging and monitoring for critical functions"
    }
  ]
}