version: '3.8'

services:
  vulnhunter-api:
    build: .
    ports:
      - "8000:8000"
    volumes:
      - ./models:/app/models:ro
      - ./data:/app/data
      - ./logs:/app/logs
    environment:
      - VULNHUNTER_MODEL_PATH=/app/models/vulnhunter_v5_final.pt
      - VULNHUNTER_CACHE_DIR=/app/data/cache
      - VULNHUNTER_LOG_LEVEL=INFO
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  vulnhunter-worker:
    build: .
    command: ["python", "-m", "src.deploy.cli", "batch", "--input-dir", "/app/queue", "--model-path", "/app/models/vulnhunter_v5_final.pt", "--output-file", "/app/results/batch_results.json"]
    volumes:
      - ./models:/app/models:ro
      - ./queue:/app/queue
      - ./results:/app/results
      - ./data:/app/data
    environment:
      - VULNHUNTER_MODEL_PATH=/app/models/vulnhunter_v5_final.pt
      - VULNHUNTER_CACHE_DIR=/app/data/cache
    restart: "no"
    depends_on:
      - vulnhunter-api

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - vulnhunter-api
    restart: unless-stopped

volumes:
  redis_data: