apiVersion: v1
kind: Secret
metadata:
  name: vulnhunter-secrets
  namespace: vulnhunter
  labels:
    app: vulnhunter
    component: secrets
type: Opaque
data:
  # Base64 encoded secrets (in production, use proper secret management)
  # Example: echo -n "your-secret-here" | base64

  # Webhook secrets
  github-webhook-secret: VnVsbkh1bnRlci1HaXRIdWItU2VjcmV0 # VulnHunter-GitHub-Secret
  gitlab-webhook-secret: VnVsbkh1bnRlci1HaXRMYWItU2VjcmV0 # VulnHunter-GitLab-Secret

  # API tokens (replace with actual tokens)
  github-api-token: Z2hwX3NhbXBsZV90b2tlbl9oZXJl # ghp_sample_token_here
  gitlab-api-token: Z2xwYXRfc2FtcGxlX3Rva2VuX2hlcmU= # glpat_sample_token_here
  jenkins-api-token: amVua2luc19zYW1wbGVfdG9rZW5faGVyZQ== # jenkins_sample_token_here

  # Database credentials (if using external database)
  db-username: dnVsbmh1bnRlcg== # vulnhunter
  db-password: c2VjdXJlX3Bhc3N3b3JkX2hlcmU= # secure_password_here

  # Encryption keys for federated learning
  encryption-key: ZmVkZXJhdGVkX2VuY3J5cHRpb25fa2V5X2hlcmU= # federated_encryption_key_here

  # Redis password (for caching)
  redis-password: cmVkaXNfcGFzc3dvcmRfaGVyZQ== # redis_password_here

---
apiVersion: v1
kind: Secret
metadata:
  name: vulnhunter-tls
  namespace: vulnhunter
  labels:
    app: vulnhunter
    component: tls
type: kubernetes.io/tls
data:
  # TLS certificate and key for HTTPS
  # In production, use cert-manager or external certificate provider
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0t # Base64 encoded certificate
  tls.key: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0t # Base64 encoded private key