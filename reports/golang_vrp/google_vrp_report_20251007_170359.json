{
  "scan_metadata": {
    "project_name": "golang_scan",
    "scan_timestamp": "2025-10-07T17:03:59.734115",
    "scan_duration_seconds": 87.388933,
    "google_oss_vrp_eligible": true,
    "vrp_tier": "tier1"
  },
  "summary": {
    "total_findings": 1345,
    "critical": 333,
    "high": 244,
    "medium": 768,
    "low": 0,
    "estimated_value_usd": {
      "min": 2293000,
      "max": 13191221
    }
  },
  "findings": {
    "code_vulnerabilities": [
      {
        "id": "CMDi-001",
        "title": "Command Injection in unixsock_readmsg_cloexec.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/net/unixsock_readmsg_cloexec.go",
        "lines": [
          13
        ],
        "description": "Command injection vulnerability: exec() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-002",
        "title": "Command Injection in unixsock_readmsg_cloexec.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/net/unixsock_readmsg_cloexec.go",
        "lines": [
          26
        ],
        "description": "Command injection vulnerability: exec() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-001",
        "title": "Command Injection in unixsock_posix.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/net/unixsock_posix.go",
        "lines": [
          117
        ],
        "description": "Command injection vulnerability: exec() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-001",
        "title": "Command Injection in file_unix.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/net/file_unix.go",
        "lines": [
          18
        ],
        "description": "Command injection vulnerability: exec() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "PT-001",
        "title": "Path Traversal in interface_plan9.go",
        "type": "Path Traversal",
        "severity": "High",
        "cvss_score": 7.5,
        "cwe": "CWE-22",
        "file": "src/net/interface_plan9.go",
        "lines": [
          86
        ],
        "description": "Path traversal vulnerability: File open with path concatenation",
        "impact": "Attacker can read arbitrary files on the server, potentially accessing sensitive configuration files, credentials, or source code.",
        "remediation": "Use os.path.basename() to extract filename, validate against whitelist, or use safe_join(). Never trust user input for file paths."
      },
      {
        "id": "PT-002",
        "title": "Path Traversal in interface_plan9.go",
        "type": "Path Traversal",
        "severity": "High",
        "cvss_score": 7.5,
        "cwe": "CWE-22",
        "file": "src/net/interface_plan9.go",
        "lines": [
          119
        ],
        "description": "Path traversal vulnerability: File open with path concatenation",
        "impact": "Attacker can read arbitrary files on the server, potentially accessing sensitive configuration files, credentials, or source code.",
        "remediation": "Use os.path.basename() to extract filename, validate against whitelist, or use safe_join(). Never trust user input for file paths."
      },
      {
        "id": "CMDi-001",
        "title": "Command Injection in unixsock_readmsg_cmsg_cloexec.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/net/unixsock_readmsg_cmsg_cloexec.go",
        "lines": [
          13
        ],
        "description": "Command injection vulnerability: exec() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-001",
        "title": "Command Injection in sys_cloexec.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/net/sys_cloexec.go",
        "lines": [
          25
        ],
        "description": "Command injection vulnerability: exec() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-001",
        "title": "Command Injection in sock_cloexec_solaris.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/net/sock_cloexec_solaris.go",
        "lines": [
          24
        ],
        "description": "Command injection vulnerability: exec() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-002",
        "title": "Command Injection in sock_cloexec_solaris.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/net/sock_cloexec_solaris.go",
        "lines": [
          36
        ],
        "description": "Command injection vulnerability: exec() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "PT-001",
        "title": "Path Traversal in file_plan9.go",
        "type": "Path Traversal",
        "severity": "High",
        "cvss_score": 7.5,
        "cwe": "CWE-22",
        "file": "src/net/file_plan9.go",
        "lines": [
          19
        ],
        "description": "Path traversal vulnerability: File open with path concatenation",
        "impact": "Attacker can read arbitrary files on the server, potentially accessing sensitive configuration files, credentials, or source code.",
        "remediation": "Use os.path.basename() to extract filename, validate against whitelist, or use safe_join(). Never trust user input for file paths."
      },
      {
        "id": "PT-001",
        "title": "Path Traversal in ipsock_plan9.go",
        "type": "Path Traversal",
        "severity": "High",
        "cvss_score": 7.5,
        "cwe": "CWE-22",
        "file": "src/net/ipsock_plan9.go",
        "lines": [
          263
        ],
        "description": "Path traversal vulnerability: File open with path concatenation",
        "impact": "Attacker can read arbitrary files on the server, potentially accessing sensitive configuration files, credentials, or source code.",
        "remediation": "Use os.path.basename() to extract filename, validate against whitelist, or use safe_join(). Never trust user input for file paths."
      },
      {
        "id": "CMDi-001",
        "title": "Command Injection in unixsock_readmsg_other.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/net/unixsock_readmsg_other.go",
        "lines": [
          11
        ],
        "description": "Command injection vulnerability: exec() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-001",
        "title": "Command Injection in proc.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/runtime/proc.go",
        "lines": [
          5113
        ],
        "description": "Command injection vulnerability: exec() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-002",
        "title": "Command Injection in proc.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/runtime/proc.go",
        "lines": [
          5129
        ],
        "description": "Command injection vulnerability: exec() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-003",
        "title": "Command Injection in proc.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/runtime/proc.go",
        "lines": [
          5590
        ],
        "description": "Command injection vulnerability: C system() call",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-001",
        "title": "Command Injection in os_darwin.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/runtime/os_darwin.go",
        "lines": [
          113
        ],
        "description": "Command injection vulnerability: exec() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-002",
        "title": "Command Injection in os_darwin.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/runtime/os_darwin.go",
        "lines": [
          114
        ],
        "description": "Command injection vulnerability: exec() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-001",
        "title": "Command Injection in nbpipe_pipe.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/runtime/nbpipe_pipe.go",
        "lines": [
          14
        ],
        "description": "Command injection vulnerability: exec() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-002",
        "title": "Command Injection in nbpipe_pipe.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/runtime/nbpipe_pipe.go",
        "lines": [
          16
        ],
        "description": "Command injection vulnerability: exec() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "PT-001",
        "title": "Path Traversal in env_plan9.go",
        "type": "Path Traversal",
        "severity": "High",
        "cvss_score": 7.5,
        "cwe": "CWE-22",
        "file": "src/runtime/env_plan9.go",
        "lines": [
          26
        ],
        "description": "Path traversal vulnerability: readFile with path concatenation",
        "impact": "Attacker can read arbitrary files on the server, potentially accessing sensitive configuration files, credentials, or source code.",
        "remediation": "Use os.path.basename() to extract filename, validate against whitelist, or use safe_join(). Never trust user input for file paths."
      },
      {
        "id": "CMDi-001",
        "title": "Command Injection in netpoll_kqueue.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/runtime/netpoll_kqueue.go",
        "lines": [
          28
        ],
        "description": "Command injection vulnerability: exec() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-001",
        "title": "Command Injection in traceback.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/runtime/traceback.go",
        "lines": [
          1372
        ],
        "description": "Command injection vulnerability: C system() call",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-001",
        "title": "Command Injection in netpoll_solaris.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/runtime/netpoll_solaris.go",
        "lines": [
          124
        ],
        "description": "Command injection vulnerability: exec() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-001",
        "title": "Command Injection in os_unix.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/runtime/os_unix.go",
        "lines": [
          17
        ],
        "description": "Command injection vulnerability: exec() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-001",
        "title": "Command Injection in os3_solaris.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/runtime/os3_solaris.go",
        "lines": [
          622
        ],
        "description": "Command injection vulnerability: exec() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "PT-001",
        "title": "Path Traversal in plugin_dlopen.go",
        "type": "Path Traversal",
        "severity": "High",
        "cvss_score": 7.5,
        "cwe": "CWE-22",
        "file": "src/plugin/plugin_dlopen.go",
        "lines": [
          58
        ],
        "description": "Path traversal vulnerability: File open with path concatenation",
        "impact": "Attacker can read arbitrary files on the server, potentially accessing sensitive configuration files, credentials, or source code.",
        "remediation": "Use os.path.basename() to extract filename, validate against whitelist, or use safe_join(). Never trust user input for file paths."
      },
      {
        "id": "PT-002",
        "title": "Path Traversal in plugin_dlopen.go",
        "type": "Path Traversal",
        "severity": "High",
        "cvss_score": 7.5,
        "cwe": "CWE-22",
        "file": "src/plugin/plugin_dlopen.go",
        "lines": [
          67
        ],
        "description": "Path traversal vulnerability: File open with path concatenation",
        "impact": "Attacker can read arbitrary files on the server, potentially accessing sensitive configuration files, credentials, or source code.",
        "remediation": "Use os.path.basename() to extract filename, validate against whitelist, or use safe_join(). Never trust user input for file paths."
      },
      {
        "id": "PT-003",
        "title": "Path Traversal in plugin_dlopen.go",
        "type": "Path Traversal",
        "severity": "High",
        "cvss_score": 7.5,
        "cwe": "CWE-22",
        "file": "src/plugin/plugin_dlopen.go",
        "lines": [
          84
        ],
        "description": "Path traversal vulnerability: File open with path concatenation",
        "impact": "Attacker can read arbitrary files on the server, potentially accessing sensitive configuration files, credentials, or source code.",
        "remediation": "Use os.path.basename() to extract filename, validate against whitelist, or use safe_join(). Never trust user input for file paths."
      },
      {
        "id": "PT-004",
        "title": "Path Traversal in plugin_dlopen.go",
        "type": "Path Traversal",
        "severity": "High",
        "cvss_score": 7.5,
        "cwe": "CWE-22",
        "file": "src/plugin/plugin_dlopen.go",
        "lines": [
          112
        ],
        "description": "Path traversal vulnerability: File open with path concatenation",
        "impact": "Attacker can read arbitrary files on the server, potentially accessing sensitive configuration files, credentials, or source code.",
        "remediation": "Use os.path.basename() to extract filename, validate against whitelist, or use safe_join(). Never trust user input for file paths."
      },
      {
        "id": "CMDi-001",
        "title": "Command Injection in plugin.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/plugin/plugin.go",
        "lines": [
          38
        ],
        "description": "Command injection vulnerability: C system() call",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-001",
        "title": "Command Injection in root_unix.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/os/root_unix.go",
        "lines": [
          52
        ],
        "description": "Command injection vulnerability: exec() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-001",
        "title": "Command Injection in file_unix.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/os/file_unix.go",
        "lines": [
          275
        ],
        "description": "Command injection vulnerability: exec() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-002",
        "title": "Command Injection in file_unix.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/os/file_unix.go",
        "lines": [
          298
        ],
        "description": "Command injection vulnerability: exec() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-001",
        "title": "Command Injection in pipe_unix.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/os/pipe_unix.go",
        "lines": [
          23
        ],
        "description": "Command injection vulnerability: exec() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-002",
        "title": "Command Injection in pipe_unix.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/os/pipe_unix.go",
        "lines": [
          24
        ],
        "description": "Command injection vulnerability: exec() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-001",
        "title": "Command Injection in file.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/os/file.go",
        "lines": [
          729
        ],
        "description": "Command injection vulnerability: C system() call",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-001",
        "title": "Command Injection in root.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/os/root.go",
        "lines": [
          353
        ],
        "description": "Command injection vulnerability: C system() call",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-001",
        "title": "Command Injection in exec_libc2.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/syscall/exec_libc2.go",
        "lines": [
          44
        ],
        "description": "Command injection vulnerability: exec() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "XSS-001",
        "title": "Cross-Site Scripting in syscall_linux_amd64.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/syscall/syscall_linux_amd64.go",
        "lines": [
          104
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "CMDi-001",
        "title": "Command Injection in syscall_linux_amd64.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/syscall/syscall_linux_amd64.go",
        "lines": [
          104
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "XSS-001",
        "title": "Cross-Site Scripting in syscall_freebsd_amd64.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/syscall/syscall_freebsd_amd64.go",
        "lines": [
          13
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "CMDi-001",
        "title": "Command Injection in syscall_freebsd_amd64.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/syscall/syscall_freebsd_amd64.go",
        "lines": [
          13
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "PT-001",
        "title": "Path Traversal in mkasm.go",
        "type": "Path Traversal",
        "severity": "High",
        "cvss_score": 7.5,
        "cwe": "CWE-22",
        "file": "src/syscall/mkasm.go",
        "lines": [
          36
        ],
        "description": "Path traversal vulnerability: readFile with path concatenation",
        "impact": "Attacker can read arbitrary files on the server, potentially accessing sensitive configuration files, credentials, or source code.",
        "remediation": "Use os.path.basename() to extract filename, validate against whitelist, or use safe_join(). Never trust user input for file paths."
      },
      {
        "id": "XSS-001",
        "title": "Cross-Site Scripting in syscall_openbsd_amd64.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/syscall/syscall_openbsd_amd64.go",
        "lines": [
          11
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "CMDi-001",
        "title": "Command Injection in syscall_openbsd_amd64.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/syscall/syscall_openbsd_amd64.go",
        "lines": [
          11
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-001",
        "title": "Command Injection in fs_js.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/syscall/fs_js.go",
        "lines": [
          144
        ],
        "description": "Command injection vulnerability: exec() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "XSS-001",
        "title": "Cross-Site Scripting in syscall_linux_arm.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/syscall/syscall_linux_arm.go",
        "lines": [
          20
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "CMDi-001",
        "title": "Command Injection in syscall_linux_arm.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/syscall/syscall_linux_arm.go",
        "lines": [
          20
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "XSS-001",
        "title": "Cross-Site Scripting in syscall_plan9.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/syscall/syscall_plan9.go",
        "lines": [
          357
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "XSS-002",
        "title": "Cross-Site Scripting in syscall_plan9.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/syscall/syscall_plan9.go",
        "lines": [
          377
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "CMDi-001",
        "title": "Command Injection in syscall_plan9.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/syscall/syscall_plan9.go",
        "lines": [
          357
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-002",
        "title": "Command Injection in syscall_plan9.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/syscall/syscall_plan9.go",
        "lines": [
          377
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-001",
        "title": "Command Injection in exec_freebsd.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/syscall/exec_freebsd.go",
        "lines": [
          49
        ],
        "description": "Command injection vulnerability: exec() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "XSS-001",
        "title": "Cross-Site Scripting in syscall_linux_loong64.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/syscall/syscall_linux_loong64.go",
        "lines": [
          138
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "CMDi-001",
        "title": "Command Injection in syscall_linux_loong64.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/syscall/syscall_linux_loong64.go",
        "lines": [
          138
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "XSS-001",
        "title": "Cross-Site Scripting in syscall_freebsd_riscv64.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/syscall/syscall_freebsd_riscv64.go",
        "lines": [
          13
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "CMDi-001",
        "title": "Command Injection in syscall_freebsd_riscv64.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/syscall/syscall_freebsd_riscv64.go",
        "lines": [
          13
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "XSS-001",
        "title": "Cross-Site Scripting in syscall_openbsd_386.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/syscall/syscall_openbsd_386.go",
        "lines": [
          11
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "CMDi-001",
        "title": "Command Injection in syscall_openbsd_386.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/syscall/syscall_openbsd_386.go",
        "lines": [
          11
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "XSS-001",
        "title": "Cross-Site Scripting in syscall_netbsd_arm.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/syscall/syscall_netbsd_arm.go",
        "lines": [
          11
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "CMDi-001",
        "title": "Command Injection in syscall_netbsd_arm.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/syscall/syscall_netbsd_arm.go",
        "lines": [
          11
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "XSS-001",
        "title": "Cross-Site Scripting in types_windows.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/syscall/types_windows.go",
        "lines": [
          352
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "CMDi-001",
        "title": "Command Injection in types_windows.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/syscall/types_windows.go",
        "lines": [
          352
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-001",
        "title": "Command Injection in exec_libc.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/syscall/exec_libc.go",
        "lines": [
          73
        ],
        "description": "Command injection vulnerability: exec() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-001",
        "title": "Command Injection in exec_linux.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/syscall/exec_linux.go",
        "lines": [
          127
        ],
        "description": "Command injection vulnerability: exec() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "XSS-001",
        "title": "Cross-Site Scripting in syscall_bsd.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/syscall/syscall_bsd.go",
        "lines": [
          502
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "XSS-002",
        "title": "Cross-Site Scripting in syscall_bsd.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/syscall/syscall_bsd.go",
        "lines": [
          503
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "CMDi-001",
        "title": "Command Injection in syscall_bsd.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/syscall/syscall_bsd.go",
        "lines": [
          502
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-002",
        "title": "Command Injection in syscall_bsd.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/syscall/syscall_bsd.go",
        "lines": [
          503
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "XSS-001",
        "title": "Cross-Site Scripting in syscall_dragonfly_amd64.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/syscall/syscall_dragonfly_amd64.go",
        "lines": [
          13
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "CMDi-001",
        "title": "Command Injection in syscall_dragonfly_amd64.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/syscall/syscall_dragonfly_amd64.go",
        "lines": [
          13
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-001",
        "title": "Command Injection in zsyscall_darwin_arm64.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/syscall/zsyscall_darwin_arm64.go",
        "lines": [
          1477
        ],
        "description": "Command injection vulnerability: exec() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "XSS-001",
        "title": "Cross-Site Scripting in syscall_darwin_arm64.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/syscall/syscall_darwin_arm64.go",
        "lines": [
          16
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "CMDi-001",
        "title": "Command Injection in syscall_darwin_arm64.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/syscall/syscall_darwin_arm64.go",
        "lines": [
          16
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "XSS-001",
        "title": "Cross-Site Scripting in syscall_aix.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/syscall/syscall_aix.go",
        "lines": [
          654
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "CMDi-001",
        "title": "Command Injection in syscall_aix.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/syscall/syscall_aix.go",
        "lines": [
          654
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "XSS-001",
        "title": "Cross-Site Scripting in timestruct.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/syscall/timestruct.go",
        "lines": [
          27
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "XSS-002",
        "title": "Cross-Site Scripting in timestruct.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/syscall/timestruct.go",
        "lines": [
          35
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "CMDi-001",
        "title": "Command Injection in timestruct.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/syscall/timestruct.go",
        "lines": [
          27
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-002",
        "title": "Command Injection in timestruct.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/syscall/timestruct.go",
        "lines": [
          35
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "XSS-001",
        "title": "Cross-Site Scripting in syscall_js.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/syscall/syscall_js.go",
        "lines": [
          363
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "CMDi-001",
        "title": "Command Injection in syscall_js.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/syscall/syscall_js.go",
        "lines": [
          363
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "XSS-001",
        "title": "Cross-Site Scripting in syscall_windows.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/syscall/syscall_windows.go",
        "lines": [
          674
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "XSS-002",
        "title": "Cross-Site Scripting in syscall_windows.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/syscall/syscall_windows.go",
        "lines": [
          1186
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "CMDi-001",
        "title": "Command Injection in syscall_windows.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/syscall/syscall_windows.go",
        "lines": [
          674
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-002",
        "title": "Command Injection in syscall_windows.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/syscall/syscall_windows.go",
        "lines": [
          1186
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-001",
        "title": "Command Injection in fs_wasip1.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/syscall/fs_wasip1.go",
        "lines": [
          620
        ],
        "description": "Command injection vulnerability: exec() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-001",
        "title": "Command Injection in exec_bsd.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/syscall/exec_bsd.go",
        "lines": [
          43
        ],
        "description": "Command injection vulnerability: exec() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-001",
        "title": "Command Injection in exec_plan9.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/syscall/exec_plan9.go",
        "lines": [
          115
        ],
        "description": "Command injection vulnerability: exec() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-002",
        "title": "Command Injection in exec_plan9.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/syscall/exec_plan9.go",
        "lines": [
          362
        ],
        "description": "Command injection vulnerability: exec() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-003",
        "title": "Command Injection in exec_plan9.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/syscall/exec_plan9.go",
        "lines": [
          496
        ],
        "description": "Command injection vulnerability: exec() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-004",
        "title": "Command Injection in exec_plan9.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/syscall/exec_plan9.go",
        "lines": [
          527
        ],
        "description": "Command injection vulnerability: exec() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-005",
        "title": "Command Injection in exec_plan9.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/syscall/exec_plan9.go",
        "lines": [
          538
        ],
        "description": "Command injection vulnerability: exec() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "PT-001",
        "title": "Path Traversal in exec_plan9.go",
        "type": "Path Traversal",
        "severity": "High",
        "cvss_score": 7.5,
        "cwe": "CWE-22",
        "file": "src/syscall/exec_plan9.go",
        "lines": [
          330
        ],
        "description": "Path traversal vulnerability: File open with path concatenation",
        "impact": "Attacker can read arbitrary files on the server, potentially accessing sensitive configuration files, credentials, or source code.",
        "remediation": "Use os.path.basename() to extract filename, validate against whitelist, or use safe_join(). Never trust user input for file paths."
      },
      {
        "id": "CMDi-001",
        "title": "Command Injection in exec_unix.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/syscall/exec_unix.go",
        "lines": [
          103
        ],
        "description": "Command injection vulnerability: exec() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-002",
        "title": "Command Injection in exec_unix.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/syscall/exec_unix.go",
        "lines": [
          143
        ],
        "description": "Command injection vulnerability: exec() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-003",
        "title": "Command Injection in exec_unix.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/syscall/exec_unix.go",
        "lines": [
          252
        ],
        "description": "Command injection vulnerability: exec() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-004",
        "title": "Command Injection in exec_unix.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/syscall/exec_unix.go",
        "lines": [
          253
        ],
        "description": "Command injection vulnerability: exec() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-005",
        "title": "Command Injection in exec_unix.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/syscall/exec_unix.go",
        "lines": [
          258
        ],
        "description": "Command injection vulnerability: exec() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-006",
        "title": "Command Injection in exec_unix.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/syscall/exec_unix.go",
        "lines": [
          263
        ],
        "description": "Command injection vulnerability: exec() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-007",
        "title": "Command Injection in exec_unix.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/syscall/exec_unix.go",
        "lines": [
          264
        ],
        "description": "Command injection vulnerability: exec() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-008",
        "title": "Command Injection in exec_unix.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/syscall/exec_unix.go",
        "lines": [
          271
        ],
        "description": "Command injection vulnerability: exec() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-009",
        "title": "Command Injection in exec_unix.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/syscall/exec_unix.go",
        "lines": [
          284
        ],
        "description": "Command injection vulnerability: exec() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-010",
        "title": "Command Injection in exec_unix.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/syscall/exec_unix.go",
        "lines": [
          303
        ],
        "description": "Command injection vulnerability: exec() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "XSS-001",
        "title": "Cross-Site Scripting in syscall_freebsd_386.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/syscall/syscall_freebsd_386.go",
        "lines": [
          13
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "CMDi-001",
        "title": "Command Injection in syscall_freebsd_386.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/syscall/syscall_freebsd_386.go",
        "lines": [
          13
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-001",
        "title": "Command Injection in syscall_darwin.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/syscall/syscall_darwin.go",
        "lines": [
          204
        ],
        "description": "Command injection vulnerability: exec() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "XSS-001",
        "title": "Cross-Site Scripting in syscall_netbsd_amd64.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/syscall/syscall_netbsd_amd64.go",
        "lines": [
          11
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "CMDi-001",
        "title": "Command Injection in syscall_netbsd_amd64.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/syscall/syscall_netbsd_amd64.go",
        "lines": [
          11
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "XSS-001",
        "title": "Cross-Site Scripting in syscall_wasip1.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/syscall/syscall_wasip1.go",
        "lines": [
          453
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "CMDi-001",
        "title": "Command Injection in syscall_wasip1.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/syscall/syscall_wasip1.go",
        "lines": [
          453
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "XSS-001",
        "title": "Cross-Site Scripting in syscall_linux_arm64.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/syscall/syscall_linux_arm64.go",
        "lines": [
          93
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "CMDi-001",
        "title": "Command Injection in syscall_linux_arm64.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/syscall/syscall_linux_arm64.go",
        "lines": [
          93
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "XSS-001",
        "title": "Cross-Site Scripting in syscall_openbsd_ppc64.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/syscall/syscall_openbsd_ppc64.go",
        "lines": [
          11
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "CMDi-001",
        "title": "Command Injection in syscall_openbsd_ppc64.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/syscall/syscall_openbsd_ppc64.go",
        "lines": [
          11
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "XSS-001",
        "title": "Cross-Site Scripting in syscall_freebsd_arm64.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/syscall/syscall_freebsd_arm64.go",
        "lines": [
          13
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "CMDi-001",
        "title": "Command Injection in syscall_freebsd_arm64.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/syscall/syscall_freebsd_arm64.go",
        "lines": [
          13
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "XSS-001",
        "title": "Cross-Site Scripting in syscall_unix.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/syscall/syscall_unix.go",
        "lines": [
          503
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "CMDi-001",
        "title": "Command Injection in syscall_unix.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/syscall/syscall_unix.go",
        "lines": [
          503
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "XSS-001",
        "title": "Cross-Site Scripting in syscall_freebsd_arm.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/syscall/syscall_freebsd_arm.go",
        "lines": [
          13
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "CMDi-001",
        "title": "Command Injection in syscall_freebsd_arm.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/syscall/syscall_freebsd_arm.go",
        "lines": [
          13
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "XSS-001",
        "title": "Cross-Site Scripting in syscall_linux_s390x.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/syscall/syscall_linux_s390x.go",
        "lines": [
          69
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "CMDi-001",
        "title": "Command Injection in syscall_linux_s390x.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/syscall/syscall_linux_s390x.go",
        "lines": [
          69
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-001",
        "title": "Command Injection in exec_windows.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/syscall/exec_windows.go",
        "lines": [
          195
        ],
        "description": "Command injection vulnerability: exec() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-002",
        "title": "Command Injection in exec_windows.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/syscall/exec_windows.go",
        "lines": [
          453
        ],
        "description": "Command injection vulnerability: exec() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "XSS-001",
        "title": "Cross-Site Scripting in syscall_openbsd_mips64.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/syscall/syscall_openbsd_mips64.go",
        "lines": [
          16
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "CMDi-001",
        "title": "Command Injection in syscall_openbsd_mips64.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/syscall/syscall_openbsd_mips64.go",
        "lines": [
          16
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "XSS-001",
        "title": "Cross-Site Scripting in syscall_openbsd_arm64.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/syscall/syscall_openbsd_arm64.go",
        "lines": [
          11
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "CMDi-001",
        "title": "Command Injection in syscall_openbsd_arm64.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/syscall/syscall_openbsd_arm64.go",
        "lines": [
          11
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "XSS-001",
        "title": "Cross-Site Scripting in syscall_solaris_amd64.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/syscall/syscall_solaris_amd64.go",
        "lines": [
          11
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "CMDi-001",
        "title": "Command Injection in syscall_solaris_amd64.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/syscall/syscall_solaris_amd64.go",
        "lines": [
          11
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-001",
        "title": "Command Injection in zsyscall_darwin_amd64.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/syscall/zsyscall_darwin_amd64.go",
        "lines": [
          1477
        ],
        "description": "Command injection vulnerability: exec() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "XSS-001",
        "title": "Cross-Site Scripting in syscall_darwin_amd64.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/syscall/syscall_darwin_amd64.go",
        "lines": [
          16
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "CMDi-001",
        "title": "Command Injection in syscall_darwin_amd64.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/syscall/syscall_darwin_amd64.go",
        "lines": [
          16
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "XSS-001",
        "title": "Cross-Site Scripting in syscall_linux_ppc64x.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/syscall/syscall_linux_ppc64x.go",
        "lines": [
          74
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "CMDi-001",
        "title": "Command Injection in syscall_linux_ppc64x.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/syscall/syscall_linux_ppc64x.go",
        "lines": [
          74
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "XSS-001",
        "title": "Cross-Site Scripting in syscall_linux_386.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/syscall/syscall_linux_386.go",
        "lines": [
          20
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "CMDi-001",
        "title": "Command Injection in syscall_linux_386.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/syscall/syscall_linux_386.go",
        "lines": [
          20
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "XSS-001",
        "title": "Cross-Site Scripting in syscall_linux_mips64x.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/syscall/syscall_linux_mips64x.go",
        "lines": [
          94
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "CMDi-001",
        "title": "Command Injection in syscall_linux_mips64x.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/syscall/syscall_linux_mips64x.go",
        "lines": [
          94
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "XSS-001",
        "title": "Cross-Site Scripting in syscall_openbsd_arm.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/syscall/syscall_openbsd_arm.go",
        "lines": [
          11
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "CMDi-001",
        "title": "Command Injection in syscall_openbsd_arm.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/syscall/syscall_openbsd_arm.go",
        "lines": [
          11
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "XSS-001",
        "title": "Cross-Site Scripting in syscall_netbsd_386.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/syscall/syscall_netbsd_386.go",
        "lines": [
          11
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "CMDi-001",
        "title": "Command Injection in syscall_netbsd_386.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/syscall/syscall_netbsd_386.go",
        "lines": [
          11
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "XSS-001",
        "title": "Cross-Site Scripting in syscall_linux_mipsx.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/syscall/syscall_linux_mipsx.go",
        "lines": [
          106
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "CMDi-001",
        "title": "Command Injection in syscall_linux_mipsx.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/syscall/syscall_linux_mipsx.go",
        "lines": [
          106
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "XSS-001",
        "title": "Cross-Site Scripting in syscall_openbsd_riscv64.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/syscall/syscall_openbsd_riscv64.go",
        "lines": [
          11
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "CMDi-001",
        "title": "Command Injection in syscall_openbsd_riscv64.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/syscall/syscall_openbsd_riscv64.go",
        "lines": [
          11
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "XSS-001",
        "title": "Cross-Site Scripting in syscall_netbsd_arm64.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/syscall/syscall_netbsd_arm64.go",
        "lines": [
          11
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "CMDi-001",
        "title": "Command Injection in syscall_netbsd_arm64.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/syscall/syscall_netbsd_arm64.go",
        "lines": [
          11
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "XSS-001",
        "title": "Cross-Site Scripting in syscall_linux_riscv64.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/syscall/syscall_linux_riscv64.go",
        "lines": [
          97
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "CMDi-001",
        "title": "Command Injection in syscall_linux_riscv64.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/syscall/syscall_linux_riscv64.go",
        "lines": [
          97
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "XSS-001",
        "title": "Cross-Site Scripting in error.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/html/template/error.go",
        "lines": [
          114
        ],
        "description": "XSS vulnerability detected: document.write() with user data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "XSS-001",
        "title": "Cross-Site Scripting in escape.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/html/template/escape.go",
        "lines": [
          715
        ],
        "description": "XSS vulnerability detected: innerHTML assignment without sanitization",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "XSS-002",
        "title": "Cross-Site Scripting in escape.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/html/template/escape.go",
        "lines": [
          717
        ],
        "description": "XSS vulnerability detected: document.write() with user data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "XSS-001",
        "title": "Cross-Site Scripting in html.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/html/template/html.go",
        "lines": [
          92
        ],
        "description": "XSS vulnerability detected: innerHTML assignment without sanitization",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "XSS-002",
        "title": "Cross-Site Scripting in html.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/html/template/html.go",
        "lines": [
          97
        ],
        "description": "XSS vulnerability detected: document.write() with user data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "CMDi-001",
        "title": "Command Injection in order.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/internal/trace/order.go",
        "lines": [
          466
        ],
        "description": "Command injection vulnerability: exec() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-001",
        "title": "Command Injection in cpu_no_name.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/internal/cpu/cpu_no_name.go",
        "lines": [
          13
        ],
        "description": "Command injection vulnerability: C system() call",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "XSS-001",
        "title": "Cross-Site Scripting in decoder.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/internal/pkgbits/decoder.go",
        "lines": [
          439
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "CMDi-001",
        "title": "Command Injection in decoder.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/internal/pkgbits/decoder.go",
        "lines": [
          439
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-001",
        "title": "Command Injection in fd_windows.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/internal/poll/fd_windows.go",
        "lines": [
          1505
        ],
        "description": "Command injection vulnerability: exec() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-001",
        "title": "Command Injection in fd_plan9.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/internal/poll/fd_plan9.go",
        "lines": [
          236
        ],
        "description": "Command injection vulnerability: exec() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-001",
        "title": "Command Injection in fd_unix.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/internal/poll/fd_unix.go",
        "lines": [
          653
        ],
        "description": "Command injection vulnerability: exec() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-002",
        "title": "Command Injection in fd_unix.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/internal/poll/fd_unix.go",
        "lines": [
          678
        ],
        "description": "Command injection vulnerability: exec() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "PT-001",
        "title": "Path Traversal in fd_io_plan9.go",
        "type": "Path Traversal",
        "severity": "High",
        "cvss_score": 7.5,
        "cwe": "CWE-22",
        "file": "src/internal/poll/fd_io_plan9.go",
        "lines": [
          75
        ],
        "description": "Path traversal vulnerability: File open with path concatenation",
        "impact": "Attacker can read arbitrary files on the server, potentially accessing sensitive configuration files, credentials, or source code.",
        "remediation": "Use os.path.basename() to extract filename, validate against whitelist, or use safe_join(). Never trust user input for file paths."
      },
      {
        "id": "CMDi-001",
        "title": "Command Injection in sys_cloexec.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/internal/poll/sys_cloexec.go",
        "lines": [
          26
        ],
        "description": "Command injection vulnerability: exec() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-001",
        "title": "Command Injection in sock_cloexec_solaris.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/internal/poll/sock_cloexec_solaris.go",
        "lines": [
          37
        ],
        "description": "Command injection vulnerability: exec() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-001",
        "title": "Command Injection in fd_unixjs.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/internal/poll/fd_unixjs.go",
        "lines": [
          36
        ],
        "description": "Command injection vulnerability: exec() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-001",
        "title": "Command Injection in stack.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/runtime/debug/stack.go",
        "lines": [
          77
        ],
        "description": "Command injection vulnerability: exec() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "XSS-001",
        "title": "Cross-Site Scripting in object.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/go/types/object.go",
        "lines": [
          93
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "CMDi-001",
        "title": "Command Injection in object.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/go/types/object.go",
        "lines": [
          93
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "XSS-001",
        "title": "Cross-Site Scripting in eval.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/go/types/eval.go",
        "lines": [
          24
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "CMDi-001",
        "title": "Command Injection in eval.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/go/types/eval.go",
        "lines": [
          24
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "XSS-001",
        "title": "Cross-Site Scripting in build.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/go/build/build.go",
        "lines": [
          1599
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "XSS-002",
        "title": "Cross-Site Scripting in build.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/go/build/build.go",
        "lines": [
          1620
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "XSS-003",
        "title": "Cross-Site Scripting in build.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/go/build/build.go",
        "lines": [
          1938
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "XSS-004",
        "title": "Cross-Site Scripting in build.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/go/build/build.go",
        "lines": [
          1941
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "XSS-005",
        "title": "Cross-Site Scripting in build.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/go/build/build.go",
        "lines": [
          1942
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "CMDi-001",
        "title": "Command Injection in build.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/go/build/build.go",
        "lines": [
          1599
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-002",
        "title": "Command Injection in build.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/go/build/build.go",
        "lines": [
          1620
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-003",
        "title": "Command Injection in build.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/go/build/build.go",
        "lines": [
          1938
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-004",
        "title": "Command Injection in build.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/go/build/build.go",
        "lines": [
          1941
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-005",
        "title": "Command Injection in build.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/go/build/build.go",
        "lines": [
          1942
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "XSS-001",
        "title": "Cross-Site Scripting in expr.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/go/build/constraint/expr.go",
        "lines": [
          33
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "XSS-002",
        "title": "Cross-Site Scripting in expr.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/go/build/constraint/expr.go",
        "lines": [
          47
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "XSS-003",
        "title": "Cross-Site Scripting in expr.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/go/build/constraint/expr.go",
        "lines": [
          64
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "XSS-004",
        "title": "Cross-Site Scripting in expr.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/go/build/constraint/expr.go",
        "lines": [
          65
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "XSS-005",
        "title": "Cross-Site Scripting in expr.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/go/build/constraint/expr.go",
        "lines": [
          86
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "XSS-006",
        "title": "Cross-Site Scripting in expr.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/go/build/constraint/expr.go",
        "lines": [
          88
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "XSS-007",
        "title": "Cross-Site Scripting in expr.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/go/build/constraint/expr.go",
        "lines": [
          89
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "XSS-008",
        "title": "Cross-Site Scripting in expr.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/go/build/constraint/expr.go",
        "lines": [
          116
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "XSS-009",
        "title": "Cross-Site Scripting in expr.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/go/build/constraint/expr.go",
        "lines": [
          118
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "XSS-010",
        "title": "Cross-Site Scripting in expr.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/go/build/constraint/expr.go",
        "lines": [
          119
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "CMDi-001",
        "title": "Command Injection in expr.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/go/build/constraint/expr.go",
        "lines": [
          33
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-002",
        "title": "Command Injection in expr.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/go/build/constraint/expr.go",
        "lines": [
          47
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-003",
        "title": "Command Injection in expr.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/go/build/constraint/expr.go",
        "lines": [
          64
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-004",
        "title": "Command Injection in expr.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/go/build/constraint/expr.go",
        "lines": [
          65
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-005",
        "title": "Command Injection in expr.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/go/build/constraint/expr.go",
        "lines": [
          86
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-006",
        "title": "Command Injection in expr.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/go/build/constraint/expr.go",
        "lines": [
          88
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-007",
        "title": "Command Injection in expr.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/go/build/constraint/expr.go",
        "lines": [
          89
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-008",
        "title": "Command Injection in expr.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/go/build/constraint/expr.go",
        "lines": [
          116
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-009",
        "title": "Command Injection in expr.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/go/build/constraint/expr.go",
        "lines": [
          118
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-010",
        "title": "Command Injection in expr.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/go/build/constraint/expr.go",
        "lines": [
          119
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "PT-001",
        "title": "Path Traversal in root_unix.go",
        "type": "Path Traversal",
        "severity": "High",
        "cvss_score": 7.5,
        "cwe": "CWE-22",
        "file": "src/crypto/x509/root_unix.go",
        "lines": [
          70
        ],
        "description": "Path traversal vulnerability: readFile with path concatenation",
        "impact": "Attacker can read arbitrary files on the server, potentially accessing sensitive configuration files, credentials, or source code.",
        "remediation": "Use os.path.basename() to extract filename, validate against whitelist, or use safe_join(). Never trust user input for file paths."
      },
      {
        "id": "XSS-001",
        "title": "Cross-Site Scripting in scalar_fiat.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/crypto/internal/fips140/edwards25519/scalar_fiat.go",
        "lines": [
          86
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "XSS-002",
        "title": "Cross-Site Scripting in scalar_fiat.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/crypto/internal/fips140/edwards25519/scalar_fiat.go",
        "lines": [
          382
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "XSS-003",
        "title": "Cross-Site Scripting in scalar_fiat.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/crypto/internal/fips140/edwards25519/scalar_fiat.go",
        "lines": [
          434
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "XSS-004",
        "title": "Cross-Site Scripting in scalar_fiat.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/crypto/internal/fips140/edwards25519/scalar_fiat.go",
        "lines": [
          476
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "XSS-005",
        "title": "Cross-Site Scripting in scalar_fiat.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/crypto/internal/fips140/edwards25519/scalar_fiat.go",
        "lines": [
          518
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "XSS-006",
        "title": "Cross-Site Scripting in scalar_fiat.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/crypto/internal/fips140/edwards25519/scalar_fiat.go",
        "lines": [
          696
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "CMDi-001",
        "title": "Command Injection in scalar_fiat.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/crypto/internal/fips140/edwards25519/scalar_fiat.go",
        "lines": [
          86
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-002",
        "title": "Command Injection in scalar_fiat.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/crypto/internal/fips140/edwards25519/scalar_fiat.go",
        "lines": [
          382
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-003",
        "title": "Command Injection in scalar_fiat.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/crypto/internal/fips140/edwards25519/scalar_fiat.go",
        "lines": [
          434
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-004",
        "title": "Command Injection in scalar_fiat.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/crypto/internal/fips140/edwards25519/scalar_fiat.go",
        "lines": [
          476
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-005",
        "title": "Command Injection in scalar_fiat.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/crypto/internal/fips140/edwards25519/scalar_fiat.go",
        "lines": [
          518
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-006",
        "title": "Command Injection in scalar_fiat.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/crypto/internal/fips140/edwards25519/scalar_fiat.go",
        "lines": [
          696
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "XSS-001",
        "title": "Cross-Site Scripting in p256_fiat64.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/crypto/internal/fips140/nistec/fiat/p256_fiat64.go",
        "lines": [
          86
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "XSS-002",
        "title": "Cross-Site Scripting in p256_fiat64.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/crypto/internal/fips140/nistec/fiat/p256_fiat64.go",
        "lines": [
          373
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "XSS-003",
        "title": "Cross-Site Scripting in p256_fiat64.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/crypto/internal/fips140/nistec/fiat/p256_fiat64.go",
        "lines": [
          661
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "XSS-004",
        "title": "Cross-Site Scripting in p256_fiat64.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/crypto/internal/fips140/nistec/fiat/p256_fiat64.go",
        "lines": [
          713
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "XSS-005",
        "title": "Cross-Site Scripting in p256_fiat64.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/crypto/internal/fips140/nistec/fiat/p256_fiat64.go",
        "lines": [
          751
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "XSS-006",
        "title": "Cross-Site Scripting in p256_fiat64.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/crypto/internal/fips140/nistec/fiat/p256_fiat64.go",
        "lines": [
          916
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "CMDi-001",
        "title": "Command Injection in p256_fiat64.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/crypto/internal/fips140/nistec/fiat/p256_fiat64.go",
        "lines": [
          86
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-002",
        "title": "Command Injection in p256_fiat64.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/crypto/internal/fips140/nistec/fiat/p256_fiat64.go",
        "lines": [
          373
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-003",
        "title": "Command Injection in p256_fiat64.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/crypto/internal/fips140/nistec/fiat/p256_fiat64.go",
        "lines": [
          661
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-004",
        "title": "Command Injection in p256_fiat64.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/crypto/internal/fips140/nistec/fiat/p256_fiat64.go",
        "lines": [
          713
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-005",
        "title": "Command Injection in p256_fiat64.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/crypto/internal/fips140/nistec/fiat/p256_fiat64.go",
        "lines": [
          751
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-006",
        "title": "Command Injection in p256_fiat64.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/crypto/internal/fips140/nistec/fiat/p256_fiat64.go",
        "lines": [
          916
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "XSS-001",
        "title": "Cross-Site Scripting in p384_fiat64.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/crypto/internal/fips140/nistec/fiat/p384_fiat64.go",
        "lines": [
          86
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "XSS-002",
        "title": "Cross-Site Scripting in p384_fiat64.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/crypto/internal/fips140/nistec/fiat/p384_fiat64.go",
        "lines": [
          793
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "XSS-003",
        "title": "Cross-Site Scripting in p384_fiat64.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/crypto/internal/fips140/nistec/fiat/p384_fiat64.go",
        "lines": [
          1501
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "XSS-004",
        "title": "Cross-Site Scripting in p384_fiat64.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/crypto/internal/fips140/nistec/fiat/p384_fiat64.go",
        "lines": [
          1571
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "XSS-005",
        "title": "Cross-Site Scripting in p384_fiat64.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/crypto/internal/fips140/nistec/fiat/p384_fiat64.go",
        "lines": [
          1623
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "XSS-006",
        "title": "Cross-Site Scripting in p384_fiat64.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/crypto/internal/fips140/nistec/fiat/p384_fiat64.go",
        "lines": [
          2114
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "CMDi-001",
        "title": "Command Injection in p384_fiat64.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/crypto/internal/fips140/nistec/fiat/p384_fiat64.go",
        "lines": [
          86
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-002",
        "title": "Command Injection in p384_fiat64.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/crypto/internal/fips140/nistec/fiat/p384_fiat64.go",
        "lines": [
          793
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-003",
        "title": "Command Injection in p384_fiat64.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/crypto/internal/fips140/nistec/fiat/p384_fiat64.go",
        "lines": [
          1501
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-004",
        "title": "Command Injection in p384_fiat64.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/crypto/internal/fips140/nistec/fiat/p384_fiat64.go",
        "lines": [
          1571
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-005",
        "title": "Command Injection in p384_fiat64.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/crypto/internal/fips140/nistec/fiat/p384_fiat64.go",
        "lines": [
          1623
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-006",
        "title": "Command Injection in p384_fiat64.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/crypto/internal/fips140/nistec/fiat/p384_fiat64.go",
        "lines": [
          2114
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "XSS-001",
        "title": "Cross-Site Scripting in p521_fiat64.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/crypto/internal/fips140/nistec/fiat/p521_fiat64.go",
        "lines": [
          86
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "XSS-002",
        "title": "Cross-Site Scripting in p521_fiat64.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/crypto/internal/fips140/nistec/fiat/p521_fiat64.go",
        "lines": [
          1609
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "XSS-003",
        "title": "Cross-Site Scripting in p521_fiat64.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/crypto/internal/fips140/nistec/fiat/p521_fiat64.go",
        "lines": [
          3133
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "XSS-004",
        "title": "Cross-Site Scripting in p521_fiat64.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/crypto/internal/fips140/nistec/fiat/p521_fiat64.go",
        "lines": [
          3230
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "XSS-005",
        "title": "Cross-Site Scripting in p521_fiat64.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/crypto/internal/fips140/nistec/fiat/p521_fiat64.go",
        "lines": [
          3303
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "XSS-006",
        "title": "Cross-Site Scripting in p521_fiat64.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/crypto/internal/fips140/nistec/fiat/p521_fiat64.go",
        "lines": [
          4281
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "CMDi-001",
        "title": "Command Injection in p521_fiat64.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/crypto/internal/fips140/nistec/fiat/p521_fiat64.go",
        "lines": [
          86
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-002",
        "title": "Command Injection in p521_fiat64.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/crypto/internal/fips140/nistec/fiat/p521_fiat64.go",
        "lines": [
          1609
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-003",
        "title": "Command Injection in p521_fiat64.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/crypto/internal/fips140/nistec/fiat/p521_fiat64.go",
        "lines": [
          3133
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-004",
        "title": "Command Injection in p521_fiat64.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/crypto/internal/fips140/nistec/fiat/p521_fiat64.go",
        "lines": [
          3230
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-005",
        "title": "Command Injection in p521_fiat64.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/crypto/internal/fips140/nistec/fiat/p521_fiat64.go",
        "lines": [
          3303
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-006",
        "title": "Command Injection in p521_fiat64.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/crypto/internal/fips140/nistec/fiat/p521_fiat64.go",
        "lines": [
          4281
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "XSS-001",
        "title": "Cross-Site Scripting in p224_fiat64.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/crypto/internal/fips140/nistec/fiat/p224_fiat64.go",
        "lines": [
          86
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "XSS-002",
        "title": "Cross-Site Scripting in p224_fiat64.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/crypto/internal/fips140/nistec/fiat/p224_fiat64.go",
        "lines": [
          393
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "XSS-003",
        "title": "Cross-Site Scripting in p224_fiat64.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/crypto/internal/fips140/nistec/fiat/p224_fiat64.go",
        "lines": [
          701
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "XSS-004",
        "title": "Cross-Site Scripting in p224_fiat64.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/crypto/internal/fips140/nistec/fiat/p224_fiat64.go",
        "lines": [
          753
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "XSS-005",
        "title": "Cross-Site Scripting in p224_fiat64.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/crypto/internal/fips140/nistec/fiat/p224_fiat64.go",
        "lines": [
          791
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "XSS-006",
        "title": "Cross-Site Scripting in p224_fiat64.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/crypto/internal/fips140/nistec/fiat/p224_fiat64.go",
        "lines": [
          988
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "CMDi-001",
        "title": "Command Injection in p224_fiat64.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/crypto/internal/fips140/nistec/fiat/p224_fiat64.go",
        "lines": [
          86
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-002",
        "title": "Command Injection in p224_fiat64.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/crypto/internal/fips140/nistec/fiat/p224_fiat64.go",
        "lines": [
          393
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-003",
        "title": "Command Injection in p224_fiat64.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/crypto/internal/fips140/nistec/fiat/p224_fiat64.go",
        "lines": [
          701
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-004",
        "title": "Command Injection in p224_fiat64.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/crypto/internal/fips140/nistec/fiat/p224_fiat64.go",
        "lines": [
          753
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-005",
        "title": "Command Injection in p224_fiat64.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/crypto/internal/fips140/nistec/fiat/p224_fiat64.go",
        "lines": [
          791
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-006",
        "title": "Command Injection in p224_fiat64.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/crypto/internal/fips140/nistec/fiat/p224_fiat64.go",
        "lines": [
          988
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-001",
        "title": "Command Injection in ctxutil.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/database/sql/ctxutil.go",
        "lines": [
          29
        ],
        "description": "Command injection vulnerability: exec() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-002",
        "title": "Command Injection in ctxutil.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/database/sql/ctxutil.go",
        "lines": [
          43
        ],
        "description": "Command injection vulnerability: exec() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-003",
        "title": "Command Injection in ctxutil.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/database/sql/ctxutil.go",
        "lines": [
          63
        ],
        "description": "Command injection vulnerability: exec() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-004",
        "title": "Command Injection in ctxutil.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/database/sql/ctxutil.go",
        "lines": [
          77
        ],
        "description": "Command injection vulnerability: exec() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-001",
        "title": "Command Injection in sql.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/database/sql/sql.go",
        "lines": [
          1672
        ],
        "description": "Command injection vulnerability: exec() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-002",
        "title": "Command Injection in sql.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/database/sql/sql.go",
        "lines": [
          1684
        ],
        "description": "Command injection vulnerability: exec() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-003",
        "title": "Command Injection in sql.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/database/sql/sql.go",
        "lines": [
          1688
        ],
        "description": "Command injection vulnerability: exec() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-004",
        "title": "Command Injection in sql.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/database/sql/sql.go",
        "lines": [
          1713
        ],
        "description": "Command injection vulnerability: exec() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-005",
        "title": "Command Injection in sql.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/database/sql/sql.go",
        "lines": [
          2410
        ],
        "description": "Command injection vulnerability: exec() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-006",
        "title": "Command Injection in sql.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/database/sql/sql.go",
        "lines": [
          2498
        ],
        "description": "Command injection vulnerability: exec() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-007",
        "title": "Command Injection in sql.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/database/sql/sql.go",
        "lines": [
          2524
        ],
        "description": "Command injection vulnerability: exec() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-008",
        "title": "Command Injection in sql.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/database/sql/sql.go",
        "lines": [
          2667
        ],
        "description": "Command injection vulnerability: exec() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-009",
        "title": "Command Injection in sql.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/database/sql/sql.go",
        "lines": [
          2680
        ],
        "description": "Command injection vulnerability: exec() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-001",
        "title": "Command Injection in driver.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/database/sql/driver/driver.go",
        "lines": [
          186
        ],
        "description": "Command injection vulnerability: exec() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-002",
        "title": "Command Injection in driver.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/database/sql/driver/driver.go",
        "lines": [
          355
        ],
        "description": "Command injection vulnerability: exec() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-001",
        "title": "Command Injection in alldocs.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/cmd/go/alldocs.go",
        "lines": [
          588
        ],
        "description": "Command injection vulnerability: C system() call",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-002",
        "title": "Command Injection in alldocs.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/cmd/go/alldocs.go",
        "lines": [
          2558
        ],
        "description": "Command injection vulnerability: C system() call",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-003",
        "title": "Command Injection in alldocs.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/cmd/go/alldocs.go",
        "lines": [
          2859
        ],
        "description": "Command injection vulnerability: C system() call",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-004",
        "title": "Command Injection in alldocs.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/cmd/go/alldocs.go",
        "lines": [
          3598
        ],
        "description": "Command injection vulnerability: C system() call",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "PT-001",
        "title": "Path Traversal in out.go",
        "type": "Path Traversal",
        "severity": "High",
        "cvss_score": 7.5,
        "cwe": "CWE-22",
        "file": "src/cmd/cgo/out.go",
        "lines": [
          267
        ],
        "description": "Path traversal vulnerability: File open with path concatenation",
        "impact": "Attacker can read arbitrary files on the server, potentially accessing sensitive configuration files, credentials, or source code.",
        "remediation": "Use os.path.basename() to extract filename, validate against whitelist, or use safe_join(). Never trust user input for file paths."
      },
      {
        "id": "PT-001",
        "title": "Path Traversal in html.go",
        "type": "Path Traversal",
        "severity": "High",
        "cvss_score": 7.5,
        "cwe": "CWE-22",
        "file": "src/cmd/cover/html.go",
        "lines": [
          85
        ],
        "description": "Path traversal vulnerability: File open with path concatenation",
        "impact": "Attacker can read arbitrary files on the server, potentially accessing sensitive configuration files, credentials, or source code.",
        "remediation": "Use os.path.basename() to extract filename, validate against whitelist, or use safe_join(). Never trust user input for file paths."
      },
      {
        "id": "XSS-001",
        "title": "Cross-Site Scripting in syscall_plan9.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/cmd/vendor/golang.org/x/sys/plan9/syscall_plan9.go",
        "lines": [
          271
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "XSS-002",
        "title": "Cross-Site Scripting in syscall_plan9.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/cmd/vendor/golang.org/x/sys/plan9/syscall_plan9.go",
        "lines": [
          291
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "CMDi-001",
        "title": "Command Injection in syscall_plan9.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/cmd/vendor/golang.org/x/sys/plan9/syscall_plan9.go",
        "lines": [
          271
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-002",
        "title": "Command Injection in syscall_plan9.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/cmd/vendor/golang.org/x/sys/plan9/syscall_plan9.go",
        "lines": [
          291
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "XSS-001",
        "title": "Cross-Site Scripting in syscall_linux_amd64.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/cmd/vendor/golang.org/x/sys/unix/syscall_linux_amd64.go",
        "lines": [
          106
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "CMDi-001",
        "title": "Command Injection in syscall_linux_amd64.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/cmd/vendor/golang.org/x/sys/unix/syscall_linux_amd64.go",
        "lines": [
          106
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "XSS-001",
        "title": "Cross-Site Scripting in syscall_freebsd_amd64.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/cmd/vendor/golang.org/x/sys/unix/syscall_freebsd_amd64.go",
        "lines": [
          18
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "CMDi-001",
        "title": "Command Injection in syscall_freebsd_amd64.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/cmd/vendor/golang.org/x/sys/unix/syscall_freebsd_amd64.go",
        "lines": [
          18
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "XSS-001",
        "title": "Cross-Site Scripting in syscall_openbsd_amd64.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/cmd/vendor/golang.org/x/sys/unix/syscall_openbsd_amd64.go",
        "lines": [
          13
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "CMDi-001",
        "title": "Command Injection in syscall_openbsd_amd64.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/cmd/vendor/golang.org/x/sys/unix/syscall_openbsd_amd64.go",
        "lines": [
          13
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "XSS-001",
        "title": "Cross-Site Scripting in syscall_aix_ppc.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/cmd/vendor/golang.org/x/sys/unix/syscall_aix_ppc.go",
        "lines": [
          18
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "CMDi-001",
        "title": "Command Injection in syscall_aix_ppc.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/cmd/vendor/golang.org/x/sys/unix/syscall_aix_ppc.go",
        "lines": [
          18
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "XSS-001",
        "title": "Cross-Site Scripting in syscall_linux_arm.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/cmd/vendor/golang.org/x/sys/unix/syscall_linux_arm.go",
        "lines": [
          17
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "CMDi-001",
        "title": "Command Injection in syscall_linux_arm.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/cmd/vendor/golang.org/x/sys/unix/syscall_linux_arm.go",
        "lines": [
          17
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "XSS-001",
        "title": "Cross-Site Scripting in syscall_linux_loong64.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/cmd/vendor/golang.org/x/sys/unix/syscall_linux_loong64.go",
        "lines": [
          119
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "CMDi-001",
        "title": "Command Injection in syscall_linux_loong64.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/cmd/vendor/golang.org/x/sys/unix/syscall_linux_loong64.go",
        "lines": [
          119
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "XSS-001",
        "title": "Cross-Site Scripting in syscall_freebsd_riscv64.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/cmd/vendor/golang.org/x/sys/unix/syscall_freebsd_riscv64.go",
        "lines": [
          18
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "CMDi-001",
        "title": "Command Injection in syscall_freebsd_riscv64.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/cmd/vendor/golang.org/x/sys/unix/syscall_freebsd_riscv64.go",
        "lines": [
          18
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "XSS-001",
        "title": "Cross-Site Scripting in syscall_openbsd_386.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/cmd/vendor/golang.org/x/sys/unix/syscall_openbsd_386.go",
        "lines": [
          13
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "CMDi-001",
        "title": "Command Injection in syscall_openbsd_386.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/cmd/vendor/golang.org/x/sys/unix/syscall_openbsd_386.go",
        "lines": [
          13
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "XSS-001",
        "title": "Cross-Site Scripting in syscall_netbsd_arm.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/cmd/vendor/golang.org/x/sys/unix/syscall_netbsd_arm.go",
        "lines": [
          13
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "CMDi-001",
        "title": "Command Injection in syscall_netbsd_arm.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/cmd/vendor/golang.org/x/sys/unix/syscall_netbsd_arm.go",
        "lines": [
          13
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "XSS-001",
        "title": "Cross-Site Scripting in syscall_bsd.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/cmd/vendor/golang.org/x/sys/unix/syscall_bsd.go",
        "lines": [
          514
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "XSS-002",
        "title": "Cross-Site Scripting in syscall_bsd.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/cmd/vendor/golang.org/x/sys/unix/syscall_bsd.go",
        "lines": [
          561
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "XSS-003",
        "title": "Cross-Site Scripting in syscall_bsd.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/cmd/vendor/golang.org/x/sys/unix/syscall_bsd.go",
        "lines": [
          562
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "CMDi-001",
        "title": "Command Injection in syscall_bsd.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/cmd/vendor/golang.org/x/sys/unix/syscall_bsd.go",
        "lines": [
          514
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-002",
        "title": "Command Injection in syscall_bsd.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/cmd/vendor/golang.org/x/sys/unix/syscall_bsd.go",
        "lines": [
          561
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-003",
        "title": "Command Injection in syscall_bsd.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/cmd/vendor/golang.org/x/sys/unix/syscall_bsd.go",
        "lines": [
          562
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "XSS-001",
        "title": "Cross-Site Scripting in syscall_dragonfly_amd64.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/cmd/vendor/golang.org/x/sys/unix/syscall_dragonfly_amd64.go",
        "lines": [
          18
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "CMDi-001",
        "title": "Command Injection in syscall_dragonfly_amd64.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/cmd/vendor/golang.org/x/sys/unix/syscall_dragonfly_amd64.go",
        "lines": [
          18
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-001",
        "title": "Command Injection in zsyscall_darwin_arm64.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/cmd/vendor/golang.org/x/sys/unix/zsyscall_darwin_arm64.go",
        "lines": [
          2211
        ],
        "description": "Command injection vulnerability: exec() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "XSS-001",
        "title": "Cross-Site Scripting in syscall_darwin_arm64.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/cmd/vendor/golang.org/x/sys/unix/syscall_darwin_arm64.go",
        "lines": [
          15
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "CMDi-001",
        "title": "Command Injection in syscall_darwin_arm64.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/cmd/vendor/golang.org/x/sys/unix/syscall_darwin_arm64.go",
        "lines": [
          15
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "XSS-001",
        "title": "Cross-Site Scripting in timestruct.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/cmd/vendor/golang.org/x/sys/unix/timestruct.go",
        "lines": [
          47
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "XSS-002",
        "title": "Cross-Site Scripting in timestruct.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/cmd/vendor/golang.org/x/sys/unix/timestruct.go",
        "lines": [
          55
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "CMDi-001",
        "title": "Command Injection in timestruct.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/cmd/vendor/golang.org/x/sys/unix/timestruct.go",
        "lines": [
          47
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-002",
        "title": "Command Injection in timestruct.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/cmd/vendor/golang.org/x/sys/unix/timestruct.go",
        "lines": [
          55
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "XSS-001",
        "title": "Cross-Site Scripting in syscall_zos_s390x.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/cmd/vendor/golang.org/x/sys/unix/syscall_zos_s390x.go",
        "lines": [
          1246
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "XSS-002",
        "title": "Cross-Site Scripting in syscall_zos_s390x.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/cmd/vendor/golang.org/x/sys/unix/syscall_zos_s390x.go",
        "lines": [
          1320
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "XSS-003",
        "title": "Cross-Site Scripting in syscall_zos_s390x.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/cmd/vendor/golang.org/x/sys/unix/syscall_zos_s390x.go",
        "lines": [
          1321
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "XSS-004",
        "title": "Cross-Site Scripting in syscall_zos_s390x.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/cmd/vendor/golang.org/x/sys/unix/syscall_zos_s390x.go",
        "lines": [
          1380
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "XSS-005",
        "title": "Cross-Site Scripting in syscall_zos_s390x.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/cmd/vendor/golang.org/x/sys/unix/syscall_zos_s390x.go",
        "lines": [
          1381
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "XSS-006",
        "title": "Cross-Site Scripting in syscall_zos_s390x.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/cmd/vendor/golang.org/x/sys/unix/syscall_zos_s390x.go",
        "lines": [
          2614
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "XSS-007",
        "title": "Cross-Site Scripting in syscall_zos_s390x.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/cmd/vendor/golang.org/x/sys/unix/syscall_zos_s390x.go",
        "lines": [
          2685
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "CMDi-001",
        "title": "Command Injection in syscall_zos_s390x.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/cmd/vendor/golang.org/x/sys/unix/syscall_zos_s390x.go",
        "lines": [
          1246
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-002",
        "title": "Command Injection in syscall_zos_s390x.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/cmd/vendor/golang.org/x/sys/unix/syscall_zos_s390x.go",
        "lines": [
          1320
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-003",
        "title": "Command Injection in syscall_zos_s390x.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/cmd/vendor/golang.org/x/sys/unix/syscall_zos_s390x.go",
        "lines": [
          1321
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-004",
        "title": "Command Injection in syscall_zos_s390x.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/cmd/vendor/golang.org/x/sys/unix/syscall_zos_s390x.go",
        "lines": [
          1380
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-005",
        "title": "Command Injection in syscall_zos_s390x.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/cmd/vendor/golang.org/x/sys/unix/syscall_zos_s390x.go",
        "lines": [
          1381
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-006",
        "title": "Command Injection in syscall_zos_s390x.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/cmd/vendor/golang.org/x/sys/unix/syscall_zos_s390x.go",
        "lines": [
          2614
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-007",
        "title": "Command Injection in syscall_zos_s390x.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/cmd/vendor/golang.org/x/sys/unix/syscall_zos_s390x.go",
        "lines": [
          2685
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-008",
        "title": "Command Injection in syscall_zos_s390x.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/cmd/vendor/golang.org/x/sys/unix/syscall_zos_s390x.go",
        "lines": [
          2713
        ],
        "description": "Command injection vulnerability: exec() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-009",
        "title": "Command Injection in syscall_zos_s390x.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/cmd/vendor/golang.org/x/sys/unix/syscall_zos_s390x.go",
        "lines": [
          2734
        ],
        "description": "Command injection vulnerability: exec() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-010",
        "title": "Command Injection in syscall_zos_s390x.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/cmd/vendor/golang.org/x/sys/unix/syscall_zos_s390x.go",
        "lines": [
          2735
        ],
        "description": "Command injection vulnerability: exec() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "XSS-001",
        "title": "Cross-Site Scripting in syscall_linux.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/cmd/vendor/golang.org/x/sys/unix/syscall_linux.go",
        "lines": [
          2525
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "XSS-002",
        "title": "Cross-Site Scripting in syscall_linux.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/cmd/vendor/golang.org/x/sys/unix/syscall_linux.go",
        "lines": [
          2526
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "CMDi-001",
        "title": "Command Injection in syscall_linux.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/cmd/vendor/golang.org/x/sys/unix/syscall_linux.go",
        "lines": [
          2525
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-002",
        "title": "Command Injection in syscall_linux.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/cmd/vendor/golang.org/x/sys/unix/syscall_linux.go",
        "lines": [
          2526
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "XSS-001",
        "title": "Cross-Site Scripting in syscall_freebsd_386.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/cmd/vendor/golang.org/x/sys/unix/syscall_freebsd_386.go",
        "lines": [
          18
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "CMDi-001",
        "title": "Command Injection in syscall_freebsd_386.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/cmd/vendor/golang.org/x/sys/unix/syscall_freebsd_386.go",
        "lines": [
          18
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "XSS-001",
        "title": "Cross-Site Scripting in syscall_aix_ppc64.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/cmd/vendor/golang.org/x/sys/unix/syscall_aix_ppc64.go",
        "lines": [
          18
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "CMDi-001",
        "title": "Command Injection in syscall_aix_ppc64.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/cmd/vendor/golang.org/x/sys/unix/syscall_aix_ppc64.go",
        "lines": [
          18
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-001",
        "title": "Command Injection in syscall_darwin.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/cmd/vendor/golang.org/x/sys/unix/syscall_darwin.go",
        "lines": [
          779
        ],
        "description": "Command injection vulnerability: exec() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "XSS-001",
        "title": "Cross-Site Scripting in syscall_netbsd_amd64.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/cmd/vendor/golang.org/x/sys/unix/syscall_netbsd_amd64.go",
        "lines": [
          13
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "CMDi-001",
        "title": "Command Injection in syscall_netbsd_amd64.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/cmd/vendor/golang.org/x/sys/unix/syscall_netbsd_amd64.go",
        "lines": [
          13
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "XSS-001",
        "title": "Cross-Site Scripting in syscall_linux_arm64.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/cmd/vendor/golang.org/x/sys/unix/syscall_linux_arm64.go",
        "lines": [
          87
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "CMDi-001",
        "title": "Command Injection in syscall_linux_arm64.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/cmd/vendor/golang.org/x/sys/unix/syscall_linux_arm64.go",
        "lines": [
          87
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "XSS-001",
        "title": "Cross-Site Scripting in syscall_openbsd_ppc64.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/cmd/vendor/golang.org/x/sys/unix/syscall_openbsd_ppc64.go",
        "lines": [
          13
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "CMDi-001",
        "title": "Command Injection in syscall_openbsd_ppc64.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/cmd/vendor/golang.org/x/sys/unix/syscall_openbsd_ppc64.go",
        "lines": [
          13
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "XSS-001",
        "title": "Cross-Site Scripting in syscall_linux_sparc64.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/cmd/vendor/golang.org/x/sys/unix/syscall_linux_sparc64.go",
        "lines": [
          86
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "CMDi-001",
        "title": "Command Injection in syscall_linux_sparc64.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/cmd/vendor/golang.org/x/sys/unix/syscall_linux_sparc64.go",
        "lines": [
          86
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "XSS-001",
        "title": "Cross-Site Scripting in syscall_freebsd_arm64.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/cmd/vendor/golang.org/x/sys/unix/syscall_freebsd_arm64.go",
        "lines": [
          18
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "CMDi-001",
        "title": "Command Injection in syscall_freebsd_arm64.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/cmd/vendor/golang.org/x/sys/unix/syscall_freebsd_arm64.go",
        "lines": [
          18
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "XSS-001",
        "title": "Cross-Site Scripting in syscall_unix.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/cmd/vendor/golang.org/x/sys/unix/syscall_unix.go",
        "lines": [
          324
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "XSS-002",
        "title": "Cross-Site Scripting in syscall_unix.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/cmd/vendor/golang.org/x/sys/unix/syscall_unix.go",
        "lines": [
          525
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "CMDi-001",
        "title": "Command Injection in syscall_unix.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/cmd/vendor/golang.org/x/sys/unix/syscall_unix.go",
        "lines": [
          324
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-002",
        "title": "Command Injection in syscall_unix.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/cmd/vendor/golang.org/x/sys/unix/syscall_unix.go",
        "lines": [
          525
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-003",
        "title": "Command Injection in syscall_unix.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/cmd/vendor/golang.org/x/sys/unix/syscall_unix.go",
        "lines": [
          553
        ],
        "description": "Command injection vulnerability: exec() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-004",
        "title": "Command Injection in syscall_unix.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/cmd/vendor/golang.org/x/sys/unix/syscall_unix.go",
        "lines": [
          577
        ],
        "description": "Command injection vulnerability: exec() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-005",
        "title": "Command Injection in syscall_unix.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/cmd/vendor/golang.org/x/sys/unix/syscall_unix.go",
        "lines": [
          578
        ],
        "description": "Command injection vulnerability: exec() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "XSS-001",
        "title": "Cross-Site Scripting in syscall_freebsd_arm.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/cmd/vendor/golang.org/x/sys/unix/syscall_freebsd_arm.go",
        "lines": [
          18
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "CMDi-001",
        "title": "Command Injection in syscall_freebsd_arm.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/cmd/vendor/golang.org/x/sys/unix/syscall_freebsd_arm.go",
        "lines": [
          18
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "XSS-001",
        "title": "Cross-Site Scripting in syscall_linux_s390x.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/cmd/vendor/golang.org/x/sys/unix/syscall_linux_s390x.go",
        "lines": [
          67
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "CMDi-001",
        "title": "Command Injection in syscall_linux_s390x.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/cmd/vendor/golang.org/x/sys/unix/syscall_linux_s390x.go",
        "lines": [
          67
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "XSS-001",
        "title": "Cross-Site Scripting in syscall_openbsd_mips64.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/cmd/vendor/golang.org/x/sys/unix/syscall_openbsd_mips64.go",
        "lines": [
          11
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "CMDi-001",
        "title": "Command Injection in syscall_openbsd_mips64.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/cmd/vendor/golang.org/x/sys/unix/syscall_openbsd_mips64.go",
        "lines": [
          11
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "XSS-001",
        "title": "Cross-Site Scripting in syscall_openbsd_arm64.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/cmd/vendor/golang.org/x/sys/unix/syscall_openbsd_arm64.go",
        "lines": [
          13
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "CMDi-001",
        "title": "Command Injection in syscall_openbsd_arm64.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/cmd/vendor/golang.org/x/sys/unix/syscall_openbsd_arm64.go",
        "lines": [
          13
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "XSS-001",
        "title": "Cross-Site Scripting in syscall_solaris_amd64.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/cmd/vendor/golang.org/x/sys/unix/syscall_solaris_amd64.go",
        "lines": [
          13
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "CMDi-001",
        "title": "Command Injection in syscall_solaris_amd64.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/cmd/vendor/golang.org/x/sys/unix/syscall_solaris_amd64.go",
        "lines": [
          13
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-001",
        "title": "Command Injection in zsyscall_darwin_amd64.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/cmd/vendor/golang.org/x/sys/unix/zsyscall_darwin_amd64.go",
        "lines": [
          2211
        ],
        "description": "Command injection vulnerability: exec() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "XSS-001",
        "title": "Cross-Site Scripting in syscall_darwin_amd64.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/cmd/vendor/golang.org/x/sys/unix/syscall_darwin_amd64.go",
        "lines": [
          15
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "CMDi-001",
        "title": "Command Injection in syscall_darwin_amd64.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/cmd/vendor/golang.org/x/sys/unix/syscall_darwin_amd64.go",
        "lines": [
          15
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "XSS-001",
        "title": "Cross-Site Scripting in syscall_linux_ppc64x.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/cmd/vendor/golang.org/x/sys/unix/syscall_linux_ppc64x.go",
        "lines": [
          68
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "CMDi-001",
        "title": "Command Injection in syscall_linux_ppc64x.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/cmd/vendor/golang.org/x/sys/unix/syscall_linux_ppc64x.go",
        "lines": [
          68
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "XSS-001",
        "title": "Cross-Site Scripting in syscall_linux_386.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/cmd/vendor/golang.org/x/sys/unix/syscall_linux_386.go",
        "lines": [
          17
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "CMDi-001",
        "title": "Command Injection in syscall_linux_386.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/cmd/vendor/golang.org/x/sys/unix/syscall_linux_386.go",
        "lines": [
          17
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "XSS-001",
        "title": "Cross-Site Scripting in syscall_linux_mips64x.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/cmd/vendor/golang.org/x/sys/unix/syscall_linux_mips64x.go",
        "lines": [
          83
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "CMDi-001",
        "title": "Command Injection in syscall_linux_mips64x.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/cmd/vendor/golang.org/x/sys/unix/syscall_linux_mips64x.go",
        "lines": [
          83
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "XSS-001",
        "title": "Cross-Site Scripting in syscall_openbsd_arm.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/cmd/vendor/golang.org/x/sys/unix/syscall_openbsd_arm.go",
        "lines": [
          13
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "CMDi-001",
        "title": "Command Injection in syscall_openbsd_arm.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/cmd/vendor/golang.org/x/sys/unix/syscall_openbsd_arm.go",
        "lines": [
          13
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "XSS-001",
        "title": "Cross-Site Scripting in syscall_netbsd_386.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/cmd/vendor/golang.org/x/sys/unix/syscall_netbsd_386.go",
        "lines": [
          13
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "CMDi-001",
        "title": "Command Injection in syscall_netbsd_386.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/cmd/vendor/golang.org/x/sys/unix/syscall_netbsd_386.go",
        "lines": [
          13
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-001",
        "title": "Command Injection in zerrors_zos_s390x.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/cmd/vendor/golang.org/x/sys/unix/zerrors_zos_s390x.go",
        "lines": [
          871
        ],
        "description": "Command injection vulnerability: exec() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "XSS-001",
        "title": "Cross-Site Scripting in syscall_linux_mipsx.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/cmd/vendor/golang.org/x/sys/unix/syscall_linux_mipsx.go",
        "lines": [
          102
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "CMDi-001",
        "title": "Command Injection in syscall_linux_mipsx.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/cmd/vendor/golang.org/x/sys/unix/syscall_linux_mipsx.go",
        "lines": [
          102
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "XSS-001",
        "title": "Cross-Site Scripting in syscall_openbsd_riscv64.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/cmd/vendor/golang.org/x/sys/unix/syscall_openbsd_riscv64.go",
        "lines": [
          13
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "CMDi-001",
        "title": "Command Injection in syscall_openbsd_riscv64.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/cmd/vendor/golang.org/x/sys/unix/syscall_openbsd_riscv64.go",
        "lines": [
          13
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "XSS-001",
        "title": "Cross-Site Scripting in syscall_netbsd_arm64.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/cmd/vendor/golang.org/x/sys/unix/syscall_netbsd_arm64.go",
        "lines": [
          13
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "CMDi-001",
        "title": "Command Injection in syscall_netbsd_arm64.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/cmd/vendor/golang.org/x/sys/unix/syscall_netbsd_arm64.go",
        "lines": [
          13
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "XSS-001",
        "title": "Cross-Site Scripting in syscall_linux_ppc.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/cmd/vendor/golang.org/x/sys/unix/syscall_linux_ppc.go",
        "lines": [
          121
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "CMDi-001",
        "title": "Command Injection in syscall_linux_ppc.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/cmd/vendor/golang.org/x/sys/unix/syscall_linux_ppc.go",
        "lines": [
          121
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "XSS-001",
        "title": "Cross-Site Scripting in syscall_linux_riscv64.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/cmd/vendor/golang.org/x/sys/unix/syscall_linux_riscv64.go",
        "lines": [
          86
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "CMDi-001",
        "title": "Command Injection in syscall_linux_riscv64.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/cmd/vendor/golang.org/x/sys/unix/syscall_linux_riscv64.go",
        "lines": [
          86
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "XSS-001",
        "title": "Cross-Site Scripting in types_windows.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/cmd/vendor/golang.org/x/sys/windows/types_windows.go",
        "lines": [
          766
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "CMDi-001",
        "title": "Command Injection in types_windows.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/cmd/vendor/golang.org/x/sys/windows/types_windows.go",
        "lines": [
          766
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "XSS-001",
        "title": "Cross-Site Scripting in syscall_windows.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/cmd/vendor/golang.org/x/sys/windows/syscall_windows.go",
        "lines": [
          741
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "XSS-002",
        "title": "Cross-Site Scripting in syscall_windows.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/cmd/vendor/golang.org/x/sys/windows/syscall_windows.go",
        "lines": [
          1337
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "CMDi-001",
        "title": "Command Injection in syscall_windows.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/cmd/vendor/golang.org/x/sys/windows/syscall_windows.go",
        "lines": [
          741
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-002",
        "title": "Command Injection in syscall_windows.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/cmd/vendor/golang.org/x/sys/windows/syscall_windows.go",
        "lines": [
          1337
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-001",
        "title": "Command Injection in exec_windows.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/cmd/vendor/golang.org/x/sys/windows/exec_windows.go",
        "lines": [
          185
        ],
        "description": "Command injection vulnerability: exec() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-001",
        "title": "Command Injection in unitchecker.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/cmd/vendor/golang.org/x/tools/go/analysis/unitchecker/unitchecker.go",
        "lines": [
          404
        ],
        "description": "Command injection vulnerability: exec() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-002",
        "title": "Command Injection in unitchecker.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/cmd/vendor/golang.org/x/tools/go/analysis/unitchecker/unitchecker.go",
        "lines": [
          484
        ],
        "description": "Command injection vulnerability: exec() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "XSS-001",
        "title": "Cross-Site Scripting in buildtag.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/cmd/vendor/golang.org/x/tools/go/analysis/passes/buildtag/buildtag.go",
        "lines": [
          374
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "CMDi-001",
        "title": "Command Injection in buildtag.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/cmd/vendor/golang.org/x/tools/go/analysis/passes/buildtag/buildtag.go",
        "lines": [
          374
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-001",
        "title": "Command Injection in lib.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/cmd/link/internal/ld/lib.go",
        "lines": [
          1421
        ],
        "description": "Command injection vulnerability: exec() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-001",
        "title": "Command Injection in execarchive.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/cmd/link/internal/ld/execarchive.go",
        "lines": [
          18
        ],
        "description": "Command injection vulnerability: exec() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-002",
        "title": "Command Injection in execarchive.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/cmd/link/internal/ld/execarchive.go",
        "lines": [
          31
        ],
        "description": "Command injection vulnerability: exec() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-003",
        "title": "Command Injection in execarchive.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/cmd/link/internal/ld/execarchive.go",
        "lines": [
          33
        ],
        "description": "Command injection vulnerability: exec() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "XSS-001",
        "title": "Cross-Site Scripting in object.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/cmd/compile/internal/types2/object.go",
        "lines": [
          90
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "CMDi-001",
        "title": "Command Injection in object.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/cmd/compile/internal/types2/object.go",
        "lines": [
          90
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "XSS-001",
        "title": "Cross-Site Scripting in plive.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/cmd/compile/internal/liveness/plive.go",
        "lines": [
          183
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "XSS-002",
        "title": "Cross-Site Scripting in plive.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/cmd/compile/internal/liveness/plive.go",
        "lines": [
          931
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "CMDi-001",
        "title": "Command Injection in plive.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/cmd/compile/internal/liveness/plive.go",
        "lines": [
          183
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-002",
        "title": "Command Injection in plive.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/cmd/compile/internal/liveness/plive.go",
        "lines": [
          931
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "XSS-001",
        "title": "Cross-Site Scripting in rewriteARM64.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/cmd/compile/internal/ssa/rewriteARM64.go",
        "lines": [
          3664
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "XSS-002",
        "title": "Cross-Site Scripting in rewriteARM64.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/cmd/compile/internal/ssa/rewriteARM64.go",
        "lines": [
          3670
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "XSS-003",
        "title": "Cross-Site Scripting in rewriteARM64.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/cmd/compile/internal/ssa/rewriteARM64.go",
        "lines": [
          3677
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "XSS-004",
        "title": "Cross-Site Scripting in rewriteARM64.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/cmd/compile/internal/ssa/rewriteARM64.go",
        "lines": [
          3683
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "XSS-005",
        "title": "Cross-Site Scripting in rewriteARM64.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/cmd/compile/internal/ssa/rewriteARM64.go",
        "lines": [
          3747
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "XSS-006",
        "title": "Cross-Site Scripting in rewriteARM64.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/cmd/compile/internal/ssa/rewriteARM64.go",
        "lines": [
          3753
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "XSS-007",
        "title": "Cross-Site Scripting in rewriteARM64.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/cmd/compile/internal/ssa/rewriteARM64.go",
        "lines": [
          3760
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "XSS-008",
        "title": "Cross-Site Scripting in rewriteARM64.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/cmd/compile/internal/ssa/rewriteARM64.go",
        "lines": [
          3765
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "XSS-009",
        "title": "Cross-Site Scripting in rewriteARM64.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/cmd/compile/internal/ssa/rewriteARM64.go",
        "lines": [
          3826
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "XSS-010",
        "title": "Cross-Site Scripting in rewriteARM64.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/cmd/compile/internal/ssa/rewriteARM64.go",
        "lines": [
          3831
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "XSS-011",
        "title": "Cross-Site Scripting in rewriteARM64.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/cmd/compile/internal/ssa/rewriteARM64.go",
        "lines": [
          3839
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "XSS-012",
        "title": "Cross-Site Scripting in rewriteARM64.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/cmd/compile/internal/ssa/rewriteARM64.go",
        "lines": [
          3844
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "XSS-013",
        "title": "Cross-Site Scripting in rewriteARM64.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/cmd/compile/internal/ssa/rewriteARM64.go",
        "lines": [
          3873
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "XSS-014",
        "title": "Cross-Site Scripting in rewriteARM64.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/cmd/compile/internal/ssa/rewriteARM64.go",
        "lines": [
          3879
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "XSS-015",
        "title": "Cross-Site Scripting in rewriteARM64.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/cmd/compile/internal/ssa/rewriteARM64.go",
        "lines": [
          3886
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "XSS-016",
        "title": "Cross-Site Scripting in rewriteARM64.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/cmd/compile/internal/ssa/rewriteARM64.go",
        "lines": [
          3892
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "XSS-017",
        "title": "Cross-Site Scripting in rewriteARM64.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/cmd/compile/internal/ssa/rewriteARM64.go",
        "lines": [
          3922
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "XSS-018",
        "title": "Cross-Site Scripting in rewriteARM64.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/cmd/compile/internal/ssa/rewriteARM64.go",
        "lines": [
          3928
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "XSS-019",
        "title": "Cross-Site Scripting in rewriteARM64.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/cmd/compile/internal/ssa/rewriteARM64.go",
        "lines": [
          3935
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "XSS-020",
        "title": "Cross-Site Scripting in rewriteARM64.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/cmd/compile/internal/ssa/rewriteARM64.go",
        "lines": [
          3941
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "XSS-021",
        "title": "Cross-Site Scripting in rewriteARM64.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/cmd/compile/internal/ssa/rewriteARM64.go",
        "lines": [
          3970
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "XSS-022",
        "title": "Cross-Site Scripting in rewriteARM64.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/cmd/compile/internal/ssa/rewriteARM64.go",
        "lines": [
          3976
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "XSS-023",
        "title": "Cross-Site Scripting in rewriteARM64.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/cmd/compile/internal/ssa/rewriteARM64.go",
        "lines": [
          3983
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "XSS-024",
        "title": "Cross-Site Scripting in rewriteARM64.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/cmd/compile/internal/ssa/rewriteARM64.go",
        "lines": [
          3989
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "CMDi-001",
        "title": "Command Injection in rewriteARM64.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/cmd/compile/internal/ssa/rewriteARM64.go",
        "lines": [
          3664
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-002",
        "title": "Command Injection in rewriteARM64.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/cmd/compile/internal/ssa/rewriteARM64.go",
        "lines": [
          3670
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-003",
        "title": "Command Injection in rewriteARM64.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/cmd/compile/internal/ssa/rewriteARM64.go",
        "lines": [
          3677
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-004",
        "title": "Command Injection in rewriteARM64.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/cmd/compile/internal/ssa/rewriteARM64.go",
        "lines": [
          3683
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-005",
        "title": "Command Injection in rewriteARM64.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/cmd/compile/internal/ssa/rewriteARM64.go",
        "lines": [
          3747
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-006",
        "title": "Command Injection in rewriteARM64.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/cmd/compile/internal/ssa/rewriteARM64.go",
        "lines": [
          3753
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-007",
        "title": "Command Injection in rewriteARM64.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/cmd/compile/internal/ssa/rewriteARM64.go",
        "lines": [
          3760
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-008",
        "title": "Command Injection in rewriteARM64.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/cmd/compile/internal/ssa/rewriteARM64.go",
        "lines": [
          3765
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-009",
        "title": "Command Injection in rewriteARM64.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/cmd/compile/internal/ssa/rewriteARM64.go",
        "lines": [
          3826
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-010",
        "title": "Command Injection in rewriteARM64.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/cmd/compile/internal/ssa/rewriteARM64.go",
        "lines": [
          3831
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-011",
        "title": "Command Injection in rewriteARM64.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/cmd/compile/internal/ssa/rewriteARM64.go",
        "lines": [
          3839
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-012",
        "title": "Command Injection in rewriteARM64.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/cmd/compile/internal/ssa/rewriteARM64.go",
        "lines": [
          3844
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-013",
        "title": "Command Injection in rewriteARM64.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/cmd/compile/internal/ssa/rewriteARM64.go",
        "lines": [
          3873
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-014",
        "title": "Command Injection in rewriteARM64.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/cmd/compile/internal/ssa/rewriteARM64.go",
        "lines": [
          3879
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-015",
        "title": "Command Injection in rewriteARM64.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/cmd/compile/internal/ssa/rewriteARM64.go",
        "lines": [
          3886
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-016",
        "title": "Command Injection in rewriteARM64.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/cmd/compile/internal/ssa/rewriteARM64.go",
        "lines": [
          3892
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-017",
        "title": "Command Injection in rewriteARM64.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/cmd/compile/internal/ssa/rewriteARM64.go",
        "lines": [
          3922
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-018",
        "title": "Command Injection in rewriteARM64.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/cmd/compile/internal/ssa/rewriteARM64.go",
        "lines": [
          3928
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-019",
        "title": "Command Injection in rewriteARM64.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/cmd/compile/internal/ssa/rewriteARM64.go",
        "lines": [
          3935
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-020",
        "title": "Command Injection in rewriteARM64.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/cmd/compile/internal/ssa/rewriteARM64.go",
        "lines": [
          3941
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-021",
        "title": "Command Injection in rewriteARM64.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/cmd/compile/internal/ssa/rewriteARM64.go",
        "lines": [
          3970
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-022",
        "title": "Command Injection in rewriteARM64.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/cmd/compile/internal/ssa/rewriteARM64.go",
        "lines": [
          3976
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-023",
        "title": "Command Injection in rewriteARM64.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/cmd/compile/internal/ssa/rewriteARM64.go",
        "lines": [
          3983
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-024",
        "title": "Command Injection in rewriteARM64.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/cmd/compile/internal/ssa/rewriteARM64.go",
        "lines": [
          3989
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "XSS-001",
        "title": "Cross-Site Scripting in html.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/cmd/compile/internal/ssa/html.go",
        "lines": [
          631
        ],
        "description": "XSS vulnerability detected: innerHTML assignment without sanitization",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "XSS-002",
        "title": "Cross-Site Scripting in html.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/cmd/compile/internal/ssa/html.go",
        "lines": [
          634
        ],
        "description": "XSS vulnerability detected: innerHTML assignment without sanitization",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "XSS-001",
        "title": "Cross-Site Scripting in rewrite.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/cmd/compile/internal/ssa/rewrite.go",
        "lines": [
          1181
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "XSS-002",
        "title": "Cross-Site Scripting in rewrite.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/cmd/compile/internal/ssa/rewrite.go",
        "lines": [
          1184
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "CMDi-001",
        "title": "Command Injection in rewrite.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/cmd/compile/internal/ssa/rewrite.go",
        "lines": [
          1181
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-002",
        "title": "Command Injection in rewrite.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/cmd/compile/internal/ssa/rewrite.go",
        "lines": [
          1184
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "PT-001",
        "title": "Path Traversal in rulegen.go",
        "type": "Path Traversal",
        "severity": "High",
        "cvss_score": 7.5,
        "cwe": "CWE-22",
        "file": "src/cmd/compile/internal/ssa/_gen/rulegen.go",
        "lines": [
          98
        ],
        "description": "Path traversal vulnerability: File open with path concatenation",
        "impact": "Attacker can read arbitrary files on the server, potentially accessing sensitive configuration files, credentials, or source code.",
        "remediation": "Use os.path.basename() to extract filename, validate against whitelist, or use safe_join(). Never trust user input for file paths."
      },
      {
        "id": "XSS-001",
        "title": "Cross-Site Scripting in conds.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/cmd/internal/script/conds.go",
        "lines": [
          77
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "XSS-002",
        "title": "Cross-Site Scripting in conds.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/cmd/internal/script/conds.go",
        "lines": [
          81
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "XSS-003",
        "title": "Cross-Site Scripting in conds.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/cmd/internal/script/conds.go",
        "lines": [
          96
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "XSS-004",
        "title": "Cross-Site Scripting in conds.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/cmd/internal/script/conds.go",
        "lines": [
          97
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "XSS-005",
        "title": "Cross-Site Scripting in conds.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/cmd/internal/script/conds.go",
        "lines": [
          113
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "XSS-006",
        "title": "Cross-Site Scripting in conds.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/cmd/internal/script/conds.go",
        "lines": [
          139
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "XSS-007",
        "title": "Cross-Site Scripting in conds.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/cmd/internal/script/conds.go",
        "lines": [
          143
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "XSS-008",
        "title": "Cross-Site Scripting in conds.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/cmd/internal/script/conds.go",
        "lines": [
          164
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "XSS-009",
        "title": "Cross-Site Scripting in conds.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/cmd/internal/script/conds.go",
        "lines": [
          182
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "CMDi-001",
        "title": "Command Injection in conds.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/cmd/internal/script/conds.go",
        "lines": [
          77
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-002",
        "title": "Command Injection in conds.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/cmd/internal/script/conds.go",
        "lines": [
          81
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-003",
        "title": "Command Injection in conds.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/cmd/internal/script/conds.go",
        "lines": [
          96
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-004",
        "title": "Command Injection in conds.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/cmd/internal/script/conds.go",
        "lines": [
          97
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-005",
        "title": "Command Injection in conds.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/cmd/internal/script/conds.go",
        "lines": [
          113
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-006",
        "title": "Command Injection in conds.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/cmd/internal/script/conds.go",
        "lines": [
          139
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-007",
        "title": "Command Injection in conds.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/cmd/internal/script/conds.go",
        "lines": [
          143
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-008",
        "title": "Command Injection in conds.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/cmd/internal/script/conds.go",
        "lines": [
          164
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-009",
        "title": "Command Injection in conds.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/cmd/internal/script/conds.go",
        "lines": [
          182
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "XSS-001",
        "title": "Cross-Site Scripting in engine.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/cmd/internal/script/engine.go",
        "lines": [
          125
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "XSS-002",
        "title": "Cross-Site Scripting in engine.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/cmd/internal/script/engine.go",
        "lines": [
          535
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "XSS-003",
        "title": "Cross-Site Scripting in engine.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/cmd/internal/script/engine.go",
        "lines": [
          746
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "XSS-004",
        "title": "Cross-Site Scripting in engine.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/cmd/internal/script/engine.go",
        "lines": [
          768
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "CMDi-001",
        "title": "Command Injection in engine.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/cmd/internal/script/engine.go",
        "lines": [
          125
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-002",
        "title": "Command Injection in engine.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/cmd/internal/script/engine.go",
        "lines": [
          535
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-003",
        "title": "Command Injection in engine.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/cmd/internal/script/engine.go",
        "lines": [
          746
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-004",
        "title": "Command Injection in engine.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/cmd/internal/script/engine.go",
        "lines": [
          768
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-001",
        "title": "Command Injection in cmds.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/cmd/internal/script/cmds.go",
        "lines": [
          39
        ],
        "description": "Command injection vulnerability: exec() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-002",
        "title": "Command Injection in cmds.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/cmd/internal/script/cmds.go",
        "lines": [
          403
        ],
        "description": "Command injection vulnerability: exec() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "XSS-001",
        "title": "Cross-Site Scripting in asm9_gtables.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/cmd/internal/obj/ppc64/asm9_gtables.go",
        "lines": [
          1330
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "CMDi-001",
        "title": "Command Injection in asm9_gtables.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/cmd/internal/obj/ppc64/asm9_gtables.go",
        "lines": [
          1330
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-001",
        "title": "Command Injection in mmap.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/cmd/go/internal/mmap/mmap.go",
        "lines": [
          41
        ],
        "description": "Command injection vulnerability: C system() call",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-002",
        "title": "Command Injection in mmap.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/cmd/go/internal/mmap/mmap.go",
        "lines": [
          43
        ],
        "description": "Command injection vulnerability: C system() call",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-001",
        "title": "Command Injection in proxy.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/cmd/go/internal/modfetch/proxy.go",
        "lines": [
          36
        ],
        "description": "Command injection vulnerability: C system() call",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "XSS-001",
        "title": "Cross-Site Scripting in build.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/cmd/go/internal/modindex/build.go",
        "lines": [
          656
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "XSS-002",
        "title": "Cross-Site Scripting in build.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/cmd/go/internal/modindex/build.go",
        "lines": [
          659
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "XSS-003",
        "title": "Cross-Site Scripting in build.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/cmd/go/internal/modindex/build.go",
        "lines": [
          660
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "CMDi-001",
        "title": "Command Injection in build.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/cmd/go/internal/modindex/build.go",
        "lines": [
          656
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-002",
        "title": "Command Injection in build.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/cmd/go/internal/modindex/build.go",
        "lines": [
          659
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-003",
        "title": "Command Injection in build.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/cmd/go/internal/modindex/build.go",
        "lines": [
          660
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "XSS-001",
        "title": "Cross-Site Scripting in read.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/cmd/go/internal/modindex/read.go",
        "lines": [
          511
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "XSS-002",
        "title": "Cross-Site Scripting in read.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/cmd/go/internal/modindex/read.go",
        "lines": [
          515
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "XSS-003",
        "title": "Cross-Site Scripting in read.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/cmd/go/internal/modindex/read.go",
        "lines": [
          792
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "XSS-004",
        "title": "Cross-Site Scripting in read.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/cmd/go/internal/modindex/read.go",
        "lines": [
          798
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "CMDi-001",
        "title": "Command Injection in read.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/cmd/go/internal/modindex/read.go",
        "lines": [
          511
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-002",
        "title": "Command Injection in read.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/cmd/go/internal/modindex/read.go",
        "lines": [
          515
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-003",
        "title": "Command Injection in read.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/cmd/go/internal/modindex/read.go",
        "lines": [
          792
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-004",
        "title": "Command Injection in read.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/cmd/go/internal/modindex/read.go",
        "lines": [
          798
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "XSS-001",
        "title": "Cross-Site Scripting in build.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/cmd/go/internal/imports/build.go",
        "lines": [
          88
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "XSS-002",
        "title": "Cross-Site Scripting in build.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/cmd/go/internal/imports/build.go",
        "lines": [
          109
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "XSS-003",
        "title": "Cross-Site Scripting in build.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/cmd/go/internal/imports/build.go",
        "lines": [
          225
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "XSS-004",
        "title": "Cross-Site Scripting in build.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/cmd/go/internal/imports/build.go",
        "lines": [
          229
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "XSS-005",
        "title": "Cross-Site Scripting in build.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/cmd/go/internal/imports/build.go",
        "lines": [
          234
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "XSS-006",
        "title": "Cross-Site Scripting in build.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/cmd/go/internal/imports/build.go",
        "lines": [
          236
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "XSS-007",
        "title": "Cross-Site Scripting in build.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/cmd/go/internal/imports/build.go",
        "lines": [
          238
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "XSS-008",
        "title": "Cross-Site Scripting in build.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/cmd/go/internal/imports/build.go",
        "lines": [
          245
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "XSS-009",
        "title": "Cross-Site Scripting in build.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/cmd/go/internal/imports/build.go",
        "lines": [
          249
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "XSS-010",
        "title": "Cross-Site Scripting in build.go",
        "type": "Cross-Site Scripting (XSS)",
        "severity": "High",
        "cvss_score": 7.1,
        "cwe": "CWE-79",
        "file": "src/cmd/go/internal/imports/build.go",
        "lines": [
          250
        ],
        "description": "XSS vulnerability detected: eval() with potentially user-controlled data",
        "impact": "Attacker can execute arbitrary JavaScript in victim's browser, steal cookies, session tokens, or perform actions on behalf of the user.",
        "remediation": "Sanitize user input before rendering. Use textContent instead of innerHTML, or use a sanitization library like DOMPurify."
      },
      {
        "id": "CMDi-001",
        "title": "Command Injection in build.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/cmd/go/internal/imports/build.go",
        "lines": [
          88
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-002",
        "title": "Command Injection in build.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/cmd/go/internal/imports/build.go",
        "lines": [
          109
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-003",
        "title": "Command Injection in build.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/cmd/go/internal/imports/build.go",
        "lines": [
          225
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-004",
        "title": "Command Injection in build.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/cmd/go/internal/imports/build.go",
        "lines": [
          229
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-005",
        "title": "Command Injection in build.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/cmd/go/internal/imports/build.go",
        "lines": [
          234
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-006",
        "title": "Command Injection in build.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/cmd/go/internal/imports/build.go",
        "lines": [
          236
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-007",
        "title": "Command Injection in build.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/cmd/go/internal/imports/build.go",
        "lines": [
          238
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-008",
        "title": "Command Injection in build.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/cmd/go/internal/imports/build.go",
        "lines": [
          245
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-009",
        "title": "Command Injection in build.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/cmd/go/internal/imports/build.go",
        "lines": [
          249
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-010",
        "title": "Command Injection in build.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/cmd/go/internal/imports/build.go",
        "lines": [
          250
        ],
        "description": "Command injection vulnerability: eval() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "PT-001",
        "title": "Path Traversal in verify.go",
        "type": "Path Traversal",
        "severity": "High",
        "cvss_score": 7.5,
        "cwe": "CWE-22",
        "file": "src/cmd/go/internal/modcmd/verify.go",
        "lines": [
          106
        ],
        "description": "Path traversal vulnerability: readFile with path concatenation",
        "impact": "Attacker can read arbitrary files on the server, potentially accessing sensitive configuration files, credentials, or source code.",
        "remediation": "Use os.path.basename() to extract filename, validate against whitelist, or use safe_join(). Never trust user input for file paths."
      },
      {
        "id": "PT-001",
        "title": "Path Traversal in fips140.go",
        "type": "Path Traversal",
        "severity": "High",
        "cvss_score": 7.5,
        "cwe": "CWE-22",
        "file": "src/cmd/go/internal/fips140/fips140.go",
        "lines": [
          188
        ],
        "description": "Path traversal vulnerability: readFile with path concatenation",
        "impact": "Attacker can read arbitrary files on the server, potentially accessing sensitive configuration files, credentials, or source code.",
        "remediation": "Use os.path.basename() to extract filename, validate against whitelist, or use safe_join(). Never trust user input for file paths."
      },
      {
        "id": "PT-001",
        "title": "Path Traversal in exec.go",
        "type": "Path Traversal",
        "severity": "High",
        "cvss_score": 7.5,
        "cwe": "CWE-22",
        "file": "src/cmd/go/internal/work/exec.go",
        "lines": [
          1062
        ],
        "description": "Path traversal vulnerability: File open with path concatenation",
        "impact": "Attacker can read arbitrary files on the server, potentially accessing sensitive configuration files, credentials, or source code.",
        "remediation": "Use os.path.basename() to extract filename, validate against whitelist, or use safe_join(). Never trust user input for file paths."
      },
      {
        "id": "CMDi-001",
        "title": "Command Injection in generate.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/cmd/go/internal/generate/generate.go",
        "lines": [
          82
        ],
        "description": "Command injection vulnerability: C system() call",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-002",
        "title": "Command Injection in generate.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/cmd/go/internal/generate/generate.go",
        "lines": [
          352
        ],
        "description": "Command injection vulnerability: exec() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-003",
        "title": "Command Injection in generate.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/cmd/go/internal/generate/generate.go",
        "lines": [
          486
        ],
        "description": "Command injection vulnerability: exec() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-001",
        "title": "Command Injection in get.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/cmd/go/internal/modget/get.go",
        "lines": [
          144
        ],
        "description": "Command injection vulnerability: C system() call",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-001",
        "title": "Command Injection in helpdoc.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/cmd/go/internal/help/helpdoc.go",
        "lines": [
          721
        ],
        "description": "Command injection vulnerability: C system() call",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-001",
        "title": "Command Injection in switch.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/cmd/go/internal/toolchain/switch.go",
        "lines": [
          103
        ],
        "description": "Command injection vulnerability: exec() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-001",
        "title": "Command Injection in exec.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/cmd/go/internal/toolchain/exec.go",
        "lines": [
          61
        ],
        "description": "Command injection vulnerability: exec() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-001",
        "title": "Command Injection in select.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/cmd/go/internal/toolchain/select.go",
        "lines": [
          286
        ],
        "description": "Command injection vulnerability: exec() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-002",
        "title": "Command Injection in select.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/cmd/go/internal/toolchain/select.go",
        "lines": [
          303
        ],
        "description": "Command injection vulnerability: exec() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-003",
        "title": "Command Injection in select.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/cmd/go/internal/toolchain/select.go",
        "lines": [
          425
        ],
        "description": "Command injection vulnerability: exec() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-004",
        "title": "Command Injection in select.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/cmd/go/internal/toolchain/select.go",
        "lines": [
          426
        ],
        "description": "Command injection vulnerability: exec() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-005",
        "title": "Command Injection in select.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/cmd/go/internal/toolchain/select.go",
        "lines": [
          427
        ],
        "description": "Command injection vulnerability: exec() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "CMDi-006",
        "title": "Command Injection in select.go",
        "type": "Command Injection",
        "severity": "Critical",
        "cvss_score": 9.8,
        "cwe": "CWE-78",
        "file": "src/cmd/go/internal/toolchain/select.go",
        "lines": [
          428
        ],
        "description": "Command injection vulnerability: exec() with user input",
        "impact": "Attacker can execute arbitrary system commands, potentially leading to full system compromise, data exfiltration, or denial of service.",
        "remediation": "Use subprocess with shell=False and pass arguments as a list. Avoid os.system() entirely. Validate and sanitize all user input."
      },
      {
        "id": "PT-001",
        "title": "Path Traversal in codehost.go",
        "type": "Path Traversal",
        "severity": "High",
        "cvss_score": 7.5,
        "cwe": "CWE-22",
        "file": "src/cmd/go/internal/modfetch/codehost/codehost.go",
        "lines": [
          249
        ],
        "description": "Path traversal vulnerability: readFile with path concatenation",
        "impact": "Attacker can read arbitrary files on the server, potentially accessing sensitive configuration files, credentials, or source code.",
        "remediation": "Use os.path.basename() to extract filename, validate against whitelist, or use safe_join(). Never trust user input for file paths."
      }
    ],
    "supply_chain": [
      {
        "id": "SC-001",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/internal/trace/traceviewer/static/webcomponents.min.js",
        "line": 11,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-002",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/internal/trace/traceviewer/static/webcomponents.min.js",
        "line": 12,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-003",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/internal/trace/traceviewer/static/webcomponents.min.js",
        "line": 13,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-004",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/internal/trace/traceviewer/static/webcomponents.min.js",
        "line": 14,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-005",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/sync/example_test.go",
        "line": 24,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-006",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/sync/example_test.go",
        "line": 25,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-007",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/sync/example_test.go",
        "line": 44,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-008",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/sync/example_test.go",
        "line": 45,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-009",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/text/template/exec_test.go",
        "line": 500,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-010",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/testing/synctest/example_test.go",
        "line": 120,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-011",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/testing/synctest/synctest.go",
        "line": 225,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-012",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/math/big/calibrate_graph.go",
        "line": 191,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-013",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/html/template/content_test.go",
        "line": 327,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-014",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/html/template/content_test.go",
        "line": 341,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-015",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/html/template/content_test.go",
        "line": 355,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-016",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/html/template/content_test.go",
        "line": 369,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-017",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/html/template/exec_test.go",
        "line": 481,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-018",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/html/template/context.go",
        "line": 227,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-019",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/html/template/escape_test.go",
        "line": 176,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-020",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/html/template/escape_test.go",
        "line": 177,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-021",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/html/template/escape_test.go",
        "line": 385,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-022",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/html/template/escape_test.go",
        "line": 386,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-023",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/html/template/escape_test.go",
        "line": 390,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-024",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/html/template/escape_test.go",
        "line": 771,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-025",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/html/template/escape_test.go",
        "line": 786,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-026",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/encoding/xml/read_test.go",
        "line": 33,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-027",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/encoding/xml/read_test.go",
        "line": 34,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-028",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/encoding/xml/read_test.go",
        "line": 66,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-029",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/encoding/xml/read_test.go",
        "line": 87,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-030",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/encoding/xml/read_test.go",
        "line": 123,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-031",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/encoding/xml/read_test.go",
        "line": 126,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-032",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/encoding/xml/read_test.go",
        "line": 127,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-033",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/encoding/xml/read_test.go",
        "line": 129,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-034",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/encoding/xml/read_test.go",
        "line": 139,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-035",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/encoding/xml/read_test.go",
        "line": 186,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-036",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/encoding/xml/read_test.go",
        "line": 409,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-037",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/encoding/xml/read_test.go",
        "line": 410,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-038",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/encoding/xml/read_test.go",
        "line": 420,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-039",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/encoding/xml/read_test.go",
        "line": 421,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-040",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/encoding/xml/read_test.go",
        "line": 427,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-041",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/encoding/xml/read_test.go",
        "line": 428,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-042",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/encoding/xml/read_test.go",
        "line": 433,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-043",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/encoding/xml/read_test.go",
        "line": 450,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-044",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/encoding/xml/read_test.go",
        "line": 457,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-045",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/encoding/xml/read_test.go",
        "line": 496,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-046",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/encoding/xml/read_test.go",
        "line": 508,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-047",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/encoding/xml/read_test.go",
        "line": 509,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-048",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/encoding/xml/read_test.go",
        "line": 510,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-049",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/encoding/xml/read_test.go",
        "line": 511,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-050",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/encoding/xml/read_test.go",
        "line": 512,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-051",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/encoding/xml/read_test.go",
        "line": 513,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-052",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/encoding/xml/read_test.go",
        "line": 514,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-053",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/encoding/xml/read_test.go",
        "line": 523,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-054",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/encoding/xml/read_test.go",
        "line": 529,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-055",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/encoding/xml/read_test.go",
        "line": 536,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-056",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/encoding/xml/read_test.go",
        "line": 542,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-057",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/encoding/xml/read_test.go",
        "line": 549,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-058",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/encoding/xml/read_test.go",
        "line": 562,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-059",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/encoding/xml/read_test.go",
        "line": 566,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-060",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/encoding/xml/read_test.go",
        "line": 570,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-061",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/encoding/xml/read_test.go",
        "line": 574,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-062",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/encoding/xml/read_test.go",
        "line": 613,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-063",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/encoding/xml/marshal.go",
        "line": 344,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-064",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/encoding/xml/marshal.go",
        "line": 346,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-065",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/encoding/xml/xml.go",
        "line": 337,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-066",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/encoding/xml/atom_test.go",
        "line": 10,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-067",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/encoding/xml/atom_test.go",
        "line": 12,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-068",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/encoding/xml/atom_test.go",
        "line": 20,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-069",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/encoding/xml/atom_test.go",
        "line": 29,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-070",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/encoding/xml/atom_test.go",
        "line": 32,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-071",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/encoding/xml/atom_test.go",
        "line": 37,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-072",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/encoding/xml/xml_test.go",
        "line": 125,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-073",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/encoding/xml/xml_test.go",
        "line": 146,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-074",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/encoding/xml/xml_test.go",
        "line": 183,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-075",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/encoding/xml/xml_test.go",
        "line": 437,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-076",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/encoding/xml/xml_test.go",
        "line": 448,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-077",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/encoding/xml/xml_test.go",
        "line": 881,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-078",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/encoding/xml/xml_test.go",
        "line": 888,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-079",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/encoding/xml/xml_test.go",
        "line": 955,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-080",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/encoding/xml/marshal_test.go",
        "line": 2295,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-081",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/encoding/xml/marshal_test.go",
        "line": 2298,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-082",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/encoding/xml/marshal_test.go",
        "line": 2303,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-083",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/encoding/xml/marshal_test.go",
        "line": 2306,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-084",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/encoding/xml/marshal_test.go",
        "line": 2311,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-085",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/encoding/xml/marshal_test.go",
        "line": 2314,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-086",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/encoding/json/decode_test.go",
        "line": 441,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-087",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/encoding/json/v2_decode_test.go",
        "line": 445,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-088",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/runtime/race/testdata/io_test.go",
        "line": 65,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-089",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/runtime/race/testdata/io_test.go",
        "line": 70,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-090",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/runtime/testdata/testgoroutineleakprofile/goker/hugo3251.go",
        "line": 60,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-091",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/go/doc/comment/old_test.go",
        "line": 46,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-092",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/go/doc/comment/old_test.go",
        "line": 49,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-093",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/go/doc/comment/old_test.go",
        "line": 50,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-094",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/go/doc/comment/old_test.go",
        "line": 51,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-095",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/go/doc/comment/old_test.go",
        "line": 52,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-096",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/go/doc/comment/old_test.go",
        "line": 54,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-097",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/go/doc/comment/old_test.go",
        "line": 55,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-098",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/go/doc/comment/old_test.go",
        "line": 56,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-099",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/go/doc/comment/old_test.go",
        "line": 57,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-100",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/go/doc/comment/old_test.go",
        "line": 58,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-101",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/go/doc/comment/old_test.go",
        "line": 59,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-102",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/go/doc/comment/old_test.go",
        "line": 64,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-103",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/go/doc/comment/old_test.go",
        "line": 66,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-104",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/go/doc/comment/old_test.go",
        "line": 67,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-105",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/go/doc/comment/old_test.go",
        "line": 68,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-106",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/go/doc/comment/old_test.go",
        "line": 70,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-107",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/example_test.go",
        "line": 150,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-108",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url.go",
        "line": 1306,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-109",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 29,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-110",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 38,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-111",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 48,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-112",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 59,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-113",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 93,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-114",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 104,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-115",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 115,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-116",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 126,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-117",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 137,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-118",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 226,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-119",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 232,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-120",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 236,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-121",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 242,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-122",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 246,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-123",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 252,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-124",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 255,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-125",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 263,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-126",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 266,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-127",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 277,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-128",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 285,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-129",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 288,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-130",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 297,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-131",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 338,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-132",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 348,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-133",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 358,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-134",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 368,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-135",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 378,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-136",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 388,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-137",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 398,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-138",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 408,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-139",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 414,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-140",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 418,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-141",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 424,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-142",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 428,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-143",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 460,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-144",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 482,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-145",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 491,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-146",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 501,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-147",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 511,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-148",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 520,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-149",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 529,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-150",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 539,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-151",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 545,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-152",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 548,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-153",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 554,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-154",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 557,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-155",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 676,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-156",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 677,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-157",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 678,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-158",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 683,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-159",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 684,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-160",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 685,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-161",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 686,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-162",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 689,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-163",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 690,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-164",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 691,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-165",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 692,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-166",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 697,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-167",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 698,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-168",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 699,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-169",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 700,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-170",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 701,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-171",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 702,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-172",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 708,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-173",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 709,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-174",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 742,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-175",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 765,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-176",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 807,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-177",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 817,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-178",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 827,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-179",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 836,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-180",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 1130,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-181",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 1131,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-182",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 1132,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-183",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 1136,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-184",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 1137,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-185",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 1138,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-186",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 1139,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-187",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 1142,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-188",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 1143,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-189",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 1151,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-190",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 1152,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-191",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 1153,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-192",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 1156,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-193",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 1157,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-194",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 1158,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-195",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 1161,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-196",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 1162,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-197",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 1163,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-198",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 1164,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-199",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 1166,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-200",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 1167,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-201",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 1168,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-202",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 1169,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-203",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 1170,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-204",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 1171,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-205",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 1172,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-206",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 1173,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-207",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 1177,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-208",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 1180,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-209",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 1183,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-210",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 1184,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-211",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 1187,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-212",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 1188,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-213",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 1189,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-214",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 1190,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-215",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 1191,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-216",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 1192,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-217",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 1193,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-218",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 1197,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-219",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 1198,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-220",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 1199,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-221",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 1200,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-222",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 1201,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-223",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 1202,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-224",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 1203,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-225",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 1204,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-226",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 1205,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-227",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 1206,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-228",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 1207,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-229",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 1208,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-230",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 1209,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-231",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 1210,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-232",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 1211,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-233",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 1212,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-234",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 1213,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-235",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 1214,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-236",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 1215,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-237",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 1216,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-238",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 1217,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-239",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 1218,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-240",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 1219,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-241",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 1223,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-242",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 1224,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-243",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 1225,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-244",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 1226,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-245",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 1227,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-246",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 1228,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-247",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 1229,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-248",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 1230,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-249",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 1231,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-250",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 1232,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-251",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 1233,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-252",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 1234,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-253",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 1235,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-254",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 1236,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-255",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 1237,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-256",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 1238,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-257",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 1239,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-258",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 1240,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-259",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 1310,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-260",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 1617,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-261",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 1618,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-262",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 1619,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-263",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 1620,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-264",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 1621,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-265",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 1622,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-266",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 1623,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-267",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 1624,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-268",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 1625,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-269",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 1626,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-270",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 1627,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-271",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 1628,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-272",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 1629,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-273",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 1630,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-274",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 1631,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-275",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 1640,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-276",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 1641,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-277",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 1768,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-278",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 1772,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-279",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 1776,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-280",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 1780,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-281",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 1784,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-282",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 1788,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-283",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 1792,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-284",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 1796,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-285",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 1800,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-286",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 1926,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-287",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 1946,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-288",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 1954,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-289",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 1956,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-290",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 1967,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-291",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/url/url_test.go",
        "line": 2128,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-292",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/requestwrite_test.go",
        "line": 814,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-293",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/example_test.go",
        "line": 45,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-294",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/example_test.go",
        "line": 219,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-295",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/transport_internal_test.go",
        "line": 38,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-296",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/transport_internal_test.go",
        "line": 90,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-297",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/transport_internal_test.go",
        "line": 97,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-298",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/fs_test.go",
        "line": 1228,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-299",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/fs_test.go",
        "line": 1345,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-300",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/fs_test.go",
        "line": 1356,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-301",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/request_test.go",
        "line": 33,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-302",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/request_test.go",
        "line": 43,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-303",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/request_test.go",
        "line": 57,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-304",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/request_test.go",
        "line": 96,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-305",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/request_test.go",
        "line": 144,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-306",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/request_test.go",
        "line": 419,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-307",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/request_test.go",
        "line": 553,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-308",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/request_test.go",
        "line": 554,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-309",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/request_test.go",
        "line": 555,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-310",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/request_test.go",
        "line": 557,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-311",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/request_test.go",
        "line": 558,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-312",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/request_test.go",
        "line": 559,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-313",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/request_test.go",
        "line": 560,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-314",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/request_test.go",
        "line": 561,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-315",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/request_test.go",
        "line": 578,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-316",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/request_test.go",
        "line": 582,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-317",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/request_test.go",
        "line": 592,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-318",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/request_test.go",
        "line": 761,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-319",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/request_test.go",
        "line": 776,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-320",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/request_test.go",
        "line": 796,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-321",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/request_test.go",
        "line": 1114,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-322",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/request.go",
        "line": 1120,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-323",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/request.go",
        "line": 1128,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-324",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/serve_test.go",
        "line": 246,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-325",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/serve_test.go",
        "line": 247,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-326",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/serve_test.go",
        "line": 248,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-327",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/serve_test.go",
        "line": 252,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-328",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/serve_test.go",
        "line": 328,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-329",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/serve_test.go",
        "line": 2862,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-330",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/serve_test.go",
        "line": 2884,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-331",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/serve_test.go",
        "line": 5420,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-332",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/response_test.go",
        "line": 900,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-333",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/response_test.go",
        "line": 901,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-334",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/response_test.go",
        "line": 902,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-335",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/proxy_test.go",
        "line": 21,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-336",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/proxy_test.go",
        "line": 22,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-337",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/proxy_test.go",
        "line": 58,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-338",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/proxy_test.go",
        "line": 62,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-339",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/proxy_test.go",
        "line": 66,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-340",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/transport_test.go",
        "line": 1222,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-341",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/transport_test.go",
        "line": 1603,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-342",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/transport_test.go",
        "line": 1798,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-343",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/transport_test.go",
        "line": 1825,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-344",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/transport_test.go",
        "line": 1834,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-345",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/transport_test.go",
        "line": 2839,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-346",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/transport_test.go",
        "line": 3100,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-347",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/transport_test.go",
        "line": 3286,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-348",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/transport_test.go",
        "line": 3470,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-349",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/transport_test.go",
        "line": 3472,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-350",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/transport_test.go",
        "line": 3477,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-351",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/transport_test.go",
        "line": 3566,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-352",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/transport_test.go",
        "line": 3904,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-353",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/transport_test.go",
        "line": 3916,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-354",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/transport_test.go",
        "line": 3927,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-355",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/transport_test.go",
        "line": 3940,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-356",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/transport_test.go",
        "line": 5373,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-357",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/transport_test.go",
        "line": 5409,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-358",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/transport_test.go",
        "line": 5493,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-359",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/transport_test.go",
        "line": 5707,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-360",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/transport_test.go",
        "line": 5968,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-361",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/transport_test.go",
        "line": 6072,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-362",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/transport_test.go",
        "line": 7258,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-363",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/transport_test.go",
        "line": 7295,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-364",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/client_test.go",
        "line": 107,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-365",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/client_test.go",
        "line": 125,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-366",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/client_test.go",
        "line": 152,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-367",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/client_test.go",
        "line": 593,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-368",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/client_test.go",
        "line": 684,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-369",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/client_test.go",
        "line": 693,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-370",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/client_test.go",
        "line": 697,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-371",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/client_test.go",
        "line": 702,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-372",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/client_test.go",
        "line": 703,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-373",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/client_test.go",
        "line": 704,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-374",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/client_test.go",
        "line": 705,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-375",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/client_test.go",
        "line": 706,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-376",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/client_test.go",
        "line": 1060,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-377",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/client_test.go",
        "line": 1095,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-378",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/client_test.go",
        "line": 1139,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-379",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/client_test.go",
        "line": 1140,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-380",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/client_test.go",
        "line": 1144,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-381",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/client_test.go",
        "line": 1145,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-382",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/client_test.go",
        "line": 1149,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-383",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/client_test.go",
        "line": 1150,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-384",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/client_test.go",
        "line": 1154,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-385",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/client_test.go",
        "line": 1155,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-386",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/client_test.go",
        "line": 1413,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-387",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/client_test.go",
        "line": 1417,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-388",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/client_test.go",
        "line": 1421,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-389",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/client_test.go",
        "line": 1425,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-390",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/client_test.go",
        "line": 1426,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-391",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/client_test.go",
        "line": 1429,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-392",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/client_test.go",
        "line": 1430,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-393",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/client_test.go",
        "line": 1472,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-394",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/client_test.go",
        "line": 1604,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-395",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/client_test.go",
        "line": 1646,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-396",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/client_test.go",
        "line": 1765,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-397",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/client_test.go",
        "line": 1766,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-398",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/client_test.go",
        "line": 1767,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-399",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/client_test.go",
        "line": 1768,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-400",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/client_test.go",
        "line": 1769,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-401",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/client_test.go",
        "line": 1770,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-402",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/client_test.go",
        "line": 1771,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-403",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/client_test.go",
        "line": 1774,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-404",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/client_test.go",
        "line": 1775,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-405",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/client_test.go",
        "line": 1776,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-406",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/client_test.go",
        "line": 1777,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-407",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/client_test.go",
        "line": 1778,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-408",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/client_test.go",
        "line": 1779,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-409",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/client_test.go",
        "line": 1780,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-410",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/client_test.go",
        "line": 1781,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-411",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/client_test.go",
        "line": 1782,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-412",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/client_test.go",
        "line": 1784,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-413",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/client_test.go",
        "line": 1785,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-414",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/client_test.go",
        "line": 1786,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-415",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/client_test.go",
        "line": 1787,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-416",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/client_test.go",
        "line": 1788,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-417",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/client_test.go",
        "line": 1789,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-418",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/client_test.go",
        "line": 1790,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-419",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/client_test.go",
        "line": 1791,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-420",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/client_test.go",
        "line": 1792,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-421",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/readrequest_test.go",
        "line": 68,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-422",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/httptest/server.go",
        "line": 149,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-423",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/httptest/httptest_test.go",
        "line": 70,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-424",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/httptest/httptest_test.go",
        "line": 86,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-425",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/httptest/recorder_test.go",
        "line": 299,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-426",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/httptest/recorder_test.go",
        "line": 366,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-427",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/httputil/example_test.go",
        "line": 55,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-428",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/httputil/dump.go",
        "line": 245,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-429",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/httputil/reverseproxy_test.go",
        "line": 826,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-430",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/httputil/reverseproxy_test.go",
        "line": 1111,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-431",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/httputil/reverseproxy_test.go",
        "line": 1143,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-432",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/httputil/reverseproxy_test.go",
        "line": 1216,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-433",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/httputil/reverseproxy_test.go",
        "line": 1922,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-434",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/httputil/reverseproxy_test.go",
        "line": 2147,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-435",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cgi/host_test.go",
        "line": 341,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-436",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cgi/child.go",
        "line": 113,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-437",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 442,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-438",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 446,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-439",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 447,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-440",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 448,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-441",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 455,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-442",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 456,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-443",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 457,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-444",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 462,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-445",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 466,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-446",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 467,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-447",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 468,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-448",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 476,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-449",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 480,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-450",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 481,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-451",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 482,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-452",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 483,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-453",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 484,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-454",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 485,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-455",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 486,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-456",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 487,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-457",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 492,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-458",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 496,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-459",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 497,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-460",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 498,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-461",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 499,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-462",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 500,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-463",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 501,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-464",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 502,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-465",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 503,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-466",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 508,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-467",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 512,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-468",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 513,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-469",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 514,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-470",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 515,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-471",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 516,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-472",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 517,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-473",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 518,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-474",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 519,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-475",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 524,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-476",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 528,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-477",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 529,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-478",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 530,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-479",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 535,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-480",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 543,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-481",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 544,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-482",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 545,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-483",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 550,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-484",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 562,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-485",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 563,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-486",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 564,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-487",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 569,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-488",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 581,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-489",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 582,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-490",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 587,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-491",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 593,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-492",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 597,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-493",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 600,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-494",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 604,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-495",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 612,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-496",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 613,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-497",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 614,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-498",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 619,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-499",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 623,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-500",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 624,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-501",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 629,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-502",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 633,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-503",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 634,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-504",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 635,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-505",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 649,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-506",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 659,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-507",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 678,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-508",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 686,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-509",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 692,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-510",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 700,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-511",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 706,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-512",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 711,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-513",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 715,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-514",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 722,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-515",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 726,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-516",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 733,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-517",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 737,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-518",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 745,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-519",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 746,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-520",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 751,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-521",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 755,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-522",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 756,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-523",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 761,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-524",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 765,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-525",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 766,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-526",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 771,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-527",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 775,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-528",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 776,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-529",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 781,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-530",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 785,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-531",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 786,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-532",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 791,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-533",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 797,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-534",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 798,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-535",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 803,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-536",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 809,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-537",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 810,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-538",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 826,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-539",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 837,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-540",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 838,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-541",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 839,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-542",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 840,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-543",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 841,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-544",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 860,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-545",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 866,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-546",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 871,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-547",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 879,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-548",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 880,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-549",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 881,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-550",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 882,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-551",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 887,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-552",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 897,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-553",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 898,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-554",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 903,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-555",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 922,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-556",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 926,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-557",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 929,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-558",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 933,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-559",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 936,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-560",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 940,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-561",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 944,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-562",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 945,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-563",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 946,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-564",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 951,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-565",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 956,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-566",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 960,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-567",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 963,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-568",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 967,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-569",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 972,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-570",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 976,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-571",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 979,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-572",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 983,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-573",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 986,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-574",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 990,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-575",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 994,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-576",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 995,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-577",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 1000,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-578",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 1005,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-579",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 1009,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-580",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 1014,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-581",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 1018,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-582",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 1024,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-583",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 1025,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-584",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 1026,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-585",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 1031,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-586",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 1036,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-587",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 1040,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-588",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 1044,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-589",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 1045,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-590",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 1046,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-591",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 1047,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-592",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 1048,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-593",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 1049,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-594",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 1066,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-595",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 1069,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-596",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 1073,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-597",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 1076,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-598",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 1080,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-599",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 1083,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-600",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 1087,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-601",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 1090,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-602",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 1094,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-603",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 1097,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-604",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 1101,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-605",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 1104,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-606",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 1108,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-607",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 1111,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-608",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 1127,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-609",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 1130,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-610",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 1134,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-611",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 1137,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-612",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 1141,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-613",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 1144,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-614",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 1148,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-615",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 1151,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-616",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 1155,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-617",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 1158,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-618",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 1162,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-619",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 1165,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-620",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 1169,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-621",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 1172,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-622",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 1176,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-623",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 1179,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-624",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 1195,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-625",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 1199,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-626",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 1200,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-627",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 1201,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-628",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 1202,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-629",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 1203,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-630",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 1204,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-631",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 1209,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-632",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 1213,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-633",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 1214,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-634",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 1215,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-635",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 1216,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-636",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 1217,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-637",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 1218,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-638",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 1223,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-639",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 1227,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-640",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 1228,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-641",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 1229,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-642",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 1230,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-643",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 1231,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-644",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 1232,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-645",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 1237,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-646",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 1241,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-647",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 1242,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-648",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 1243,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-649",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 1244,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-650",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 1245,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-651",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 1246,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-652",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 1247,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-653",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 1248,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-654",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 1249,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-655",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 1250,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-656",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 1255,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-657",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 1259,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-658",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 1260,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-659",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 1261,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-660",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 1262,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-661",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 1263,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-662",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 1264,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-663",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 1265,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-664",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 1266,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-665",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 1267,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-666",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 1268,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-667",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 1273,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-668",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 1277,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-669",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 1278,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-670",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 1279,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-671",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 1280,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-672",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 1281,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-673",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 1282,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-674",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 1283,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-675",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 1284,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-676",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 1285,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-677",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 1286,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-678",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 1291,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-679",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 1295,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-680",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 1296,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-681",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 1297,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-682",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 1298,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-683",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 1299,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-684",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 1300,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-685",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 1301,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-686",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 1302,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-687",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 1303,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-688",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 1304,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-689",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 1309,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-690",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 1313,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-691",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 1314,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-692",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 1315,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-693",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 1320,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-694",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 1324,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-695",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 1325,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-696",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 1326,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-697",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 1331,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-698",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 1335,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-699",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 1336,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-700",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 1337,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-701",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 1338,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-702",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 1339,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-703",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 1344,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-704",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 1348,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-705",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 1349,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-706",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 1350,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-707",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 1351,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-708",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/net/http/cookiejar/jar_test.go",
        "line": 1352,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-709",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/crypto/x509/name_constraints_test.go",
        "line": 1078,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-710",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/crypto/x509/name_constraints_test.go",
        "line": 1096,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-711",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/crypto/x509/x509_test.go",
        "line": 2514,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-712",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/crypto/x509/x509_test.go",
        "line": 2515,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-713",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/cmd/go/go_test.go",
        "line": 140,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-714",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/cmd/go/proxy_test.go",
        "line": 60,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-715",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/cmd/trace/main.go",
        "line": 152,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-716",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/cmd/pprof/pprof.go",
        "line": 61,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-717",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/cmd/pprof/pprof.go",
        "line": 130,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-718",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/cmd/go/internal/vcs/discovery_test.go",
        "line": 29,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-719",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/cmd/go/internal/vcs/discovery_test.go",
        "line": 53,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-720",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/cmd/go/internal/vcs/vcs_test.go",
        "line": 476,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-721",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/cmd/go/internal/doc/pkgsite.go",
        "line": 43,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-722",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/cmd/vet/testdata/httpresponse/httpresponse.go",
        "line": 13,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-723",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/cmd/vet/testdata/httpresponse/httpresponse.go",
        "line": 21,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-724",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/misc/ios/go_ios_exec.go",
        "line": 305,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-725",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/misc/ios/go_ios_exec.go",
        "line": 325,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-726",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/misc/ios/go_ios_exec.go",
        "line": 342,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-727",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/syscall/mkall.sh",
        "line": 140,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-728",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/syscall/mkall.sh",
        "line": 146,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-729",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/syscall/mkall.sh",
        "line": 151,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-730",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/syscall/mkall.sh",
        "line": 157,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-731",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/syscall/mkall.sh",
        "line": 164,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-732",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/syscall/mkall.sh",
        "line": 196,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-733",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/syscall/mkall.sh",
        "line": 283,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-734",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/syscall/mkall.sh",
        "line": 289,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-735",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/syscall/mkall.sh",
        "line": 295,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-736",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/syscall/mkall.sh",
        "line": 301,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-737",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/syscall/mkall.sh",
        "line": 310,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-738",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/syscall/mkall.sh",
        "line": 320,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-739",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/syscall/mkall.sh",
        "line": 330,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-740",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/syscall/mkall.sh",
        "line": 342,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-741",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/syscall/mkall.sh",
        "line": 354,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-742",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/syscall/mkall.sh",
        "line": 365,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      },
      {
        "id": "SC-743",
        "title": "Insecure HTTP request",
        "category": "network",
        "severity": "Medium",
        "cvss_score": 6.5,
        "file": "/private/tmp/golang_scan/src/syscall/mkall.sh",
        "line": 377,
        "description": "Code makes request over insecure HTTP protocol",
        "impact": "Data transmitted over HTTP can be intercepted and modified",
        "remediation": "Use HTTPS for all external requests"
      }
    ],
    "secrets": [
      {
        "id": "SECRET-001",
        "type": "aws_access_key",
        "severity": "Critical",
        "cvss_score": 9.8,
        "confidence": 0.95,
        "file": "src/strings/strings_test.go",
        "line": 635,
        "description": "AWS Access Key ID",
        "impact": "Full access to AWS account resources, data exfiltration, resource hijacking"
      },
      {
        "id": "SECRET-002",
        "type": "generic_credential",
        "severity": "Medium",
        "cvss_score": 6.5,
        "confidence": 0.5,
        "file": "src/mime/multipart/multipart_test.go",
        "line": 613,
        "description": "Potential Credential",
        "impact": "Unauthorized access and potential system compromise"
      },
      {
        "id": "SECRET-003",
        "type": "generic_credential",
        "severity": "Medium",
        "cvss_score": 6.5,
        "confidence": 0.5,
        "file": "src/crypto/x509/x509_test.go",
        "line": 93,
        "description": "Potential Credential",
        "impact": "Unauthorized access and potential system compromise"
      },
      {
        "id": "SECRET-004",
        "type": "generic_credential",
        "severity": "Medium",
        "cvss_score": 6.5,
        "confidence": 0.5,
        "file": "src/crypto/x509/x509_test.go",
        "line": 203,
        "description": "Potential Credential",
        "impact": "Unauthorized access and potential system compromise"
      },
      {
        "id": "SECRET-005",
        "type": "ec_private_key",
        "severity": "Critical",
        "cvss_score": 9.8,
        "confidence": 1.0,
        "file": "src/crypto/x509/platform_root_key.pem",
        "line": 1,
        "description": "EC Private Key",
        "impact": "Unauthorized access and potential system compromise"
      },
      {
        "id": "SECRET-006",
        "type": "ec_private_key",
        "severity": "Critical",
        "cvss_score": 9.8,
        "confidence": 1.0,
        "file": "src/crypto/tls/example_test.go",
        "line": 136,
        "description": "EC Private Key",
        "impact": "Unauthorized access and potential system compromise"
      },
      {
        "id": "SECRET-007",
        "type": "ec_private_key",
        "severity": "Critical",
        "cvss_score": 9.8,
        "confidence": 1.0,
        "file": "src/crypto/tls/example_test.go",
        "line": 165,
        "description": "EC Private Key",
        "impact": "Unauthorized access and potential system compromise"
      },
      {
        "id": "SECRET-008",
        "type": "generic_credential",
        "severity": "Medium",
        "cvss_score": 6.5,
        "confidence": 0.5,
        "file": "src/crypto/ecdh/ecdh_test.go",
        "line": 123,
        "description": "Potential Credential",
        "impact": "Unauthorized access and potential system compromise"
      },
      {
        "id": "SECRET-009",
        "type": "generic_credential",
        "severity": "Medium",
        "cvss_score": 6.5,
        "confidence": 0.5,
        "file": "src/crypto/ecdh/ecdh_test.go",
        "line": 124,
        "description": "Potential Credential",
        "impact": "Unauthorized access and potential system compromise"
      },
      {
        "id": "SECRET-010",
        "type": "generic_credential",
        "severity": "Medium",
        "cvss_score": 6.5,
        "confidence": 0.5,
        "file": "src/crypto/ecdh/ecdh_test.go",
        "line": 126,
        "description": "Potential Credential",
        "impact": "Unauthorized access and potential system compromise"
      },
      {
        "id": "SECRET-011",
        "type": "generic_secret",
        "severity": "High",
        "cvss_score": 8.5,
        "confidence": 0.75,
        "file": "src/crypto/ecdh/ecdh_test.go",
        "line": 128,
        "description": "Generic Secret Key",
        "impact": "Unauthorized access and potential system compromise"
      },
      {
        "id": "SECRET-012",
        "type": "generic_credential",
        "severity": "Medium",
        "cvss_score": 6.5,
        "confidence": 0.5,
        "file": "src/crypto/ecdh/ecdh_test.go",
        "line": 128,
        "description": "Potential Credential",
        "impact": "Unauthorized access and potential system compromise"
      },
      {
        "id": "SECRET-013",
        "type": "generic_credential",
        "severity": "Medium",
        "cvss_score": 6.5,
        "confidence": 0.5,
        "file": "src/crypto/ecdh/ecdh_test.go",
        "line": 131,
        "description": "Potential Credential",
        "impact": "Unauthorized access and potential system compromise"
      },
      {
        "id": "SECRET-014",
        "type": "generic_credential",
        "severity": "Medium",
        "cvss_score": 6.5,
        "confidence": 0.5,
        "file": "src/crypto/ecdh/ecdh_test.go",
        "line": 132,
        "description": "Potential Credential",
        "impact": "Unauthorized access and potential system compromise"
      },
      {
        "id": "SECRET-015",
        "type": "generic_credential",
        "severity": "Medium",
        "cvss_score": 6.5,
        "confidence": 0.5,
        "file": "src/crypto/ecdh/ecdh_test.go",
        "line": 134,
        "description": "Potential Credential",
        "impact": "Unauthorized access and potential system compromise"
      },
      {
        "id": "SECRET-016",
        "type": "generic_secret",
        "severity": "High",
        "cvss_score": 8.5,
        "confidence": 0.75,
        "file": "src/crypto/ecdh/ecdh_test.go",
        "line": 136,
        "description": "Generic Secret Key",
        "impact": "Unauthorized access and potential system compromise"
      },
      {
        "id": "SECRET-017",
        "type": "generic_credential",
        "severity": "Medium",
        "cvss_score": 6.5,
        "confidence": 0.5,
        "file": "src/crypto/ecdh/ecdh_test.go",
        "line": 136,
        "description": "Potential Credential",
        "impact": "Unauthorized access and potential system compromise"
      },
      {
        "id": "SECRET-018",
        "type": "generic_credential",
        "severity": "Medium",
        "cvss_score": 6.5,
        "confidence": 0.5,
        "file": "src/crypto/ecdh/ecdh_test.go",
        "line": 142,
        "description": "Potential Credential",
        "impact": "Unauthorized access and potential system compromise"
      },
      {
        "id": "SECRET-019",
        "type": "generic_credential",
        "severity": "Medium",
        "cvss_score": 6.5,
        "confidence": 0.5,
        "file": "src/crypto/ecdh/ecdh_test.go",
        "line": 143,
        "description": "Potential Credential",
        "impact": "Unauthorized access and potential system compromise"
      },
      {
        "id": "SECRET-020",
        "type": "generic_credential",
        "severity": "Medium",
        "cvss_score": 6.5,
        "confidence": 0.5,
        "file": "src/crypto/ecdh/ecdh_test.go",
        "line": 145,
        "description": "Potential Credential",
        "impact": "Unauthorized access and potential system compromise"
      },
      {
        "id": "SECRET-021",
        "type": "generic_secret",
        "severity": "High",
        "cvss_score": 8.5,
        "confidence": 0.75,
        "file": "src/crypto/ecdh/ecdh_test.go",
        "line": 147,
        "description": "Generic Secret Key",
        "impact": "Unauthorized access and potential system compromise"
      },
      {
        "id": "SECRET-022",
        "type": "generic_credential",
        "severity": "Medium",
        "cvss_score": 6.5,
        "confidence": 0.5,
        "file": "src/crypto/ecdh/ecdh_test.go",
        "line": 147,
        "description": "Potential Credential",
        "impact": "Unauthorized access and potential system compromise"
      },
      {
        "id": "SECRET-023",
        "type": "generic_credential",
        "severity": "Medium",
        "cvss_score": 6.5,
        "confidence": 0.5,
        "file": "src/crypto/ecdh/ecdh_test.go",
        "line": 151,
        "description": "Potential Credential",
        "impact": "Unauthorized access and potential system compromise"
      },
      {
        "id": "SECRET-024",
        "type": "generic_credential",
        "severity": "Medium",
        "cvss_score": 6.5,
        "confidence": 0.5,
        "file": "src/crypto/ecdh/ecdh_test.go",
        "line": 152,
        "description": "Potential Credential",
        "impact": "Unauthorized access and potential system compromise"
      },
      {
        "id": "SECRET-025",
        "type": "generic_credential",
        "severity": "Medium",
        "cvss_score": 6.5,
        "confidence": 0.5,
        "file": "src/crypto/ecdh/ecdh_test.go",
        "line": 153,
        "description": "Potential Credential",
        "impact": "Unauthorized access and potential system compromise"
      },
      {
        "id": "SECRET-026",
        "type": "generic_secret",
        "severity": "High",
        "cvss_score": 8.5,
        "confidence": 0.75,
        "file": "src/crypto/ecdh/ecdh_test.go",
        "line": 154,
        "description": "Generic Secret Key",
        "impact": "Unauthorized access and potential system compromise"
      },
      {
        "id": "SECRET-027",
        "type": "generic_credential",
        "severity": "Medium",
        "cvss_score": 6.5,
        "confidence": 0.5,
        "file": "src/crypto/ecdh/ecdh_test.go",
        "line": 154,
        "description": "Potential Credential",
        "impact": "Unauthorized access and potential system compromise"
      },
      {
        "id": "SECRET-028",
        "type": "ec_private_key",
        "severity": "Critical",
        "cvss_score": 9.8,
        "confidence": 1.0,
        "file": "src/crypto/tls/testdata/example-key.pem",
        "line": 1,
        "description": "EC Private Key",
        "impact": "Unauthorized access and potential system compromise"
      },
      {
        "id": "SECRET-029",
        "type": "generic_secret",
        "severity": "High",
        "cvss_score": 8.5,
        "confidence": 0.75,
        "file": "src/crypto/internal/hpke/testdata/rfc9180-vectors.json",
        "line": 1,
        "description": "Generic Secret Key",
        "impact": "Unauthorized access and potential system compromise"
      },
      {
        "id": "SECRET-030",
        "type": "generic_secret",
        "severity": "High",
        "cvss_score": 8.5,
        "confidence": 0.75,
        "file": "src/crypto/internal/hpke/testdata/rfc9180-vectors.json",
        "line": 1,
        "description": "Generic Secret Key",
        "impact": "Unauthorized access and potential system compromise"
      },
      {
        "id": "SECRET-031",
        "type": "generic_secret",
        "severity": "High",
        "cvss_score": 8.5,
        "confidence": 0.75,
        "file": "src/crypto/internal/hpke/testdata/rfc9180-vectors.json",
        "line": 1,
        "description": "Generic Secret Key",
        "impact": "Unauthorized access and potential system compromise"
      },
      {
        "id": "SECRET-032",
        "type": "generic_secret",
        "severity": "High",
        "cvss_score": 8.5,
        "confidence": 0.75,
        "file": "src/crypto/internal/hpke/testdata/rfc9180-vectors.json",
        "line": 1,
        "description": "Generic Secret Key",
        "impact": "Unauthorized access and potential system compromise"
      },
      {
        "id": "SECRET-033",
        "type": "generic_secret",
        "severity": "High",
        "cvss_score": 8.5,
        "confidence": 0.75,
        "file": "src/crypto/internal/hpke/testdata/rfc9180-vectors.json",
        "line": 1,
        "description": "Generic Secret Key",
        "impact": "Unauthorized access and potential system compromise"
      },
      {
        "id": "SECRET-034",
        "type": "generic_secret",
        "severity": "High",
        "cvss_score": 8.5,
        "confidence": 0.75,
        "file": "src/crypto/internal/hpke/testdata/rfc9180-vectors.json",
        "line": 1,
        "description": "Generic Secret Key",
        "impact": "Unauthorized access and potential system compromise"
      },
      {
        "id": "SECRET-035",
        "type": "generic_credential",
        "severity": "Medium",
        "cvss_score": 6.5,
        "confidence": 0.5,
        "file": "src/crypto/internal/hpke/testdata/rfc9180-vectors.json",
        "line": 1,
        "description": "Potential Credential",
        "impact": "Unauthorized access and potential system compromise"
      },
      {
        "id": "SECRET-036",
        "type": "generic_credential",
        "severity": "Medium",
        "cvss_score": 6.5,
        "confidence": 0.5,
        "file": "src/crypto/internal/hpke/testdata/rfc9180-vectors.json",
        "line": 1,
        "description": "Potential Credential",
        "impact": "Unauthorized access and potential system compromise"
      },
      {
        "id": "SECRET-037",
        "type": "generic_credential",
        "severity": "Medium",
        "cvss_score": 6.5,
        "confidence": 0.5,
        "file": "src/crypto/internal/hpke/testdata/rfc9180-vectors.json",
        "line": 1,
        "description": "Potential Credential",
        "impact": "Unauthorized access and potential system compromise"
      },
      {
        "id": "SECRET-038",
        "type": "generic_credential",
        "severity": "Medium",
        "cvss_score": 6.5,
        "confidence": 0.5,
        "file": "src/crypto/internal/hpke/testdata/rfc9180-vectors.json",
        "line": 1,
        "description": "Potential Credential",
        "impact": "Unauthorized access and potential system compromise"
      },
      {
        "id": "SECRET-039",
        "type": "generic_credential",
        "severity": "Medium",
        "cvss_score": 6.5,
        "confidence": 0.5,
        "file": "src/crypto/internal/hpke/testdata/rfc9180-vectors.json",
        "line": 1,
        "description": "Potential Credential",
        "impact": "Unauthorized access and potential system compromise"
      },
      {
        "id": "SECRET-040",
        "type": "generic_credential",
        "severity": "Medium",
        "cvss_score": 6.5,
        "confidence": 0.5,
        "file": "src/crypto/internal/hpke/testdata/rfc9180-vectors.json",
        "line": 1,
        "description": "Potential Credential",
        "impact": "Unauthorized access and potential system compromise"
      },
      {
        "id": "SECRET-041",
        "type": "aws_access_key",
        "severity": "Critical",
        "cvss_score": 9.8,
        "confidence": 0.95,
        "file": "src/cmd/vendor/golang.org/x/arch/riscv64/riscv64asm/csr_string.go",
        "line": 290,
        "description": "AWS Access Key ID",
        "impact": "Full access to AWS account resources, data exfiltration, resource hijacking"
      }
    ]
  }
}